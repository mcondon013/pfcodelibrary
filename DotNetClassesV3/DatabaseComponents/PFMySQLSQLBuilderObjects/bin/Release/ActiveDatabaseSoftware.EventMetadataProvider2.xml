<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ActiveDatabaseSoftware.EventMetadataProvider2</name>
    </assembly>
    <members>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.EventMetadataProvider">
            <summary>Metadata provider to work with unsupported .NET data providers or custom data sources.</summary>
            <remarks>
            	<para>Use this event on working with unsupported .NET data provider which is capable to execute SQL queries and to return the IDataReader interface in result.</para>
            	<para>See <see cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.EventMetadataProvider.ExecSQL"/> event for details.</para>
            </remarks>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.EventMetadataProvider.ExecSQL">
            <summary>Invoked when the Event Metadata Provider is requested to execute the SQL statement.</summary>
            <remarks>The metadataProvider parameter refers to the metadata provider invoked the event. The sql parameter contains the query to be executed. The
            schemaOnly flag indicates that there's no need for data retrieval for this query. Return the IDataReader interface through the dataReader parameter.</remarks>
            <example>
            	<code title="ExecSQL event sample" description="" lang="CS">
            private void EventMetadataProvider_ExecSQL(BaseMetadataProvider metadataProvider, string sql, bool schemaOnly, out IDataReader dataReader)
            {
                dataReader = null;
             
                if (dbConnection != null)
                {
                    IDbCommand command = dbConnection.CreateCommand();
                    command.CommandText = sql;
                    dataReader = command.ExecuteReader();
                }
            }</code>
            </example>
        </member>
    </members>
</doc>

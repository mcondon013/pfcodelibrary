<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ActiveDatabaseSoftware.ActiveQueryBuilder2</name>
    </assembly>
    <members>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.AstNodeBase">
            <summary>Base class for any Abstract Syntax Tree node.</summary>
            <remarks>Introduces the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AstNodeBase.SQLContext">SQL Context property</see> that's required to build SQL text for node according to the syntax rules of specific Syntax Provider and the SQL Builder settings.</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.AstNodeBase.#ctor(ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLContext)">
            <summary> Initializes a new instance of the AST node. </summary>
            <param name="sqlContext"> Specifies SQL Context for the node. </param>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AstNodeBase.SQLContext">
            <summary>Gets SQL Context for the node.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.AstNode">
            <summary>Abstract Syntax Tree node that can be extended with database server specific elements.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.AstExtender">
            <summary>Abstract Syntax Tree node that extends the SQL syntax of the owner node with database server specific elements.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AstNode.Extender">
            <summary>Abstract Syntax Tree object to extend the node with database server specific elements.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken">
            <summary>Abstract Syntax Tree node representing a single piece of text in the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken.Token">
            <summary>Gets or sets text of the token.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.AstTokenIdentifier">
            <summary>Abstract Syntax Tree node representing an identifier.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AstTokenIdentifier.CaseSensitive">
            <summary>Gets or sets the mark indicating case sensitivity of the identifier.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AstTokenIdentifier.ValidIdentifier">
            <summary>Indicates if identifier is valid or not.</summary>
            <remarks>Valid identifiers do not contain special symbols like spaces, etc., thus they do not need to be quoted.</remarks>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureTreeController">
            <summary>An object that's responsible for reflecting the structure of the Metadata Structure object in a Tree View control.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureTreeController.TreeView">
            <summary>Gets or sets the reference to the TreeView control.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureTreeController.Structure">
            <summary>Gets or sets the reference to the Metadata Structure object.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.ValidateDataTypeEventHandler">
            <summary>Event handler for determination of data type for a column in Criteria Builder.</summary>
            <param name="columnName">Output column for which to determine the data type.</param>
            <param name="dataType">Data type of the output column.</param>
            <remarks>Change the data type in order to override type of the value editor type for a column.</remarks>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder">
            <summary>The control for visual composing of criteria.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.GetPreferredSize(System.Drawing.Size)">
            <summary>Gets preferred size of control in order to fit the content in container without scrolling.</summary>
            <param name="proposedSize">Not used.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.GetQuery">
            <summary>Gets the resultant SQL query text.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.Clear">
            <summary>Clears all conditions in the control.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.IsValid">
            <summary>Indicates if the control has incomplete conditions or invalid values.</summary>
            <returns>True if all conditions are valid; false otherwise.</returns>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.ValidateDataType">
            <summary>Fired when the control is about to show the value editor for a condition.</summary>
            <remarks>
            	<para>Handle this event to override the data type of column in order to change type of the editor for it's value.</para>
            	<para>For example, you may want to change the datetime editor to date picker (without time editor).</para>
            </remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.QueryTransformer">
            <summary>Gets or sets the reference to the Query Builder object from which to take the initial query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.RootItemFont">
            <summary>Gets or sets the font of the root item.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.BackColor">
            <summary>Gets or sets the background color of control.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.ColumnNameColor">
            <summary>Gets or sets the font color of column names in conditions.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.OperatorColor">
            <summary>Gets or sets the font color of operators in conditions.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.ValueColor">
            <summary>Gets or sets the font color of values in conditions.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.InvalidValueColor">
            <summary>Gets or sets the font color of invalid values in conditions.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.LineSpacing">
            <summary>Gets or sets the spacing between condition strings.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.SQL">
            <summary>Gets the resultant SQL query text.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.RootJunctionPrefix">
            <summary>Gets or sets the string displayed before the root junction item.</summary>
            <remarks>This string can explain the meaning of each row in the recordset. For example "Select books where" or "Find products where"</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.JunctionPostfix">
            <summary>Gets or sets the string displayed after each junction item.</summary>
            <remarks>Can be used to approximate the form of conditions to the spoken language. Might be set to "of the following apply" or "of the following succeed".</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.ShowPrefixes">
            <summary>Gets or sets the sign of displaying the "or" or "and" prefix for all conditions in a junction group except the first one.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.ConjunctionButtonColor">
            <summary>Gets or sets the bar color at the left of conjuncted conditions.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.DisjunctionButtonColor">
            <summary>Gets or sets the bar color at the left of disjuncted conditions.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.DefaultCountOfLookupValues">
            <summary>Gets or sets the default number of values loaded into the lookup values dropdown list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.SkipInvalidValues">
            <summary>Determines whether the control should raise the "Invalid value" exception on reading the SQL property if unfilled or invalid conditions exist.</summary>
            <remarks>The <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.CriteriaBuilder.IsValid">IsValid method</see> lets determine if the control has invalid or unfilled conditions.</remarks>
            <value>False to raise the exception; true otherwise.</value>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.MultiLineEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.MultiLineEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.CriteriaBuilder.MultiLineEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.GroupingLevelsControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.GroupingLevelsControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.GroupingLevelsControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SearchBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SearchBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SearchBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataEditorControl.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataEditorControl.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureFilterPropertiesFrame.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureFilterPropertiesFrame.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItemPropertiesFrame.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItemPropertiesFrame.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropsMSSQLAzureForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesTeradataForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.DefaultImageListImageIndexes">
            <summary>Defines indexes of images in default metadata structure image list.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataAggregate">
            <summary>Class to represent custom aggregate functions in the Metadata Container.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem">
            <summary>Base class for all items of the Metadata Container. Represens a node in the Metadata Container tree.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FindItems``1(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataQualifiedName,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Finds metadata items matching the specified Metadata Qualified Name of specific types in the child items hierarchy.</summary>
            <overloads>Finds matching metadata items in the child items hierarchy; loads items from database if necessary and allowed by the QueryBuilder.OfflineMode
            property.</overloads>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FindItems``1(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataQualifiedName)">
            <summary>Finds metadata items matching the specified Metadata Qualified Name in the child items hierarchy.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FindItems``1(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Finds metadata items matching the specified SQL Qualified Name of specific types in the child items hierarchy.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FindItems``1(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName)">
            <summary>Finds metadata items matching the specified SQL Qualified Name in the child items hierarchy.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FindItems``1(System.String,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Finds metadata items matching the specified string of specific types in the child items hierarchy.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FindItems``1(System.String)">
            <summary>Finds metadata items matching the specified string in the child items hierarchy.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FindItems``1(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilter,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Finds metadata items according to the specified Metadata Filter of specific types in the child items hierarchy.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FindItems``1(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Finds metadata items of specific types in the child items hierarchy.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FindItem``1(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataQualifiedName,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Finds first metadata item matching the specified Metadata Qualified Name of specific types in the child items hierarchy.</summary>
            <overloads>Finds the first matching metadata item in the child items hierarchy; loads items from database if necessary and allowed by the
            QueryBuilder.OfflineMode property.</overloads>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FindItem``1(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataQualifiedName)">
            <summary>Finds first metadata item matching the specified Metadata Qualified Name in the child items hierarchy.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FindItem``1(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Finds first item matching the specified SQL Qualified Name of specific types in the child items hierarchy.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FindItem``1(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName)">
            <summary>Finds first metadata item matching the specified SQL Qualified Name in the child items hierarchy.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FindItem``1(System.String,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Finds first metadata item matching the specified string of specific types in the child items hierarchy.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FindItem``1(System.String)">
            <summary>Finds first metadata item matching the specified string in the child items hierarchy.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.LoadAll(System.Boolean)">
            <summary>Recursively loads metadata for all items.</summary>
            <param name="withFields">Instructs to load fields for database objects (true) or not (false).</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AddNamespace(System.String,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Adds and returns new child metadata item of the specified namespace type.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AddObject(System.String,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Adds and returns new child metadata item of the specified database object type.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AddServer(System.String)">
            <summary>Adds and returns new child metadata item of the Server type.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AddDatabase(System.String)">
            <summary>Adds and returns new child metadata item of the Database type.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AddSchema(System.String)">
            <summary>Adds and returns new child metadata item of the Schema type.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AddPackage(System.String)">
            <summary>Adds and returns new child metadata item of the Package type.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AddTable(System.String)">
            <summary>Adds and returns new child metadata item of the Table type.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AddView(System.String)">
            <summary>Adds and returns new child metadata item of the View type.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AddProcedure(System.String)">
            <summary>Adds and returns new child metadata item of the Procedure type.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AddSynonym(System.String)">
            <summary>Adds and returns new child metadata item of the Synonym type.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AddParameter(System.String)">
            <summary>Adds and returns new child metadata item of the Parameter type.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AddField(System.String)">
            <summary>Adds and returns new child metadata item of the Field type.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AddForeignKey(System.String)">
            <summary>Adds and returns new child metadata item of the Foreign Key type.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.MetadataChildItemAdded">
            <summary>Fires on adding a child metadata item to the hierarchy of child items.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.MetadataChildItemRemoving">
            <summary>Fires on removing a metadata item from the hierarchy of child items.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.NameChanged">
            <summary>Fires on changing the name of metadata item.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Name"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AltNameChanged">
            <summary>Fires on changing the alternate name of metadata item.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AltName"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.DefaultChanged">
            <summary>Fires on changing the Default attribute of metadata item.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Default"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.SystemChanged">
            <summary>Fires on changing the System attribute of metadata item.</summary>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.SystemChanged"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.FilteringPropsChanged">
            <summary>Fires on changing the attributes of metadata item that affect the filtering.</summary>
            <remarks>The event is fired on changing the AltName, Name, Default and System properties.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Type">
            <summary>Determines the type of Metadata Item (root, namespace, database object, field, etc.).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.SQLContext">
            <summary>Refers to the context for SQL generation, SQL parsing and metadata loading purposes.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Name">
            <summary>Unquoted name of the metadata item.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.NameQuoted">
            <summary>Name of the metadata item, quoted if required.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.NameFull">
            <summary>Returns fully qualified name of the metadata item in form [database].[schema].[name].</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.AltName">
            <summary>Alternate name of the metadata item.</summary>
            <remarks>This name will subsitute the real name when usage of the alternate names is activated.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.UseAltNames">UseAltNames Property</seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Default">
            <summary>Indicates if the namespace metadata item is default one.</summary>
            <remarks>if this item can be omitted in the</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.System">
            <summary>Indicates if the metadata item is system or user object.</summary>
            <remarks>System objects are usually hidden from the database schema tree.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Description">
            <summary>Description of the metadata item.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Tag">
            <summary>Can hold custom data for the item at run-time.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.UserData">
            <summary>Can hold custom text data for the item. This data will be stored and loaded from XML snapshot.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Items">
            <summary>Lists the child nodes of this one.</summary>
            <value>List of the child Metadata Item objects.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.ParentItems">
            <summary>Points to the list of child metadata items of the parent node.</summary>
            <remarks>This list contains the reference to itself.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Parent">
            <summary>Points to the parent node of the tree.</summary>
            <value>Reference to the parent Metadata Item object. Null for the root node.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Object">
            <summary>Refers to the parent node of database object type.</summary>
            <value>Returns the first found metadata item of the database bject type from the parent items hierarchy.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Package">
            <summary>Refers to the parent node of Package type.</summary>
            <value>Returns the first found metadata item of the Package type from the parent items hierarchy.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Schema">
            <summary>Refers to the parent node of Schema type.</summary>
            <value>Returns the first found metadata item of the Schema type from the parent items hierarchy.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Database">
            <summary>Refers to the parent node of Database type.</summary>
            <value>Returns the first found metadata item of the Database type from the parent items hierarchy.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Server">
            <summary>Refers to the parent node of Server type.</summary>
            <value>Returns the first found metadata item of the Server type from the parent items hierarchy.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.MetadataContainer">
            <summary>Refers to the Metadata Container object to which this item belongs to.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer">
            <summary>Stores the necessary metadata from database.</summary>
            <remarks>Metadata Container was reorganized from the plain list of objects to the hierarchical structure. There are three types of elements of this structure:
            namespaces, objects and sub-object items. Namespaces reflect object grouping in the database server. They can represent linked servers, databases, schemas and
            packages. Objects can be tables, views, synonyms, stored procedures or functions (only those procedures and functions that return dataset and can be used as
            data sources in the SELECT queries). The component deals with three types of sub-object items: fields, parameters and foreign keys, as these types of items are
            needed by the component to build queries and to represent them visually.</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.AbortMetadataLoading">
            <summary>Aborts the metadata loading process.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.Clear">
            <summary>
            Removes all items from metadata container.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ExportToXML(System.String)">
            <summary>Saves the content of Metadata Container to file in a form of XML document.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ExportToXML(System.IO.Stream)">
            <summary>Saves the content of Metadata Container to stream in a form of XML document.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ImportFromXML(System.String)">
            <summary>Loads the content of Metadata Container from file in a form of XML document.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ImportFromXML(System.IO.Stream)">
            <summary>Loads the content of Metadata Container from stream in a form of XML document.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ItemMetadataLoading">
            <summary>Fired when the component requests child metadata items for an item.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ItemMetadataLoaded">
            <summary>Fired when the component has finished loading of child metadata items for an item.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.FilterMetadataItem">
            <summary>Allows to deny addition of unwanted objects to the Metadata Container.</summary>
            <remarks>Handler of this event should analyze the passed Metadata Item and set the abort flag to true to deny it's addition to the Metadata Container.</remarks>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ConnectionIdle">
            <summary>Fired when metadata object has finised loading of child metadata items.</summary>
            <remarks>It allows for closing the database connection if it's not desirable to keep it open during the work session.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.LoadingOptions">
            <summary>Determines rules of loading database schema information to the Metadata Container.</summary>
            <remarks>Definition of these rules is required to limit the list of database objects displayed in the tree, as well as to reduce metadata loading time
            (for some database servers, e.g. Oracle).<br/>
            Formerly named as <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilter">MetadataFilter</see>, the new option set introduces a simpler way to define metadata
            loading rules using <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.ExcludeFilter">ExcludeFilter</see> and <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.IncludeFilter">IncludeFilter</see> mask sets and other
            properties, but the old way is preserved due to higher flexibility and for compatibility reasons. The result set of objects to be loaded is determined using
            both old and new rules.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.OfflineMode">
            <summary>Allows to switch the component between normal and "Offline" modes.</summary>
            <remarks>
            	<para>The Offline mode is intended to suppress background query execution by the component. In normal mode the component retrieves field lists for objects used in
            the query and the lists of database objects by demand. Working in the Offline mode you have to provide the way to load the necessary information
            programmatically.</para>
            	<para>You can use the <see cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ItemMetadataLoading">MetadataContainer.ItemMetadataLoading Event</see> for this purpose. To decrease metadata loading time and
            to limit the objects visible to the end-user you may define <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions">metadata filters</see> to limit the number of objects loaded at a time, or you
            can <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ExportToXML">save</see> the content of Metadata Container to the XML file and <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ImportFromXML">load</see> metadata from the XML
            file or stream.</para>
            </remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.XML">
            <summary>Gets or sets the content of Metadata Container as string in a form of XML document.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType">
            <summary>Type of MetadataItem object</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.Root">
            <summary>Determines the root node of the metadata tree.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.Server">
            <summary>Determines the Server namespace node.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.Database">
            <summary>Determines the Database namespace node.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.Schema">
            <summary>Determines the Schema namespace node.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.Package">
            <summary>Determines the Package namespace node.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.Namespaces">
            <summary>Unites all possible namespace nodes: Server, Database, Schema, Package.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.Table">
            <summary>Determines the Table database object node.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.View">
            <summary>Determines the View database object node.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.Procedure">
            <summary>Determines the Stored Procedure or Function database object node.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.Synonym">
            <summary>Determines the Synonym database object node.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.Objects">
            <summary>Unites all possible database object nodes: Table, View, Procedure, Synonym.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.Aggregate">
            <summary>Determines the aggregate function.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.Parameter">
            <summary>Determines the Parameter node of a database object.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.Field">
            <summary>Determines the Field node of a database object.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.ForeignKey">
            <summary>Determines the Foreign Key node of a database object.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.ObjectMetadata">
            <summary>Unites all possible child nodes of database objects: Field, Parameter, Foreign Key.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.UserQuery">
            <summary>Determines the user query virtual object node.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType.All">
            <summary>Unites all possible values of this type.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItemEventHandler">
            <summary>Type to handle events for metadata container items.</summary>
            <param name="metadataItemSender">Sender metadata item.</param>
            <param name="metadataItem">Metadata item to handle.</param>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList">
            <summary>List of metadata items.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.GetItems``1(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Returns the list of all metadata items.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.GetItemsRecursive``1(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Returns the list of all metadata items and items of child lists recursively.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.GetDefaultItems``1(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Returns the list of default metadata items.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Clear(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Removes the metadata items of specified types from the list.</summary>
            <overloads>Removes items from the list.</overloads>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Clear">
            <summary>Removes all items from the list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindIndices``1(System.String)">
            <summary>Returns the list of indexes of metadata items that match the string name.</summary>
            <overloads>Finds and returns the list of matching item indexes from the list.</overloads>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindIndices``1(System.String,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Returns the list of indexes of metadata items of the specified types that match the string name.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindIndices``1(ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken)">
            <summary>Returns the list of indexes of metadata items that match the name defined by AST token identifier.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindIndices``1(ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Returns the list of indexes of metadata items of the specified types that match the name defined by AST token identifier.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindIndices``1(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataQualifiedNamePart)">
            <summary>Returns the list of indexes of metadata items that match the name defined by MetadataQualifiedNamePart.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindItems``1(System.String)">
            <summary>Returns the list of metadata items that match the string name.</summary>
            <overloads>Finds and returns the list of matching items from the list.</overloads>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindItems``1(System.String,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Returns the list of metadata items of the specified types that match the string name.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindItems``1(ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken)">
            <summary>Returns the list of metadata items that match the name defined by AST token identifier.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindItems``1(ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Returns the list of metadata items of the specified types that match the name defined by AST token identifier.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindItems``1(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataQualifiedNamePart)">
            <summary>Returns the list of metadata items that match the name defined by MetadataQualifiedNamePart.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindIndex``1(System.String)">
            <summary>Returns the index of first found metadata item that matches the string name.</summary>
            <overloads>Finds and returns index of the first matching item in the list.</overloads>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindIndex``1(System.String,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Returns the index of first found metadata item of the specified types that matches the string name.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindIndex``1(ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken)">
            <summary>Returns the index of first found metadata item that matches the name defined by AST token identifier.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindIndex``1(ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Returns the index of first found metadata item of the specified type that matches the name defined by AST token identifier.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindIndex``1(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataQualifiedNamePart)">
            <summary>Returns the index of first found metadata item that matches the name defined by MetadataQualifiedNamePart.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindItem``1(System.String)">
            <summary>Returns the first found metadata item that matches the string name.</summary>
            <overloads>Finds and returns the first matching item in the list.</overloads>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindItem``1(System.String,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Returns the first found metadata item of the specified types that matches the string name.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindItem``1(ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken)">
            <summary>Returns the first found metadata item that matches the name defined by AST token identifier.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindItem``1(ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Returns the first found metadata item of the specified type that matches the name defined by AST token identifier.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindItem``1(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataQualifiedNamePart)">
            <summary>Returns the first found metadata item that matches the name defined by MetadataQualifiedNamePart.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.IsLoaded(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Indicates if the specified types of metadata items have been loaded to the list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.SetLoaded(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType,System.Boolean)">
            <summary>Sets or clears the Loaded marker for specific types of metadata items.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Load(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType,System.Boolean)">
            <summary>Loads specified types of metadata items to the list.</summary>
            <param name="loadTypes">Types of metadata items to load to the list.</param>
            <param name="recursive">True to load metadata items recursively; false to load items of this list only.</param>
            <remarks>On loading metadata items recursively, the loadTypes parameter will be appiled to recursive calls of this method for child lists.</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Load(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType,System.String)">
            <summary>Loads specified types of metadata items to the list by mask.</summary>
            <param name="loadTypes">Types of metadata items to load to the list.</param>
            <param name="mask">Mask that metadata item names should match.</param>
            <remarks>Mask act similar to the "LIKE" SQL operator. Use the percent sign (%) to represent any sequence of characters; use the underscore sign (_) to represent any
            single character.</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindForeignKeys(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNameList,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataQualifiedName,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNameList)">
            <summary>Returns the list of metadata items of the Foreign Key type with the given fields, parent object and parent object fields.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.FindForeignKey(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNameList,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataQualifiedName,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNameList)">
            <summary>Returns the first found metadata item of the Foreign Key type with the given fields, parent object and parent object fields.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.SQLContext">
            <summary>Refers to the context for SQL generation, SQL parsing and metadata loading purposes.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Parent">
            <summary>Refers to the parent metadata item.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Parameters">
            <summary>Lists metadata items of the Parameter type.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Fields">
            <summary>Lists metadata items of the Field type.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.ForeignKeys">
            <summary>Lists metadata items of the Foreign Key type.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Objects">
            <summary>Lists metadata items of the all database object types (Table, View, Procedure, Synonym).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Tables">
            <summary>Lists metadata items of the Table type.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Views">
            <summary>Lists metadata items of the View type.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Procedures">
            <summary>Lists metadata items of the Procedure type.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Synonyms">
            <summary>Lists metadata items of the Synonym type.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Namespaces">
            <summary>Lists metadata items of the all namespace types (Server, Package, Database, Schema).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Servers">
            <summary>Lists metadata items of the Server type.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Databases">
            <summary>Lists metadata items of the Database type.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Schemas">
            <summary>Lists metadata items of the Schema type.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Packages">
            <summary>Lists metadata items of the Package type.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNamesFetcher">
            <summary>Helper object to get list of available namespaces in the database.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNamesFetcher.GetServerNames(ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLContext)">
            <summary>Gets list of server names available within the current connection.</summary>
            <param name="sqlContext">Determines the current database connection and SQL syntax.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNamesFetcher.GetDatabaseNames(ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLContext,System.String)">
            <summary>Gets list of database names available within the current connection.</summary>
            <param name="sqlContext">Determines the current database connection and SQL syntax.</param>
            <param name="parentName">Defines the server name to retrieve the list of databases for.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNamesFetcher.GetDefaultDatabaseNames(ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLContext,System.String)">
            <summary>Gets list of default database names available within the current connection.</summary>
            <param name="sqlContext">Determines the current database connection and SQL syntax.</param>
            <param name="parentName">Defines the server name to retrieve the list of databases for.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNamesFetcher.GetSchemaNames(ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLContext,System.String)">
            <summary>Gets list of schema names available within the current connection.</summary>
            <param name="sqlContext">Determines the current database connection and SQL syntax.</param>
            <param name="parentName">Defines the server and database name to retrieve the list of schemas for. Example: "server.database" or "database".</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNamesFetcher.GetDefaultSchemaNames(ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLContext,System.String)">
            <summary>Gets list of default schema names available within the current connection.</summary>
            <param name="sqlContext">Determines the current database connection and SQL syntax.</param>
            <param name="parentName">Defines the server and database name to retrieve the list of schemas for. Example: "server.database" or "database".</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNamesFetcher.GetPackageNames(ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLContext,System.String)">
            <summary>Gets list of package names available within the current connection.</summary>
            <param name="sqlContext">Determines the current database connection and SQL syntax.</param>
            <param name="parentName">Defines the server, database and schema name to retrieve the list of packages for. Example: "server.database.schema" or "database.schema".</param>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1">
            <summary>Selection of metadata items of specified types from the metadata list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.#ctor(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Creates new instance of MetadataSelection object to manipulate metadata items of specified types from the list.</summary>
            <param name="list">Metadata list to manupulate with their items.</param>
            <param name="types">Types of metadata items to manipulate with.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.IsLoaded">
            <summary>Indicates if the types of metadata items sprcified in constructor have been loaded to the list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.Add(`0)">
            <summary>Adds metadata item to the list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.Clear">
            <summary>Removes all items from selection.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.Contains(`0)">
            <summary>Indicates if selection contains an item.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.Remove(`0)">
            <summary>Removes metadata item from the list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.Load">
            <summary>Loads types of metadata items specified in constructor to the list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.FindIndices(System.String)">
            <summary>Returns the list of indexes of metadata items that match the string name.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.FindIndices(ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken)">
            <summary>Returns the list of indexes of metadata items that match the name defined by AST token identifier.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.FindItems(System.String)">
            <summary>Returns the list of metadata items that match the string name.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.FindItems(ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken)">
            <summary>Returns the list of metadata items that match the name defined by AST token identifier.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.FindIndex(System.String)">
            <summary>Returns the index of first found metadata item that matches the string name.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.FindIndex(ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken)">
            <summary>Returns the index of first found metadata item that matches the name defined by AST token identifier.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.FindItem(System.String)">
            <summary>Returns the first found metadata item that matches the string name.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.FindItem(ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken)">
            <summary>Returns the first found metadata item that matches the name defined by AST token identifier.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.Count">
            <summary>Gets number of items in selection.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSelection`1.IsReadOnly">
            <summary>Indicates that selection can not be modified.</summary>
            <remarks>Not used in implementation.</remarks>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNameList">
            <summary>List of field names for fields of a foreign key</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNameList.Compare(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNameList)">
            <summary>Compares items of this list with items of another list.</summary>
            <returns>Zero if lists are equal; non-zero otherwise.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNameList.FindIndex(System.String)">
            <summary>Gets index of a field name.</summary>
            <returns>Index of a field name if found; -1 otherwise.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNameList.Find(System.String)">
            <summary>Determines if a field name exists in the list.</summary>
            <returns>True if found, false otherwise.</returns>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNameList.SQLContext">
            <summary>Refers to the context for SQL generation, SQL parsing and metadata loading purposes.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataNamespace">
            <summary>Class to represent namespace items in the Metadata Container: Server, Package, Database, Schema.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItemNotification">
            <summary>Type to handle events for metadata container items.</summary>
            <param name="item">Metadata structure item to handle.</param>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure">
            <summary>Complex object that determines the tree-like structure to group metadata objects within the Database Schema Tree. Root object of the structure.</summary>
            <remarks>See the <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem"/> description for details.</remarks>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem">
            <summary>Represents a node in the metadata structure.</summary>
            <remarks>
            	<para>Each item in the metadata structure can be bound to the metadata item to represent it in the structure or it can be a folder that groups other items by
            specific feature, for example, according to the subject area. Metadata item to bind to this structure item is defined in the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.MetadataName"/>
            property.</para>
            	<para>Metadata items are bound to structure items on calling the parent's <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.LoadChildItems"/> method and unbound on calling the parent's <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.UnloadChildItems"/> method.
            Binding is performed by finding in the Metadata Container a corresponding to the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.MetadataName"/> property metadata item and assigning it to the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.MetadataItem"/> property.</para>
            	<para>In order to customize the structure, the user may define some structure items beforehand ("static" items). The underlying items may be created in two
            ways:</para>
            	<para>1) Automatically according to the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.MetadataName"/> property. Automatic items creation is performed in accordance with the physical database schema. This means
            that if you've defined a static node and specified the schema name in the MetadataName property, the child items of this node will be database objects of this
            schema. If you've defined a table name in the MetadataName, the child items will be fields of this table (if their creation is allowed by the
            <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.ShowFields"/> property), etc. You may deny automatic creation of child nodes by setting the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.AllowChildAutoItems"/> property to
            false.</para>
            	<para>2) Dynamically according to the set of metadata filtration rules defined by the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.MetadataFilter"/> property.</para>
            </remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.LoadChildItems">
            <summary>Creates dynamic child structure items and binds all child structure items to appropriate metadata items.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.UnloadChildItems">
            <summary>Unbinds static child structure items from metadata items and removes dynamic child structure items.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.GetAllMetadataItems">
            <summary>Returns the list of all Metadata Items from the underlying hierarchy of Metadata Structure Items.</summary>
            <overloads>Returns the list of Metadata Items from the underlying hierarchy of Metadata Structure Items.</overloads>
            <remarks>Execution of this method in online mode may take a long time as it will require complete loading of the underlying Metadata Structure tree among with retrieval
            of the corresponding Metadata Items from database.</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.GetAllMetadataItems(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Returns the list of all child Metadata Items of the specified type from the underlying hierarchy of Metadata Structure Items.</summary>
            <remarks>Execution of this method in online mode may take a long time as it will require complete loading of the underlying Metadata Structure tree among with retrieval
            of the corresponding Metadata Items from database.</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.GetAllItems">
            <summary>Returns the list of all Metadata Structure Items in the underlying hierarchy.</summary>
            <overloads>Returns the list of Metadata Structure Items in the underlying hierarchy.</overloads>
            <remarks>Execution of this method in online mode may take a long time as it will require complete loading of the underlying Metadata Structure tree among with retrieval
            of the corresponding Metadata Items from database.</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.GetAllItems(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataType)">
            <summary>Returns the list of Metadata Structure Items of the specified type in the underlying hierarchy.</summary>
            <remarks>Execution of this method in online mode may take a long time as it will require complete loading of the underlying Metadata Structure tree among with retrieval
            of the corresponding Metadata Items from database.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.Structure">
            <summary>Gets reference to the Metadata Structure object, i.e. the root node of the structure.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.Parent">
            <summary>Gets reference to the parent metadata structure item.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.IsDynamic">
            <summary>Indicates if item was created dynamically or it's a static item that was defined beforehand.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.IsBound">
            <summary>Indicates if metadata item is bound to this structure item.</summary>
            <remarks>
            	<para></para>
            </remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.IsChildItemsLoaded">
            <summary>Indicates if child structure items are loaded (created and bound).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.MetadataName">
            <summary>Defines the name of a corresponding metadata object to map metadata item to this structure item.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.MetadataItem">
            <summary>Gets or sets the reference to the Metadata Item object.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.ParentMetadataItem">
            <summary>Gets reference to the metadata item assigned to the parent metadata structure item.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.MetadataFilter">
            <summary>Defines a set of metadata filtration rules to select metadata items for adding them as child structure items.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.Items">
            <summary>Gets list of child metadata structure items.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.Caption">
            <summary>Gets or sets the caption text that will represent this item in the database structure tree.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.ImageIndex">
            <summary>Gets or sets the index of image that will be assigned</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureItem.AllowChildAutoItems">
            <summary>Allows to create child structure items automatically according to the physical database schema or not.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ExportToXML(System.String)">
            <summary>Saves the content of Metadata Structure to file in a form of XML document.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ExportToXML(System.IO.Stream)">
            <summary>Saves the content of Metadata Structure to stream in a form of XML document.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ImportFromXML(System.String)">
            <summary>Loads the content of Metadata Structure from file in a form of XML document.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ImportFromXML(System.IO.Stream)">
            <summary>Loads the content of Metadata Structure from stream in a form of XML document.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.Refresh">
            <summary>Clears and reloads the structure according to the actual content of the Metadata Container.</summary>
            <remarks>This method unbinds static and removes dynamic child items from the root metadata structure node, then binds static items and creates dynamic items
            according to the actual content of the Metadata Container.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.Options">
            <summary>Set of options of the metadata structure.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.XML">
            <summary>Gets or sets the content of Metadata Container as string in a form of XML document.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ItemAdded">
            <summary>Fired when new item is added to the structure.</summary>
            <remarks>Occurs when the metadata structure item is created and bound to appropriate metadata item.</remarks>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ItemUpdateStarted">
            <summary>Fired when the item begins updating it's properties.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ItemBinding">
            <summary>Fired when the item is about to be expanded.</summary>
            <remarks>Occurs before the metadata structure item creates child items and binds them to appropriate metadata items.</remarks>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ItemBound">
            <summary>Fired when the item is expanded.</summary>
            <remarks>Occurs after the metadata structure item has created child items and bound them to appropriate metadata items.</remarks>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ItemUnbinding">
            <summary>Fired when the item is about to be unbound from a metadata item.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ItemUnbound">
            <summary>Fired when the item is unbound from a metadata item.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ItemUpdated">
            <summary>Fired when the item updates some of it's properties.</summary>
            <remarks>Use the <see cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ItemUpdateStarted"/> and the <see cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ItemUpdateEnded"/> events to avoid handling of the ItemUpdated event multiple times.</remarks>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ItemUpdateEnded">
            <summary>Fired when the item ends updating it's properties.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure.ItemRemoving">
            <summary>Fired when the item is about to be removed from the structure.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions">
            <summary>Contains various options that affect on displaying of the Metadata Structure.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.ServerImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for server nodes.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.DatabaseImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for database nodes.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.SchemaImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for schema nodes.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.PackageImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for package nodes.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.ParameterImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for procedure and function parameter nodes.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.ForeignKeyImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for foreign key nodes.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.GroupByServers">
            <summary>Instructs to group database objects by servers or not.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.GroupByDatabases">
            <summary>Instructs to group database objects by databases or not.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.GroupBySchemas">
            <summary>Instructs to group database objects by schemas or not.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.GroupByTypes">
            <summary>Instructs to group database objects by types or not.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.ShowFields">
            <summary>Instructs the component to show fields of database objects in the tree.</summary>
            <remarks>Setting this property to true is necessary if you want to use the component without Design Pane. See the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.DesignPaneVisible"/> property
            for details.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.ImageList">
            <summary>Gets or sets ImageList object used to display icons for the nodes of Database Schema Tree.</summary>
            <remarks>
            	<para>Please refer to the *ImageIndex properties to get or set icons of specific tree nodes.</para>
            	<para>There are tree properties for each type of database objects (Table, View, Synonym and Procedure). The User*ImageIndex determines the icon image index for
            ordinary (user) objects, the System*ImageIndex determines the icon image index for system objects; the *sFolderImageIndex determines the icon image index for
            grouping nodes of appropriate database object type.</para>
            </remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.UserTableImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for user tables.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.UserViewImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for user views.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.UserProcedureImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for user procedures and functions.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.UserSynonymImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for user synonyms.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.SystemTableImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for system tables.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.SystemViewImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for system views.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.SystemProcedureImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for system procedures and functions.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.SystemSynonymImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for system synonyms.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.FieldImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for field nodes.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.PrimaryKeyImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for primary key field nodes.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.FolderImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for namespace nodes (folders).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.TablesFolderText">
            <summary>Gets or sets the text displayed for the table grouping folders.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.ViewsFolderText">
            <summary>Gets or sets the text displayed for the view grouping folders.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.ProceduresFolderText">
            <summary>Gets or sets the text displayed for the procedure and function grouping folders.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.SynonymsFolderText">
            <summary>Gets or sets the text displayed for the synonym grouping folders.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.VirtualObjectImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for virtual objects.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.VirtualFieldImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for virtual fields.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions">
            <summary>Determines rules of loading metadata to the component's Metadata Container.</summary>
            <remarks>
            	<para>Definition of these rules results in limitation of the list of database objects displayed in the tree. It may also help to reduce metadata loading time for some
            database servers (eg. Oracle).</para>
            	<para>Formerly named as <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.MetadataFilter"/>, the new option set introduces a simpler way to define metadata loading rules using <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.ExcludeFilter"/> and <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.IncludeFilter"/>
            mask sets and other properties, among with old way that provides higher flexibility in defining metadata filtration rules.</para>
                <para>MetadataSimpleFilter is just a simplified view of the MetadataFilter. You may use both types of filters at a time: 
            the masks defined in the ExcluedFilter and IncludeFilter will be converted to a set of MetadataFilterItems and joined with the items of the MetadataFilter.</para>
            </remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataLoadingOptions"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.MetadataFilter">
            <summary>Introduces more complex but flexible way to define metadata filtration rules.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.IncludeFilter">
            <summary>Holds masks for database object and schema names to be loaded into the Metadata Container.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.ExcludeFilter"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.ExcludeFilter">
            <summary>Holds masks for database object and schema names that should NOT be loaded into the Metadata Container.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.IncludeFilter"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.LoadSystemObjects">
            <summary>Instructs to load database objects marked as System to the Metadata Container.</summary>
            <value>true to load system objects; false not to load them.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.LoadDefaultDatabaseOnly">
            <summary>Determines if only the default database should be loaded to the Metadata Container or all databases.</summary>
            <remarks>In case there is no default database set, the component will ignore this property and load all databases to avoid emptiness of the metadata container
            and the database schema tree.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.DisableAutomaticMetadataLoading">
            <summary>Determines whether the necessary metadata should be automatically loaded to the Metadata Container from database on parsing a query.</summary>
            <remarks>Loading metadata to the metadata container allows the component to find corresponding database objects for objects found in the query. In case of successful
            match, the component is capable to determine related objects, to retrieve additional information about this object and its fields, such as data
            type, description, etc. Generally, the component may not work as expected in some cases if metadata is not loaded, so we don't recommend to turn this property
            on, but this property might be helpful in case of non-standard usage of the component.</remarks>
            <value>True if automatic metadata loading is disabled; false otherwise. Defalut value is false.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.IgnoreNumericPrecisionForNonNumericTypes">
            <summary>Ignore "precision" column for non-numeric types. Most drivers return garbage in this column for non-numeric types.</summary>
            <remarks>Numeric precision have meaning only for numeric types, but some drivers returns non-null value even for VARCHAR or DATE types.
            Most drivers just returns the precision of the internal server type (for example, if server uses int64 value to store timestamps, driver 
            returns precision=19 for TIMESTAMP columns, this is the actual numeric precision of int64).</remarks>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSimpleFilter">
            <summary>Determines sets of masks for database object and schema names to be included to or excluded from loading to the Metadata Container.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.ExcludeFilter"/>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.IncludeFilter"/>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSimpleFilter.Schemas">
            <summary>Holds the list of masks for database schema names.</summary>
            <remarks>Masks act similar to the "LIKE" SQL operator. Use the percent sign (%) to represent any sequence of characters; use the underscore sign (_) to
            represent any single character.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSimpleFilter.Objects">
            <summary>Holds the list of masks for database object names.</summary>
            <remarks>Masks act similar to the "LIKE" SQL operator. Use the percent sign (%) to represent any sequence of characters; use the underscore sign (_) to
            represent any single character.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSimpleFilter.Types">
            <summary>Defines set of database object types to filter.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.LinkPainter">
            <summary>Base abstract class that determines the appearance of links on the Design Area.</summary>
            <remarks>An instance of descendant from this class must be assigned to <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DesignPaneOptions.LinkStyle">the QueryBuilder.DesignPaneOptions.LinkStyle property</see>.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.LinkPainter.LinkColor">
            <summary>Gets or sets the line color of non-focused link.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.LinkPainter.LinkColorFocused">
            <summary>Gets or sets the line color of focused link.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.LinkPainter.MarkColor">
            <summary>Gets or sets the mark color of non-focused link.</summary>
            <remarks>Mark is a shape in the center of the link. It can show the link type and used for easier focusing on the link.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.LinkPainter.MarkColorFocused">
            <summary>Gets or sets the mark color of focused link.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataVirtualObjectPropertiesFrame.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataVirtualObjectPropertiesFrame.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataVirtualFieldPropertiesFrame.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataVirtualFieldPropertiesFrame.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataDatabasePropertiesFrame.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataDatabasePropertiesFrame.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataForeignKeyPropertiesFrame.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataForeignKeyPropertiesFrame.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSchemaPropertiesFrame.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataSchemaPropertiesFrame.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataEditorOptions">
            <summary>Defines set of user interface options for the Metadata Editor.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataEditorOptions.HideStructurePane">
            <summary>Instructs to hide the Metadata Structure Tree.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataEditorOptions.HideLoadDatabaseButton">
            <summary>Instructs to hide the "Load Database Schema from Server" button.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFieldPropertiesFrame.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFieldPropertiesFrame.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObjectPropertiesFrame.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObjectPropertiesFrame.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLContext">
            <summary>Defines context for the query building, parsing and SQL generation purposes.</summary>
            <remarks>This object holds links to the Syntax Provider that defines parsing and metadata retrieval rules, to the Metadata Provider that allows to
            retrieve metadata from the database and to the Metadata Container that holds metadata information retrieved from the database.</remarks>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.AddObjectFormOptions">
            <summary>Determines appearance of the Add Object Form.</summary>
            <remarks>The Add Object Form allows you to add objects (database objects and CTE) to the query. You can call it using the <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ShowAddObjectForm">ShowAddObjectForm
            Method</see>. The user can open this form using Design Pane context menu. You can disable this form completely using the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AddObjectFormOptions.FormEnabled">FormEnabled
            Property</see>.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.AddObjectFormOptions"/>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AddObjectFormOptions.SortingType">
            <summary>Defines order of displaying objects.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AddObjectFormOptions.ListViewStyle">
            <summary>Specifies how objects are displayed in a ListView control on the form.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AddObjectFormOptions.ImageListSmall">
            <summary>Gets or sets ImageList object to use when displaying objects as small icons in the form.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AddObjectFormOptions.ImageListLarge">
            <summary>Gets or sets ImageList object to use when displaying objects as large icons in the form.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AddObjectFormOptions.Position">
            <summary>Gets or sets position of the upper-left corner of the Add Object Form on showing.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AddObjectFormOptions.MinimumSize">
            <summary>Specifies minimum size of the Add Object Form.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AddObjectFormOptions.Width">
            <summary>Gets or sets the width of the Add Object Form.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AddObjectFormOptions.Height">
            <summary>Gets or sets the height of the Add Object Form.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AddObjectFormOptions.FormEnabled">
            <summary>Allows Add Object Form to be shown; also determines visibility of appropriate popup menu item.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.LinkManipulations">
            <summary>Defines list of permissible end-user manipulations with links during the query building process.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.LinkManipulations"></seealso>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.LinkManipulations.Allow">
            <summary>Allows manual creation of any links between objects.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.LinkManipulations.Deny">
            <summary>Denies manual links creation by end-user.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.LinkManipulations.AllowForeignKeysOnly">
            <summary>
            	<para>Allow manual creation of links based on foreign keys fetched from a database to the Metadata Container.</para>
            	<para>In this mode the component will not allow you to drag and drop fields from one object to another if a corresponding foreign key does not exist in the Metadata
            Container.<br/>
            Also it is not possible to modify join expression via the Link Properties dialog in this mode.</para>
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.LinkManipulations.LinkCompatibleTypesOnly">
            <summary>Allow manual creation of links for compatible data types only.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions">
            <summary>Allows you to tune the way Active Query Builder parses and builds SQL queries.</summary>
            <remarks>The <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.ParsingErrorOnUnknownObjects"/> and <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.AllowSleepMode"/> properties determine the way Active Query Builder process SQL query parsing errors.<br/>
            The <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.CreateLinksFromForeignKeys"/> and <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.LinkManipulations"/> properties define rules of working with links (joins) between query
            objects.<br/>
            The <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.AddLinkedObjects"/> and <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.DeleteUnusedObjects"/> properties allow you to automate addition of necessary query objects and removing of needless ones.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.BehaviorOptions"/>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.CreateColumnAliasesFromAltNames">
            <summary>Instructs the component to automatically create aliases for the fields with alternate names defined.</summary>
            <remarks>Setting this property to true will allow to have columns properly named in result dataset.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.LinkManipulations">
            <summary>Determines permissible end-user manipulations with links during the query building process.</summary>
            <remarks>This property is related to link creation and modification process only. If you want to deny links deletion, you should use the
            <see cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LinkDeleting"/> event. Also you can specify custom permissions on creating a link using the <see cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LinkCreating">LinkCreating</see> and
            <see cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LinkDragOver">LinkDragOver</see> events.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.CreateLinksFromForeignKeys"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.CreateLinksFromForeignKeys">
            <summary>Instructs the component to automatically create links (joins) in the query based on foreign keys information fetched from a database.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.LinkManipulations"/>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.NotifyOnLinksCreatedAutomatically">
            <summary>Instructs the component to fire LinkCreating and LinkCreated events for links (joins) created automatically 
            from foreign keys fetched from a database or by CreateLinksByIdenticalFieldNames property.
            By default the component fires events only for links created by user using the drag and drop.</summary>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LinkCreated"/>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.CreateLinksByIdenticalFieldNames"/>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.AddLinkedObjects">
            <summary>Instructs Query Builder to automatically add tables that required to link the newly added table to already existing tables in the query.</summary>
            <remarks>
            	<para>For example, havnig three tables in the database linked with each other (Orders -&gt; [Order Details] &lt;- Products), the [Order Details] table will be
            added automatically after the user adds the Orders and the Products tables to the query.</para>
            	<para>Setting this property to true is necessary to work when Design Pane is hidden.</para>
            </remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.DeleteUnusedObjects"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.DesignPaneVisible"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.ShowFields"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.DeleteUnusedObjects">
            <summary>Instructs Query Builder to automatically remove tables that has no fields used in expressions and are no longer required to link tables in the
            query.</summary>
            <remarks>
            	<para>For example, havnig three tables in the database linked with each other (Orders -&gt; [Order Details] &lt;- Products), the [Order Details] table with no
            fields selected will be removed automatically after the user removes the Orders or the Products table from the query.</para>
            	<para>Setting this property to true is necessary to work when Design Pane is hidden.</para>
            </remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.AddLinkedObjects"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.DesignPaneVisible"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.ShowFields"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.AllowSleepMode">
            <summary>Allows to suppress parsing errors on unsupported SQL statements (CREATE TABLE, INSERT, UPDATE, DELETE, etc.).</summary>
            <remarks>Setting this property to true is useful when you want to allow the end-user to write unsupported statements in the text editor.</remarks>
            <value>true allows to turns the component into "Sleep Mode" on parsing of unsupported SQL statements, false denies to do that.</value>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SleepModeChanged"/>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.QueryAwake"/>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SleepMode"/>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.LoadJoinsFromWhereClause">
            <summary>Instructs the component to analyze WHERE clause of a query to find joins between objects and display them as links at the Design Pane.</summary>
            <remarks>Setting this property to false will instruct the component to add such joins to the Query Column List.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.ParsingErrorOnUnknownObjects">
            <summary>Instructs the component to raise an error on parsing SQL queries with database objects not listed in the Metadata Container.</summary>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SqlError"/>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.CreateLinksByIdenticalFieldNames">
            <summary>Instructs the component to automatically create links (joins) in the query if objects with the same field names are added to the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.CreateWhereJoinsByDefault">
            <summary>Instructs the component to create joins in WHERE clause instead of using ANSI joins.</summary>
            <remarks>
            	<para>Note that the ANSI joins still can be created if the user will make an OUTER JOIN as this join type can not be made in the WHERE clause.</para>
            	<para>For Oracle Database syntax, the component will create Oracle-style joins (+=, =+), except FULL OUTER JOIN.</para>
            </remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.FilterTabsByActiveQueryPart">
            <summary>Allows to hide the sub-query tabs that do not belong to the currently visible query part.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.UseAltNames">
            <summary>Instructs to display alternate names instead of real database object and field names in the Query Builder.</summary>
            <remarks>
            	<para>This property has no effect if alternate names aren't defined in the Metadata Container.</para>
            	<para>Use the SQL Builder's UseAltNames property to control generation of result SQL query text with or without alternate names.</para>
            </remarks>
            <value>Set this option to true to generate SQL query text for the end-user to modify or to save it between work sessions.<br/>
            Set this option to false to generate SQL query text for execution against real database server.</value>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.UseAltNames"></seealso>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.DesignPaneOptions">
            <summary>Contains various properties of Design Pane.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DesignPaneOptions"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DesignPaneOptions.SnapToGrid">
            <summary>Determines the size of each square of the grid used for snapping of the objects at Design Pane.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DesignPaneOptions.GridSize"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DesignPaneOptions.GridSize">
            <summary>Enables or disables whether objects at the Design Pane are automatically placed at grid coordinates.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DesignPaneOptions.SnapToGrid"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DesignPaneOptions.BackColor">
            <summary>Gets or sets the background color for the Design Pane.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DesignPaneOptions.LinkStyle">
            <summary>Determines style of links between objects at Design Pane.</summary>
            <remarks>
            	<para>You can choose from one of the following styles:</para>
            	<list type="bullet">
            		<item>Simple style: circles are displayed at the ends of line in case of INNER join type; arrows replace circles in case of OUTER join types.</item>
            		<item>MS Access style: no markers are displayed at the ends of line in case of INNER join type; arrows are added to appropriate ends of line in case or OUTER
                joins. Also "1" and infinity signs are shown above the ends of line if this join has a corresponding foreign key relationship loaded from database to the
                Metadata Container.</item>
            		<item>SQL Server Management Studio style: a diamond is displayed in the middle of line in case of INNER join type; a rectangle is added to it at appropriate
                side of line in case of OUTER join types.</item>
            	</list>
            </remarks>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListBaseColumnOptions">
            <summary>Base class for all columns in the datasource field list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListBaseColumnOptions.Visible">
            <summary>Determines visibility of the column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListBaseColumnOptions.DrawOrder">
            <summary>Defines order in which the column should be shown in the field list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListBaseColumnOptions.Margin">
            <summary>Specifies left margin of the column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListBaseColumnOptions.Width">
            <summary>Gets or sets width of the column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListBaseColumnOptions.Prefix">
            <summary>Allows to add prefix to the column text. Can be used to add opening bracket or parenthesis.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListBaseColumnOptions.Postfix">
            <summary>Allows to add postfix to the column text. Can be used to add closing bracket or parenthesis.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListDescriptionColumnOptions">
            <summary>Defines various options of the Description column in the field list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListDescriptionColumnOptions.Visible">
            <summary>Determines visibility of the column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListDescriptionColumnOptions.DrawOrder">
            <summary>Defines order in which the column should be shown in the field list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListDescriptionColumnOptions.Margin">
            <summary>Specifies left margin of the column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListDescriptionColumnOptions.FontStyle">
            <summary>Gets or sets font style of the text.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListDescriptionColumnOptions.Color">
            <summary>Gets or sets font color of the text.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListMarkColumnOptions">
            <summary>Defines various options of the Mark column in the field list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListMarkColumnOptions.DrawOrder">
            <summary>Defines order in which the column should be shown in the field list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListMarkColumnOptions.Margin">
            <summary>Specifies left margin of the column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListMarkColumnOptions.Width">
            <summary>Gets or sets width of the column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListMarkColumnOptions.PrimaryKeyIcon">
            <summary>Gets or sets the image of the icon to be shown for Primary Key fields.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListNameColumnOptions">
            <summary>Defines various options of the Name column in the field list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListNameColumnOptions.DrawOrder">
            <summary>Defines order in which the column should be shown in the field list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListNameColumnOptions.FontStyle">
            <summary>Gets or sets font style of the text for ordinary fields.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListNameColumnOptions.Color">
            <summary>Gets or sets font color of the text for ordinary fields.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListNameColumnOptions.PrimaryKeyFontStyle">
            <summary>Gets or sets font style of the text for Primary Key fields.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListNameColumnOptions.PrimaryKeyColor">
            <summary>Gets or sets font color of the text for Primary Key fields.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListSortType">
            <summary>Defines various types of datasource's field list sorting.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListSortType.None">
            <summary>Denies field list sorting; fields are shown in the list as they were retrieved from a database.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListSortType.Name">
            <summary>Specifies field list sorting by Name.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListSortType.Description">
            <summary>Specifies field list sorting by Description.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.CollapseExpandButtonLocation">
            <summary> Defines various options for location of the Collapse/Expand button. </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.CollapseExpandButtonLocation.Top">
            <summary> Instructs to place the Collapse/Expand button at the top of datasource. </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.CollapseExpandButtonLocation.Bottom">
            <summary> Instructs to place the Collapse/Expand button at the bottom of datasource. </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions">
            <summary>Determines appearance of the objects within the Design Pane.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DataSourceOptions"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.MaxHeight">
            <summary>Determines maximum height of a datasource objects at the Design Pane. Zero means no constraint for this value.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.DefaultWidth"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.DefaultWidth">
            <summary>Determines width of a newly added datasource objects at the Design Pane.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.MaxHeight"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.SelectedFieldsCountInCaption">
            <summary>Instructs to indicate the number of selected fields (checked items) in datasource's caption.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.MarkColumnOptions">
            <summary>Contains various options for the Mark (check box) column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.NameColumnOptions">
            <summary>Contains various options for the Name (field name) column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.TypeColumnOptions">
            <summary>Contains various options for the Type (data type) column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.DescriptionColumnOptions">
            <summary>Contains various options for the Description column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.HideAsteriskItem">
            <summary>Instructs the component to show/hide the asterisk item (*) as a first item in the field list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.SortType">
            <summary>Defines field list sort type.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.KeyFieldsFirst"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.KeyFieldsFirst">
            <summary>Instructs to show primary key fields first regardless of the sorting type.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.SortType"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.Font">
            <summary>Gets or sets the font of the text displayed by the control.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.BackgroundColor">
            <summary>Gets or sets the background color for the DataSource objects.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.FocusedBackgroundColor"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.FocusedBackgroundColor">
            <summary>Gets or sets the background color for the focused DataSource object.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.BackgroundColor"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.ShowCollapseExpandButton">
            <summary>Instructs the component to show or hide the Collapse/Expand button at the bottom of each data source.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.CollapseExpandButtonLocation">
            <summary> Determines location of the Collapse/Expand button. </summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.ShowCollapseExpandButton"/>
            <value> Top instructs to place the button at the top of each data source; Bottom instructs to place the button at the bottom. </value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.ShowLinkedObjectsButton">
            <summary>Instructs the component to show or hide the Linked Objects button near to the data source.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.ShowDescriptionTooltips">
            <summary>Instructs the component to show or hide description tooltip over the data source fields.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourceOptions.DescriptionTooltipsDelay">
            <summary>Gets or sets the delay of displaying description tooltip over the data source fields.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldTypeCase">
            <summary>Defines various types of case conversions.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldTypeCase.Lowercase">
            <summary>Converts strings to lower case.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldTypeCase.Uppercase">
            <summary>Converts strings to UPPER CASE.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldTypeCase.Capitalize">
            <summary>Converts strings to First Upper Case.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListTypeColumnOptions">
            <summary>Defines various options of the Type column in the field list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListTypeColumnOptions.DrawOrder">
            <summary>Defines order in which the column should be shown in the field list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListTypeColumnOptions.Margin">
            <summary>Specifies left margin of the column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListTypeColumnOptions.FontStyle">
            <summary>Gets or sets font style of the text.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListTypeColumnOptions.Color">
            <summary>Gets or sets font color of the text.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FieldListTypeColumnOptions.Case">
            <summary>Determines case conversion rules for displaying data types.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.DesignPaneOverviewVisibility">
            <summary>
            	<para>Determines possible values for visibility of the Design Pane Overview.</para>
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.DesignPaneOverviewVisibility.Hidden">
            <summary>Design Pane Overview is always hidden.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.DesignPaneOverviewVisibility.Visible">
            <summary>Design Pane Overview is always visible.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.DesignPaneOverviewVisibility.Auto">
            <summary>Design Pane Overview shows up if necessary.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions">
            <summary>Allows you to configure layout of the main parts of the component: Design Pane, Query Columns Pane, Database Schema Tree and Query Structure
            Tree.</summary>
            <remarks>To configure tabs above the Design Pane, see the <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.VisualOptions"/> property group.</remarks>
            <seealso cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.DesignPaneVisible">
            <summary>Determines visibility of the Design Pane.</summary>
            <remarks>On hiding the Design Pane, don't forget to set the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.AddLinkedObjects"/> and <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.DeleteUnusedObjects"/> properties to
            true and allow showing of fields in the database objects tree using the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.ShowFields"/> property.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.RightTreePaneVisible">
            <summary>Determines visibility of the right tree pane.</summary>
            <remarks>Content of the right and left tree panes is determined according to the SwapTrees property.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.RightTreePaneWidth">
            <summary>Determines width of the right tree pane.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.LeftTreePaneVisible">
            <summary>Determines visibility of the left tree pane.</summary>
            <remarks>Content of the right and left tree panes is determined according to the SwapTrees property.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.LeftTreePaneWidth">
            <summary>Determines width of the left tree pane.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.QueryColumnsPaneVisible">
            <summary>Determines visibility of the Query Columns Pane (grid with expressions and criteria below the Design Pane).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.QueryColumnsPaneHeight">
            <summary>Determines height of the Query Columns Pane.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.SwapTrees">
            <summary>Allows to swap Query Structure Tree and Database Schema Tree with each other.</summary>
            <value>Set to false to have the Query Structure Tree at the left and Database Schema Tree at the right; set to true to swap the
            trees vice versa.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.UnionNavBarVisible">
            <summary>Determines visibility of the Union Sub-query Navigation Bar (in the top right corner of Design Pane).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.SubQueryTabsVisible">
            <summary>Determines visibility of sub-query tabs above the Design Pane.</summary>
            <remarks>You can navigate sub-queries using the Query Structure Tree instead of sub-query tabs.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.DesignPaneOverviewVisible">
            <summary>Determines visibility of the Design Pane Overview.</summary>
            <remarks>The Design Pane Overview is located in the bottom right corner of the Design Pane. It is intended to ease the navigation over large query diagrams.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.DesignPaneOverviewWidth">
            <summary>Gets or sets the width of the Design Pane Overview window.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.UserQueriesPaneVisible">
            <summary>Determines visibility of User Queries pane.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesConfigurationOptions.UserQueriesPaneHeight">
            <summary>Gets or sets the height of User Queries pane.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions">
            <summary>Determine SQL query text generation rules and display of SQL objects and expressions in the Query Builder.</summary>
            <remarks>
            	<para>Control the display of object names and expressions during the visual query building process (see the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.ObjectPrefixSkipping"/>, <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.QuoteAllIdentifiers"/> properties).</para>
            	<para>Control SQL query text generation for the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SQL"/> property.</para>
            </remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SQLGenerationOptions"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.QuoteAllIdentifiers">
            <summary>Instructs the component to quote all identifiers.</summary>
            <remarks>
            	<para>Quotation marks are determined according to the current SQL syntax.</para>
            	<para>Example (MS SQL Server syntax):</para>
            	<para>"Northwind.dbo.[Order details]" - property is set to false.<br/>
            "[Northwind].[dbo].[Order details]" - property is set to true.</para>
            <para>Note: This property controls object prefix skipping in the component's user interface. The <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.QuoteAllIdentifiers">same named property</see> 
            	  of the <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder">BaseSQLBuilder class</see> deterimes the presence of object prefixes in resultant SQL query text.</para>
            </remarks>
            <value>true to quote all identifiers; false to apply quotation as needed.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.ObjectPrefixSkipping">
            <summary>Instructs the component to skip the unnecessary database object prefixes or not.</summary>
            <remarks><para>The necessity of a prefix is determined in accordance with the current database connection. According to it, there could be defined a default database and
            default schemas that can be omitted in SQL query text. This information is retrieved by Active Query Builder from the database during metadata retrieval
            process and can be changed by setting the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Default"/> property of appropriate namespaces.</para>
            <para>Note: This property controls object prefix skipping in the component's user interface. The <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.ObjectPrefixSkipping">same named property</see> 
            	  of the <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder">BaseSQLBuilder class</see> deterimes the presence of object prefixes in resultant SQL query text.</para>
            </remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.OuterKeywordInLinks">
            <summary>Instructs the component to insert "OUTER" keyword before "JOIN" clause or not.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.InnerKeywordInLinks"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.InnerKeywordInLinks">
            <summary>Instructs the component to insert "INNER" keyword before "JOIN" clause or not.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.OuterKeywordInLinks"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.AsKeywordInExpressionAlias">
            <summary>Instructs the component to insert "AS" keyword between field name and alias ("Fleld AS Alias") or not.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.AsKeywordInObjectAlias"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.AsKeywordInObjectAlias">
            <summary>Instructs the component to insert "AS" keyword between object name and its alias ("Table AS Alias") or not.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.AsKeywordInExpressionAlias"></seealso>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.VisualOptions">
            <summary>Contains visual options that are not related to any pane.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.VisualOptions"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.VisualOptions.FlatBorders">
            <summary>Determines appearance of the control's borders within the component.</summary>
            <value>The controls appear flat when this property is true, otherwise the control appear three-dimensional.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.VisualOptions.TabsAlignment">
            <summary>Determines alignment of sub-query tabs above the Design Pane (left or right).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.VisualOptions.TabsAppearance">
            <summary>Determines appearance of sub-query tabs above the Design Pane.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.VisualOptions.TabsImageList">
            <summary>Allows to specify custom ImageList for sub-query type icons at the tabs.</summary>
            <remarks>This image list should contain 4 icons: main query, expression sub-query, derived table and CTE.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.VisualOptions.ShowTabIcons">
            <summary>Determines visibility of sub-query type icons at tabs.</summary>
            <remarks>There are four sub-query types: main query, expression sub-query, derived table and CTE.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.VisualOptions.UserQueriesToolbarImageList">
            <summary>Allows to specify custom ImageList for toolbar buttons of User Queries pane.</summary>
            <remarks>This image list should contain 4 icons: new folder, save new query, update current query, delete.</remarks>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.UserMessageId">
            <summary>Lists possible situations that require to warn the user.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.UserMessageId.ColumnNameAlreadyUsed">
            <summary>
            	<para>Notifies that the specified alias matches the name of another column.</para>
            	<para>Multiple columns with same name in a sub-query may lead to inconsistency in the calling sub-query.</para>
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.UserMessageId.DeletingAliasCausesConflict">
            <summary>
            	<para>Notifies that deleting an alias leads to matching this column name to the name of another column.</para>
            	<para>Multiple columns with same name in a sub-query may lead to inconsistency in the calling sub-query.</para>
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.UserMessageId.SelectingExpressionCausesConflict">
            <summary>
            	<para>Notifies that adding the expression leads to the same named columns in the sub-query.</para>
            	<para>Multiple columns with same name in a sub-query may lead to inconsistency in the calling sub-query.</para>
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.UserMessageEventArgs">
            <summary>Class to define parameters passed to the <see cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.UserMessage"/> event.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.UserMessageEventArgs.MessageId">
            <summary>Gets the value that uniquely identifies the situation that requires to warn the user.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.UserMessageEventArgs.Message">
            <summary>Gets the warning message string to be displayed to the user.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterColumnCondition">
            <summary>Defines filtration condition based on the output column.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterCondition">
            <summary>Defines filtration condition.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterCondition.Condition">
            <summary>Gets the SQL expression string.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterColumnCondition.#ctor(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn,System.String)">
            <summary>Creates new filter based on the specified column with condition specified by the given SQL expression.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterColumnCondition.Column">
            <summary>Gets the output column on which this condition is based.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunctionType">
            <summary>Defines possible types of junctions for conditions.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunctionType.Or">
            <summary>Disjunction.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunctionType.And">
            <summary>Conjunction</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunctionType.Any">
            <summary>Alias for conjunction.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunctionType.All">
            <summary>Alias for disjunction.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunction">
            <summary>Defines a set of filtration conditions.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunction.Add(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterCondition)">
            <summary>Adds new Filter Condition item to the list.</summary>
            <returns>Returns self.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunction.Insert(System.Int32,ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterCondition)">
            <summary>Adds new Filter Condition item to the specified position in the list.</summary>
            <returns>Returns self.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunction.Clear">
            <summary>Clears the list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunction.Delete(System.Int32)">
            <summary>Removes item at the specified index from the list and disposes it.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunction.IndexOf(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterCondition)">
            <summary>Determines the index of a specific Filter Condition in the list.</summary>
            <returns>Returns the index of the specified item; returns -1 if item is not found.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunction.Remove(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterCondition)">
            <summary>Removes the Filter Condition from the list and disposes it.</summary>
            <returns>Returns the index of removed item; returns -1 if item is not found.</returns>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunction.Operator">
            <summary>Gets or sets the type of junction (conjunction or disjunction).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunction.Not">
            <summary>Gets or sets the negation flag for the junction.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunction.Item(System.Int32)">
            <summary>Gets the element at the specified index.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterConditionJunction.Count">
            <summary>Indicates the number of items in the list.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterFactory">
            <summary>A factory to create sets of filtration conditions.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterFactory.Conjunction">
            <summary>Returns a new set of conditions joined with the AND operator.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterFactory.And">
            <summary>Returns a new set of conditions joined with the AND operator. Alias for "Conjunction".</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterFactory.Disjunction">
            <summary>Returns a new set of conditions joined with the OR operator.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterFactory.Or">
            <summary>Returns a new set of conditions joined with the OR operator. Alias for "Disjunction".</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn">
            <summary>Describes an output column of initial query result set.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Asc">
            <summary>Creates new sorting item to sort by the column in ascending order. Alias for "Ascending".</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Ascending">
            <summary>Creates new sorting item to sort by the column in ascending order.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Desc">
            <summary>Creates new sorting item to sort by the column in descending order. Alias for "Descending".</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Descending">
            <summary>Creates new sorting item to sort by the column in descending order.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.IsNull">
            <summary>Creates new filter condition for the column to accept Null values.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Not_IsNull">
            <summary>Creates new filter condition to accept Not Null values for the column.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.IsNotNull">
            <summary>Creates new filter condition to accept Not Null values for the column. Alias for "Not_IsNull".</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Equal(System.String)">
            <summary>Creates new filter condition for the column to accept values that are Equal to the specified.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Not_Equal(System.String)">
            <summary>Creates new filter condition for the column to accept values that are Not Equal to the specified.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Less(System.String)">
            <summary>Creates new filter condition for the column to accept values that are Less than the specified.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Not_Less(System.String)">
            <summary>Creates new filter condition for the column to accept values that are Not Less than the specified.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.LessEqual(System.String)">
            <summary>Creates new filter condition for the column to accept values that are Less or Equal to the specified.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Not_LessEqual(System.String)">
            <summary>Creates new filter condition for the column to accept values that are Not Less or Equal than the specified. Alias for "Greater".</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Greater(System.String)">
            <summary>Creates new filter condition for the column to accept values that are Greater than the specified.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Not_Greater(System.String)">
            <summary>Creates new filter condition for the column to accept values that are Not Greater than the specified.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.GreaterEqual(System.String)">
            <summary>Creates new filter condition for the column to accept values that are Greater or Equal to the specified.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Not_GreaterEqual(System.String)">
            <summary>Creates new filter condition for the column to accept values that are Not Greater or Equal than the specified. Alias for "Less".</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Between(System.String,System.String)">
            <summary>Creates new filter condition for the column to accept values in a range Between the specified.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Not_Between(System.String,System.String)">
            <summary>Creates new filter condition for the column to accept values not in a range Between the specified.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.In(System.String)">
            <summary>Creates new filter condition for the column to accept values Listed in the specified comma-separated string.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Not_In(System.String)">
            <summary>Creates new filter condition for the column to accept values Not Listed in the specified comma-separated string.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Like(System.String)">
            <summary>Creates new filter condition for the column to accept values like the specified pattern.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Not_Like(System.String)">
            <summary>Creates new filter condition for the column to accept values Not like the specified pattern.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Condition(System.String)">
            <summary>Creates new filter condition for the column to accept values that meet the specified condition.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Count">
            <summary>Creates new aggregation item to count the number of not-null items in resultset.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Sum">
            <summary>Creates new aggregation item to summarize values of this column in resultset.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Avg">
            <summary>Creates new aggregation item to return the average value of this column in resultset.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Min">
            <summary>Creates new aggregation item to return the minimum value of this column in resultset.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Max">
            <summary>Creates new aggregation item to return the maximum value of this column in resultset.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.QueryTransformer">
            <summary>Gets the reference to the parent QueryTransformer component that owns and maintains entire columns list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.QueryBuilder">
            <summary>Gets the reference to the QueryBuilder component that contains the initial query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Column">
            <summary>Gets the reference to the StatisticsOutputColumn corresponding to this column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Name">
            <summary>Gets the name of result set column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.IsSupportFiltering">
            <summary>Indicates if it's possible to add filtration conditions for this column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.IsSupportSorting">
            <summary>Indicates if it's possible to sort by this column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Visible">
            <summary>Gets or sets the sign of presence of the column in result SQL query.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumnList">
            <summary>Lists output columns of initial query.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumnList.GetColumnByName(System.String)">
            <summary>Gets column with the specified name.</summary>
            <exception>Raises exception if column with the specified name is not found.</exception>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumnList.FindColumn(System.String)">
            <summary>Gets column with the specified name.</summary>
            <returns>Returns OutputColumn with name that equals to the specified name; returns null if column is not found.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumnList.IndexOf(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn)">
            <overloads>Determines the index of a specific item in the list.</overloads>
            <summary>Determines the index of the specified Output Column item in the list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumnList.IndexOf(System.String)">
            <summary>Determines the index of item with the specified name in the list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumnList.Item(System.Int32)">
            <summary>Gets the element at the specified index.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumnList.Count">
            <summary>Indicates the number of items in the list.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer">
            <summary>Changes the result SQL query in order to transfigure result data according to the end user's needs.</summary>
            <example>
            	<code title="VB.NET" description="" groupname="Query Transformer usage sample" lang="VB.NET">
            Using queryTransformer As New QueryTransformer()
                queryTransformer.QueryBuilder = queryBuilder1
                queryTransformer.SqlBuilder = plainTextSQLBuilder1
             
                queryTransformer.BeginUpdate()
             
                Try
                    ' filter
                    queryTransformer.Filters.Clear()
             
                    queryTransformer.Where(queryTransformer.Columns(1).Not_Equal("100")). _
                     Where(queryTransformer.Columns(2).[In]("('Value 1','Value 2','Value 3')")). _
                     Where(queryTransformer.Columns.GetColumnByName("OrderId").Condition("&gt; 100")). _
                     Where("OrderDate is not null"). _
                     Where(FilterFactory.[Or](). _
                      Add(queryTransformer.Columns(1).Not_Equal("100")). _
                      Add(queryTransformer.Columns(1).Not_Equal("200")))
             
                    ' ordering
                    queryTransformer.Sortings.Clear()
             
                    queryTransformer. _
                     OrderBy(queryTransformer.Columns(1)). _
                     OrderBy(queryTransformer.Columns(2), False). _
                     OrderBy(queryTransformer.Columns.GetColumnByName("OrderId")). _
                     OrderBy("OrderDate")
             
                    ' offset
                    queryTransformer. _
                     Skip("100"). _
                     Take("50")
             
                    ' aggregations
                    queryTransformer.Aggregations.Clear()
             
                    queryTransformer. _
                     SelectRecordsCount("recordsCount"). _
                     Select(queryTransformer.Columns(1).Count(), "column1Count"). _
                     Select(queryTransformer.Columns(1).Sum(), "column1Sum"). _
                     Select(queryTransformer.Columns(1).Avg(), "column1Avg"). _
                     Select(queryTransformer.Columns(1).Min(), "column1Min"). _
                     Select(queryTransformer.Columns(1).Max(), "column1Max")
             
                Finally
                    queryTransformer.EndUpdate()
                End Try
             
                MessageBox.Show(queryTransformer.Sql, "Modified SQL")
            End Using</code>
            	<code title="C#" description="" groupname="Query Transformer usage sample" lang="CS">
            using (QueryTransformer queryTransformer = new QueryTransformer())
            {
                queryTransformer.QueryBuilder = queryBuilder1;
                queryTransformer.SqlBuilder = plainTextSQLBuilder1;
             
                queryTransformer.BeginUpdate();
             
                try
                {
                    // filter
                    queryTransformer.Filters.Clear();
             
                    queryTransformer
                        .Where(queryTransformer.Columns[1].Not_Equal("100"))
                        .Where(queryTransformer.Columns[2].In("('Value 1','Value 2','Value 3')"))
                        .Where(queryTransformer.Columns.GetColumnByName("OrderId").Condition("&gt; 100"))
                        .Where("OrderDate is not null")
                        .Where(FilterFactory.Or()
                            .Add(queryTransformer.Columns[1].Not_Equal("100"))
                            .Add(queryTransformer.Columns[1].Not_Equal("200")));
             
                    // ordering
                    queryTransformer.Sortings.Clear();
             
                    queryTransformer
                        .OrderBy(queryTransformer.Columns[1])
                        .OrderBy(queryTransformer.Columns[2], false)
                        .OrderBy(queryTransformer.Columns.GetColumnByName("OrderId"))
                        .OrderBy("OrderDate");
             
                    // offset
                    queryTransformer
                        .Skip("100")
                        .Take("50");
             
                    // aggregations
                    queryTransformer.Aggregations.Clear();
             
                    queryTransformer
                        .SelectRecordsCount("recordsCount")
                        .Select(queryTransformer.Columns[1].Count(), "column1Count")
                        .Select(queryTransformer.Columns[1].Sum(), "column1Sum")
                        .Select(queryTransformer.Columns[1].Avg(), "column1Avg")
                        .Select(queryTransformer.Columns[1].Min(), "column1Min")
                        .Select(queryTransformer.Columns[1].Max(), "column1Max");
                }
                finally
                {
                    queryTransformer.EndUpdate();
                }
             
                MessageBox.Show(queryTransformer.Sql, "Modified SQL");
            }</code>
            </example>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.BeginUpdate">
            <summary>Prevents the component from SQL generation until the EndUpdate method is called.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.EndUpdate">
            <summary>Resumes SQL generation after it was suspended by the BeginUpdate method.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.Where(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.FilterCondition)">
            <summary>Adds filtration condition defined by the FilterCondition object.</summary>
            <overloads>Adds filtration condition to the query.</overloads>
            <remarks>FilterCondition object can be obtained by calling one of the following methods of the
            <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn"/>OutputColumn object: Condition, Equal, Not_Equal, Less, LessOrEqual, Greater,
            GreaterOrEqual, Between, In, Not_In, etc.</remarks>
            <returns>Returns self.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.Where(System.String)">
            <summary>Adds filtration condition defined by the SQL expression.</summary>
            <returns>Returns self.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.OrderBy(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumn)">
            <summary>Adds sorting to the query.</summary>
            <overloads>Adds sorting to the query.</overloads>
            <remarks>SortedColumn object can be obtained by calling the <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Ascending">Ascending</see> 
            		 and <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn.Descending">Descending</see> methods of the 
            		 <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn"/>OutputColumn object.</remarks>
            <returns>Returns self.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.OrderBy(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn,System.Boolean)">
            <summary>Adds sorting by the column in the specified order.</summary>
            <returns>Returns self.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.OrderBy(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn)">
            <summary>Adds sorting by the column in ascending order.</summary>
            <returns>Returns self.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.OrderBy(System.String,System.Boolean)">
            <summary>Adds sorting by the SQL expression in the specified order.</summary>
            <returns>Returns self.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.OrderBy(System.String)">
            <summary>Adds sorting by the SQL expression in ascending order.</summary>
            <remarks>Returns self.</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.Skip(System.String)">
            <summary>Sets the number of first records to be skipped.</summary>
            <returns>Returns self.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.Take(System.String)">
            <summary>Sets the number of records to return.</summary>
            <returns>Returns self.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.Select(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumn,System.String)">
            <summary>Adds aggregate defined by the SelectedColumn object with the specified alias.</summary>
            <overloads>Adds aggregate defined by the SelectedColumn object.</overloads>
            <returns>Returns self.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.Select(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumn)">
            <summary>Adds aggregate defined by the SelectedColumn object.</summary>
            <returns>Returns self.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.SelectRecordsCount(System.String)">
            <summary>Adds the "COUNT(*)" aggregate with the specified alias to the query.</summary>
            <overloads>Adds the "COUNT(*)" aggregate to the query.</overloads>
            <returns>Returns self.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.SelectRecordsCount">
            <summary>Adds the "COUNT(*)" aggregate to the query.</summary>
            <returns>Returns self.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.ExportToXML(System.String)">
            <summary>Saves the content of Query Transformer to XML file.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.ExportToXML(System.IO.Stream)">
            <summary>Saves the content of Query Transformer to stream in a form of XML document.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.ImportFromXML(System.String)">
            <summary>Loads the content of Query Transformer from file in a form of XML document.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.ImportFromXML(System.IO.Stream)">
            <summary>Loads the content of Metadata Container from stream in a form of XML document.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.SqlUpdated">
            <summary>Occurs each time the component updates the output SQL query text.</summary>
            <remarks>Read the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SQL">QueryBuilder.SQL Property</see> to get the updated SQL query text.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.IsUpdating">
            <summary>Indicates that the component is in update mode now.</summary>
            <remarks>The update mode is initialzed via the <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.BeginUpdate">BeginUpdate Method</see> and finalized via the <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.EndUpdate">EndUpdate Metod</see>.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.QueryBuilder">
            <summary>Gets or sets the reference to the QueryBuilder component that contains the initial query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.SqlBuilder">
            <summary>Gets or sets the reference to the SQLBuilder component that is used to generate the modified query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.Columns">
            <summary>Returns the list of output columns of initial query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.Filters">
            <summary>Gets the list of filtration conditions.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.Sortings">
            <summary>Gets the list of sortings.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.IsSupportLimitOffset">
            <summary>Indicates if it's possible to skip first records by means of the current database server SQL syntax.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.IsSupportLimitCount">
            <summary>Indicates if it's possible to limit the number of records by means of the current database server SQL syntax.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.ResultOffset">
            <summary>Gets or sets the number of first records to be skipped.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.ResultCount">
            <summary>Gets or sets the number of records to return.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.Aggregations">
            <summary>Gets the list of aggregation columns.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.Sql">
            <summary>Gets the modidied SQL query text.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.SelectMode">
            <summary>Gets or sets the selection mode of result SQL query (DISTINCT, ALL or default).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.XML">
            <summary>Gets or sets the content of Query Transformer as string in a form of XML document.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformer.IsResultQueryWrapped">
            <summary>Indicates if the query will be wrapped in a sub-query after transformation.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformerSelectMode">
            <summary>Lists all possible selection modes.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformerSelectMode.Default">
            <summary>Does not explicitly set the selection mode. Usually equivalent to the All mode.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformerSelectMode.All">
            <summary>Instructs to select all records that meet the condition in the SQL statement. Duplicates are allowed.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.QueryTransformerSelectMode.Distinct">
            <summary>Instructs to omits records that contain duplicate data in the selected fields.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumn">
            <summary>Defines an aggregated column.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumn.#ctor(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn,System.String)">
            <summary>Creates new aggregation based on the specified column with the specified SQL expression.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumn.Column">
            <summary>Gets the output column on which this aggregation is based.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumn.Expression">
            <summary>Gets the SQL expression string.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumnList">
            <summary>Defines list of aggregations.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumnList.GetAlias(System.Int32)">
            <summary>Gets the alias of element at the specified index.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumnList.SetAlias(System.Int32,System.String)">
            <summary>Sets the alias of element at the specified index.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumnList.Add(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumn,System.String)">
            <summary>Adds new Selected Column item with the specified alias to the list.</summary>
            <returns>Returns the index of the newly added item.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumnList.Clear">
            <summary>Clears the list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumnList.Delete(System.Int32)">
            <summary>Removes item at the specified index from the list and disposes it.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumnList.IndexOf(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumn)">
            <summary>Determines the index of a specific Selected Column item in the list.</summary>
            <overloads>Determines the index of a specific item in the list.</overloads>
            <returns>Returns the index of the specified item; returns -1 if item is not found.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumnList.IndexOf(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn)">
            <summary>Determines the index of of the first found item based on the specified Output Column item in the list.</summary>
            <returns>Returns the index of the specified column; returns -1 if item is not found.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumnList.IndexOf(System.String)">
            <summary>Determines the index of item with the specified SQL Expression string in the list.</summary>
            <returns>Returns the index of item with the specified SQL Expression; returns -1 if item is not found.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumnList.Remove(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumn)">
            <summary>Removes the Selected Column from the list and disposes it.</summary>
            <overloads>Removes the item from the list and disposes it.</overloads>
            <returns>Returns the index of removed item; returns -1 if item is not found.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumnList.Remove(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn)">
            <summary>Removes the first found item based on the specified Output Column from the list and disposes it.</summary>
            <returns>Returns the index of removed item; returns -1 if item is not found.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumnList.Remove(System.String)">
            <summary>Removes the item with the specified SQL Expression from the list and disposes it.</summary>
            <returns>Returns the index of removed item; returns -1 if item is not found.</returns>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumnList.Item(System.Int32)">
            <summary>Gets the element at the specified index.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SelectedColumnList.Count">
            <summary>Indicates the number of items in the list.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumn">
            <summary>Defines a sorting item.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumn.#ctor(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn,System.String,ActiveDatabaseSoftware.ActiveQueryBuilder.ItemSortType)">
            <summary>Creates new sorting based on the specified column with the specified SQL expression of the given sort type.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumn.Column">
            <summary>Gets the output column on which this condition is based.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumn.Expression">
            <summary>Gets the SQL expression string.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumn.SortType">
            <summary>Gets the ordering type (ascending or descending).</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumnList">
            <summary>Defines list of sortings.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumnList.Add(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumn)">
            <summary>Adds new Sorted Column item to the list.</summary>
            <returns>Returns the index of the newly added item.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumnList.Clear">
            <summary>Clears the list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumnList.Delete(System.Int32)">
            <summary>Removes item at the specified index from the list and disposes it.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumnList.IndexOf(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumn)">
            <overloads>Determines the index of a specific item in the list.</overloads>
            <summary>Determines the index of a specific Sorted Column item in the list.</summary>
            <returns>Returns the index of the specified item; returns -1 if item is not found.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumnList.IndexOf(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn)">
            <summary>Determines the index of the first found item based on the specified Output Column in the list.</summary>
            <returns>Returns the index of the specified column; returns -1 if item is not found.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumnList.IndexOf(System.String)">
            <summary>Determines the index of item with the specified SQL Expression string in the list.</summary>
            <returns>Returns the index of item with the specified SQL Expression; returns -1 if item is not found.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumnList.Remove(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumn)">
            <overloads>Removes the item from the list and disposes it.</overloads>
            <summary>Removes the Sorted Column from the list and disposes it.</summary>
            <returns>Returns the index of removed item; returns -1 if item is not found.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumnList.Remove(ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.OutputColumn)">
            <summary>Removes the first found item based on the specified Output Column from the list and disposes it.</summary>
            <returns>Returns the index of removed item; returns -1 if item is not found.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumnList.Remove(System.String)">
            <summary>Removes the item with the specified SQL Expression from the list and disposes it.</summary>
            <returns>Returns the index of removed item; returns -1 if item is not found.</returns>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumnList.Item(System.Int32)">
            <summary>Gets the element at the specified index.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryTransformer.SortedColumnList.Count">
            <summary>Indicates the number of items in the list.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPart">
            <summary>Determines the corresponding part of the query.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPart.Query">
            <summary>Instructs to correspond to the whole query.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPart.SubQuery">
            <summary>Instructs to correnspond to the currently active sub-query.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPart.UnionSubQuery">
            <summary>Instructs to correspond to the currently active union sub-query.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder">
            <summary>Base class for the <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.PlainTextSQLBuilder"/> and other SQL generation classes that might be implemented in the future.</summary>
            <remarks>Defines SQL query text generation rules; also determines SQL text formatting options that are not related to specific output format (Plain Text,
            HTML, RTF etc.)</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.BeginUpdate">
            <summary>Prevents the component from SQL generation until the EndUpdate method is called.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.EndUpdate">
            <summary>Resumes SQL generation after it was suspended by the BeginUpdate method.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.SQLUpdated">
            <summary>Fired on update of result SQL query text.</summary>
            <remarks>To prevent this event from firing during the update of several SQL Builder properties at once, enclose this code with <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.BeginUpdate"/> and
            <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.EndUpdate"/> methods.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.SQL">
            <summary>Returns formatted SQL query text.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.IsUpdating">
            <summary>Indicates that the component is in update mode now.</summary>
            <remarks>See <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.BeginUpdate"/> and <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.EndUpdate"/> methods for details.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.QueryBuilder">
            <summary>Refers to the QueryBuilder object to which SQL Builder belongs to.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.RightMargin">
            <summary>Defines maximum length of lines in the generated SQL query text. Zero value means unlimited length of lines.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.KeywordFormat">
            <summary>Determines keywords format in the generated SQL query text.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.QuoteAllIdentifiers">
            <summary>Instructs the component to quote all identifiers, even if its not necessary according to specific SQL syntax rules.</summary>
            <remarks>Quotation marks are determined according to the current SQL syntax.</remarks>
            <example>
            if set to false, the result SQL will be: "Northwind.dbo.[Order details]";<br/>
            if true: "[Northwind].[dbo].[Order details]".
            </example>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.ObjectPrefixSkipping">
            <summary>Instructs the component to skip the unnecessary database object prefixes (database, schema or both) or not.</summary>
            <remarks>The necessity of a prefix is determined in accordance with the current database connection. According to it, there could be defined a default database and
            default schemas that can be omitted in SQL query text. This information is retrieved by Active Query Builder from the database during metadata retrieval
            process and can be changed by setting the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem.Default"/> property of appropriate namespaces.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.MainQueryFormat">
            <summary>Determines various formatting options for the main query.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.DerivedQueryFormat"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.ExpressionSubqueryFormat"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.ExpressionSubqueryFormat">
            <summary>Determines various formatting options of sub-queries used in expressions.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.DerivedQueryFormat">
            <summary>Determines various formatting options for derived tables.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.CTESubQueryFormat">
            <summary>Determines various formatting options for Common Table Expressions.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.UseAltNames">
            <summary>Instructs to generate result SQL query text using alternate names or real database object and field names.</summary>
            <remarks>This property has no effect if alternate names aren't defined in the Metadata Container.</remarks>
            <value>Set this option to true to generate SQL query text for the end-user to modify or to save it between work sessions.<br/>
            Set this option to false to generate SQL query text for execution against real database server.</value>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.UseAltNames"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.OuterKeywordInLinks">
            <summary>Instructs the component to insert "OUTER" keyword before "JOIN" clause or not.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.InnerKeywordInLinks"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.InnerKeywordInLinks">
            <summary>Instructs the component to insert "INNER" keyword before "JOIN" clause or not.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.OuterKeywordInLinks"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.AsKeywordInExpressionAlias">
            <summary>Instructs the component to insert "AS" keyword between field name and alias ("Fleld AS Alias") or not.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.AsKeywordInObjectAlias"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.AsKeywordInObjectAlias">
            <summary>Instructs the component to insert "AS" keyword between object name and its alias ("Table AS Alias") or not.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.AsKeywordInExpressionAlias"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.ParenthesizeANDGroups">
            <summary>Instructs the component to enclose in parentheses criteria groups joined with AND operator if they are separated by the OR operator for clarity
            of criteria representation in text form.</summary>
            <remarks>Can be used in conjunction with the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.ParenthesizeSingleCriterion"/> property.</remarks>
            <value>if false, the result SQL will be: "a &gt;1 and b &gt; 1 or a &lt;= 1 and b &lt; 0";<br/>
            if true: "(a &gt;1 and b &gt; 1) or (a &lt;= 1 and b &lt; 0)".</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.ParenthesizeSingleCriterion">
            <summary>Instructs the component to enclose in parentheses single arithmetic operators for clarity of criteria representation in text form.</summary>
            <remarks>Can be used in conjunction with the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.ParenthesizeANDGroups"/> property.</remarks>
            <example>
            if false, the result SQL will be: "a &gt;1 and b &gt; 1 or a &lt;= 1 and b &lt; 0";<br/>
            if true: "(a &gt;1) and (b &gt; 1) or (a &lt;= 1) and (b &lt; 0)".
            </example>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.ExpandVirtualObjects">
            <summary>Instructs SQL Builder to expand virtual objects and fields to appropriate expressions, sub-queries and dervied tables in result SQL query text or
            not.</summary>
            <value>Set this option to true to generate SQL query text for execution against real database server.<br/>
            Set this option to false to generate SQL query text for the end-user to modify or to save it between work sessions.<br/></value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.TargetQueryPart">
            <summary>Instructs to generate the SQL query text not for the whole query, but for currently visible part of the query only.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.BeginBuildSQLForNode">
            <summary>Fired when the SQL Builder starts build SQL text for a node.</summary>
            <remarks>Used to implement custom SQL formatting rules.</remarks>
            <example>
            	<code title="BeginBuildSQLForNode" description="Adds opening parentesis before each function in the SQL text." lang="CS">
            private void plainTextSQLBuilder_BeginBuildSQLForNode(object sender, AstNode node)
            {
                if (node is SQLExpressionFunction || node is SQLExpressionAggregate)
                {
                    plainTextSQLBuilder.SQLBuilder.WriteSymbol("(");
                }
            }</code>
            </example>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.EndBuildSQLForNode">
            <summary>Fired when the SQL Builder ends build SQL text for a node.</summary>
            <remarks>Used to implement custom SQL formatting rules.</remarks>
            <example>
            	<code title="EndBuildSQLForNode" description="Adds closing parenthesis after each function in the SQL text." lang="CS">
            private void plainTextSQLBuilder_EndBuildSQLForNode(object sender, AstNode node)
            {
                if (node is SQLExpressionFunction || node is SQLExpressionAggregate)
                {
                    plainTextSQLBuilder.SQLBuilder.WriteSymbol(")");
                }
            }</code>
            </example>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.ControlOwner.StructureXml">
            <summary>Gets the structure of the query part in XML format.</summary>
            <remarks>Note that this property is not the best and only way to get information about the query structure. You may use the internal query representation
            objects to analyze and modify SQL queries. See the Query Structure and Query Modification demo projects that included in the installation package.</remarks>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.AffectedColumns">
            <summary>Defines set of the Query Columns List columns to determine their behavior.</summary>
            <remarks>Setting the property of AffectedColumns type to 3 instructs to affect specified behavior to both expression AND conditions
            columns.</remarks>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.AffectedColumns.None">
            <summary>Instructs to disable specified behavior for all columns.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.AffectedColumns.ExpressionColumn">
            <summary>Instructs to affect specified behavior to Expression column.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.AffectedColumns.ConditionColumns">
            <summary>Instructs to affect specified behavior to condition columns (Criteria and Or).</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions">
            <summary>Contains various properties of the Query Column List.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.QueryColumnListOptions"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.UseMSStyleGrouping">
            <summary>Allows to change the way the end-user defines grouping for the query.</summary>
            <remarks>Setting this property to true turns the control to the old-style grouping mode similar to the query building facilities of MS Access and SQL
            Server Management Studio.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.OutputColumnWidth">
            <summary>Specifies width of the Output check box column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.ExpressionColumnWidth">
            <summary>Specifies width of the Expression column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.AggregateColumnWidth">
            <summary>Specifies width of the Aggregate column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.AliasColumnWidth">
            <summary>Specifies width of the Alias column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.SortTypeColumnWidth">
            <summary>Specifies width of the "Sort Type" column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.SortOrderColumnWidth">
            <summary>Specifies width of the "Sort Order" column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.GroupingColumnWidth">
            <summary>Specifies width of the Grouping check box column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.GroupingTypeColumnWidth">
            <summary>Specifies width of the "Group By" column.</summary>
            <remarks>This column is visible only in MS-style grouping mode.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.UseMSStyleGrouping"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.ConditionTypeColumnWidth">
            <summary>Specifies width of the "Criteria for" column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.ConditionColumnWidth">
            <summary>Specifies width of the Criteria and Or columns.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.Font">
            <summary>Gets or sets the font of the text displayed by the Query Column List control.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.TextColor">
            <summary>Gets or sets the color of the text displayed by the control.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.BackColor">
            <summary>Gets or sets the background color (row color) for the Query Column List control.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.AlternateRowColor">
            <summary>Gets or sets the background color for even rows of the Query Column List control.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.EmptySpaceColor">
            <summary>Gets or sets the empty space color of the Query Column List control.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.AutoSizeColumns">
            <summary>Instructs the control to determine width of columns automatically to fit cell contents.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.InitialOrColumnsCount">
            <summary>Specifies the number of "Or" columns initially displayed in the grid.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.RowHeadersWidth">
            <summary>Specifies width of the row header column (the most-left column for dragging rows).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.DisableDirectEditingIn">
            <summary>Lets you to disable direct editing of the Expression and/or condition columns of the control.</summary>
            <remarks>Useful when you want to use custom expression editor ONLY to edit content of these columns.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.UseCustomExpressionBuilder"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.UseCustomExpressionBuilder">
            <summary>Allows to use custom expression builder for Expression and/or condition columns of the control.</summary>
            <remarks>
            	<para>When this option is enabled for a column, the ellipsis button appears at this column while editing it's content. By clicking this button, the component
            fires the QueryBuilder.CustomExpressionBuilder event. The handler for this event should provide the way to edit this column's content and return the
            result.</para>
            	<para>Note: Active Query Builder Professional .NET Subscription includes the Expression Editor facility with code completion and syntax highlight to be used
            for the same purpose.</para>
            </remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.DisableDirectEditingIn"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.NullOrderingInOrderBy">
            <summary>Allows to display "NULLS FIRST"/"NULLS LAST" options in the Sort Type column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.CreateColumnAliasesForUnnamedColumns">
            <summary>Gets or sets whether to create aliases for unnamed columns.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.ObjectsSortingType">
            <summary>Defines various types of sorting database objects within the Database Schema Tree.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.ObjectsSortingType.Name">
            <summary>Instructs to sort database objects by object name.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.ObjectsSortingType.TypeName">
            <summary>Instructs to sort database objects by object type, then by object name.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.ObjectsSortingType.NameExceptFields">
            <summary>Instructs to sort database objects by object name. Fields (columns) are unsorted.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.ObjectsSortingType.TypeNameExceptFields">
            <summary>Instructs to sort database objects by object type, then by object name. Fields (columns) are unsorted.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.ObjectsSortingType.None">
            <summary>Instructs not to sort database objects.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SearchBoxDock">
            <summary>Defines possible search box docking positions in the Database Schema Tree.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SearchBoxDock.Top">
            <summary>Dock to top.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SearchBoxDock.Bottom">
            <summary>Dock to bottom.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.DatabaseSchemaTreeOptions">
            <summary>Contains various options of the Database Schema Tree.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DatabaseSchemaTreeOptions"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DatabaseSchemaTreeOptions.SortingType">
            <summary>Defines order of database object nodes within a group.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DatabaseSchemaTreeOptions.DefaultExpandLevel">
            <summary>Determines the level of initial Database Schema Tree nodes expansion.</summary>
            <value>Zero value instructs the component to show database schema tree collapsed; -1 value means full expansion of the tree. Positive values instructs
            the component to expand to the specified number of tree levels.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DatabaseSchemaTreeOptions.Font">
            <summary>Gets or sets the font of the text displayed in the nodes of Database Schema Tree.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DatabaseSchemaTreeOptions.BackColor">
            <summary>Gets or sets the background color for the Database Schema Tree Pane.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DatabaseSchemaTreeOptions.TextColor">
            <summary>Gets or sets the text color for the Database Schema Tree Pane.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DatabaseSchemaTreeOptions.SearchBoxDocking">
            <summary>Determines search box docking position.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DatabaseSchemaTreeOptions.SearchBoxVisible">
            <summary>Determines visibility of the search box.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DatabaseSchemaTreeOptions.SearchFields">
            <summary>Instructs to search for field names in addition to default searching for object names.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DatabaseSchemaTreeOptions.ShowDescriptionTooltips">
            <summary>Instructs the component to show or hide description tooltip over the database schema tree nodes.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DatabaseSchemaTreeOptions.DescriptionTooltipsDelay">
            <summary>Gets or sets the delay of description tooltip over the database schema tree nodes.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter">
            <summary>Describes single parameter that was found in the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.Symbol">
            <summary>Returns parameter symbol.</summary>
            <remarks>The following symbols are acceptable by Active Query Builder:<br/>
            "?" - unnamed parameter ("WHERE Field = ?")<br/>
            ":" - named parameter ("WHERE Field = :Param")<br/>
            "@" - MS SQL Server named parameter (WHERE Field = @Param")</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.Name">
            <summary>Returns name of parameter. Returns empty string in case of unnamed parameter.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.Symbol"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.FullName"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.FullName">
            <summary>Returns full name of parameter (name and symbol).</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.Name"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.Symbol"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.DataType">
            <summary>Returns compared field data type.</summary>
            <remarks>Returns DbType.Object value in case of using parameter in a complex expression.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.MetadataField"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.ComparedField"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.CompareOperator">
            <summary>Returns comparison operator that was used with this parameter.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.ComparedField"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.ComparedObject"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.ComparedField">
            <summary>Returns field name that was compared with this parameter.</summary>
            <remarks>Returns empty string in case of using parameter in a complex expression.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.MetadataField"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.ComparedObject"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.ComparedObject">
            <summary>Returns database object name of a field that was compared with this parameter.</summary>
            <remarks>Returns empty string in case of using parameter in a complex expression.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.ComparedField"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.MetadataObject"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.MetadataObject">
            <summary>Returns a reference to MetadataObject object from the Metadata Container if a corresponding field's object was found in it.</summary>
            <remarks>Returns null in case of using parameter in a complex expression.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.MetadataField"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.ComparedObject"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.MetadataField">
            <summary>Returns a reference to MetadataField object from the Metadata Container if a corresponding field was found in it.</summary>
            <remarks>Returns null in case of using parameter in a complex expression.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.MetadataObject"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.ComparedField"></seealso>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.ParameterList">
            <summary>Lists parameters that were found in the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.ParameterList.QueryBuilder">
            <summary>Refers to the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.ParameterList.QueryBuilder"/> object to which this Parameters List belongs to.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.ParameterList.Count">
            <summary>Returns the number of parameters in the list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.ParameterList.Item(System.Int32)">
            <summary>Gets access to the items of the list.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions">
            <summary>Contains various properties of the Query Structure Tree.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.QueryStructureTreeOptions"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.UnionsNodeText">
            <summary>Gets or sets the caption for node that groups union sub-queries.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.ShowExpressions">
            <summary>Instructs the component to show query expressions in the Query Structure Tree.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.ExpressionsNodeText">
            <summary>Gets or sets the caption for node that groups query expressions.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.ShowDataSources">
            <summary>Instructs the component to show query data sources in the Query Structure Tree.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.DataSourcesNodeText">
            <summary>Gets or sets the caption for node that groups query data sources.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.ImageList">
            <summary>Gets or sets ImageList object to use when displaying icons for the nodes of Query Structure Tree.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.QueriesImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for sub-queries.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.ExpressionsNodeImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for expression grouping nodes.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.ExpressionImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for query expressions.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.DataSourcesNodeImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for query data sources grouping nodes.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.DataSourceImageIndex">
            <summary>Gets or sets the image list index value of the image displayed for query data sources (database objects or sub-queries).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.ExpandQueryNodes">
            <summary>Instructs the component to expand sub-query nodes by default.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.ExpandUnionNodes">
            <summary>Instructs the component to expand nodes that groups union sub-queries by default.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.ExpandExpressionNodes">
            <summary>Instructs the component to expand nodes that groups query expressions by default.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.ExpandDataSourceNodes">
            <summary>Instructs the component to expand nodes that groups query data sources by default.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.Font">
            <summary>Gets or sets the font of the text displayed in the nodes of  Query Structure Tree.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.BackColor">
            <summary>Gets or sets the background color for the Query Structure Tree Pane.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.TextColor">
            <summary>Gets or sets the text color for the Query Structure Tree Pane.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsField">
            <summary>Describes a database object field being used in the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsField.MetadataObject">
            <summary>Gets the reference to the MetadataObject object that corresponds to the database object field.</summary>
            <remarks>Can be null if a corresponding field is not found in the Metadata Container.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsField.MetadataField">
            <summary>Gets the reference to the MetadataField object that corresponds to the database object field.</summary>
            <remarks>Can be null if a corresponding field is not found in the Metadata Container.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsField.FieldName">
            <summary>Gets the name of the database object field.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsField.ObjectName">
            <summary>Gets the database object name for the database object field.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsField.FullName">
            <summary>Gets the fully qualified name of the database object field.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsField.Selected">
            <summary>Indicates that the field is used in the SELECT list, i.e. it affects the query result set.</summary>
            <remarks>Unlike the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStatistics.OutputColumns"/>, this property allows to retrieve the list of fields, not expressions that were used for output.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsField.FieldType">
            <summary>Gets DB type for the database object field.</summary>
            <value>Value is taken from the MetadataField.FieldType property; is set to DbType.Object if a corresponding field is not found in the Metadata
            Container.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsField.IsFromQuery">
            <summary>Indicates that the field was explicitly used in the query.</summary>
            <remarks>A field might also be added to the query during expansion of virtual objects and fields.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsField.IsFromVirtual"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsField.IsFromVirtual">
            <summary>Indicates that the field was added to the query during expansion of virtual objects and fields.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsFieldList">
            <summary>Lists database object fields used in the query (<see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStatistics.UsedDatabaseObjectFields"/>).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsFieldList.Count">
            <summary>Indicates the number of items in the list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsFieldList.Item(System.Int32)">
            <summary>Gets or sets the element at the specified index.</summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>The element at the specified index.</value>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStatistics">
            <summary>Allows to retrieve various information about the query: list of used database objects and their fields, list of output query columns.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStatistics.UsedDatabaseObjects">
            <summary>Gets list of database objects that were used in the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStatistics.UsedDatabaseObjectFields">
            <summary>Gets list of database object fields that were used in the query.</summary>
            <example>
            Use the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsField.Selected">Selected Property</see> to get list of fields that were used for output (in the SELECT list of the query).
            </example>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStatistics.OutputColumns">
            <summary>Gets list of the query result set expressions (output columns of the query).</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsDatabaseObject">
            <summary>Describes a database object being used in the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsDatabaseObject.MetadataObject">
            <summary>Gets the reference to the MetadataObject object that corresponds to the database object.</summary>
            <remarks>Can be null if a corresponding MetadataObject object is not found in the MetadataContainer.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsDatabaseObject.ObjectName">
            <summary>Gets fully qualified name of the database object.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsDatabaseObject.Aliases">
            <summary>Lists aliases that were used in the query for the database object.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsDatabaseObject.IsFromQuery">
            <summary>Indicates that the object was explicitly used in the query.</summary>
            <remarks>An object might also be added to the query during expansion of virtual objects and fields.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsDatabaseObject.IsFromVirtual"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsDatabaseObject.IsFromVirtual">
            <summary>Indicates that the object was added to the query during expansion of virtual objects and fields.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsDatabaseObjectList">
            <summary>Lists database objects used in the query (<see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStatistics.UsedDatabaseObjects"/>).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsDatabaseObjectList.Count">
            <summary>Indicates the number of items in the list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsDatabaseObjectList.Item(System.Int32)">
            <summary>Gets or sets the element at the specified index.</summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>The element at the specified index.</value>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumn">
            <summary>Describes a column in result set of the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumn.QueryColumnListItem">
            <summary>Gets the reference to the Query Column List item object.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumn.Expression">
            <summary>Gets the SQL expression string for the coumn as it is written in the SELECT list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumn.ColumnAlias">
            <summary>Gets the alias of the column.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumn.ColumnName">
            <summary>Gets the name of column as it should be referred in the outer query or as will be named in the query resultset.</summary>
            <value>Returns column alias if it's not empty, otherwise returns field name.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumn.FieldName">
            <summary>Gets the database object field name.</summary>
            <value>Returns field name if the column is a simple database object field, otherwise returns empty string.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumn.ObjectAlias">
            <summary>Gets the alias of database object if the column is a single database object field.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumn.ObjectName">
            <summary>Gets the name of database object.</summary>
            <value>Returns the name of database object if the column is a single database object field, otherwise returns empty string.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumn.FieldType">
            <summary>Gets DB type for the database object field if the column is a single database object field.</summary>
            <value>Returns the type of appropriate database object field. Returns DbType.Object value if a corresponding field is not found in the Metadata Container or
            the column is not a single database object field.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumn.MetadataField">
            <summary>Gets the reference to the MetadataField object that corresponds to the database object field.</summary>
            <remarks>Can be null if a corresponding field is not found in the Metadata Container or the column is not a single database object field.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumn.MetadataObject">
            <summary>Gets the reference to the MetadataObject object that corresponds to the database object field.</summary>
            <remarks>Can be null if a corresponding field is not found in the Metadata Container or the column is not a single database object field.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumn.DataSource">
            <summary>Gets the reference to the DataSource query object to which this field belongs to.</summary>
            <value>Returns DataSource object if the column is a single database object field, otherwise returns null.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumn.ObjectNameInQuery">
            <summary>Gets the name of database object as it should be referred to qualify fields.</summary>
            <value>Returns object alias if it's not empty, otherwise returns object name.</value>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumnList">
            <summary>Lists output (result set) columns of the query (<see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStatistics.OutputColumns"/>).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumnList.Item(System.Int32)">
            <summary>Gets or sets the element at the specified index.</summary>
            <param name="index">The zero-based index of the element to get or set.</param>
            <value>The element at the specified index.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.StatisticsOutputColumnList.Count">
            <summary>Indicates the number of items in the list.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.IdentCaseSensitivity">
            <summary>Determines various types of database server case sensitivity options.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.IdentCaseSensitivity.Insensitive">
            <summary>Instructs to treat all identifiers case insensitive.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.IdentCaseSensitivity.SensitiveUpperCase">
            <summary>Instructs to treat quoted identifies case sensitive; assumes unquoted identifies referring to objects in upper case.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.IdentCaseSensitivity.SensitiveLowerCase">
            <summary>Instructs to treat quoted identifies case sensitive; assumes unquoted identifies referring to objects in lower case.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSyntaxProvider">
            <summary>Base class for all syntax providers.</summary>
            <remarks>Syntax providers determine the syntax rules of specific database servers and the rules to retrieve metadata from database servers.</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSyntaxProvider.ValidateQuery(System.String,System.String@)">
            <summary>Validates the given SQL query for compliance with the rules of SQL syntax.</summary>
            <param name="sql">SQL query text.</param>
            <param name="errorInfo">SQL parsing error message string.</param>
            <remarks>Please note that Active Query Builder does not perform validation against specific database context, 
            		 i.e. presence of table fields, function parameters, constants, etc.</remarks>
            <returns>true if the query is valid; false otherwise.</returns>
            <example>
            	<code title="ValidateQuery method sample" description="Validates a query against rules of MS SQL Server syntax." lang="CS">
            MSSQLSyntaxProvider syntax = new MSSQLSyntaxProvider();
            string errorInfo = "";
             
            if (!syntax.ValidateQuery("select * from Orders", ref errorInfo))
            {
               MessageBox.Show(errorInfo);
            }</code>
            </example>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSyntaxProvider.QuoteBegin">
            <summary>Gets the symbol to start quotation of identifier.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSyntaxProvider.QuoteEnd">
            <summary>Gets the symbol to finish quotation of identifier.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSyntaxProvider.Description">
            <summary>Gets description of the syntax provider class.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSyntaxProvider.IdentCaseSens">
            <summary>Defines the way database server treats quoted and unquoted identifiers.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSyntaxProvider.DenyIntoClause">
            <summary> Instructs to deny the INTO clause parsing and generation. </summary>
            <value>false to allow INTO clause; true to deny it.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSyntaxProvider.DetectServerVersion">
            <summary>Instructs the component to detect database server version automatically.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilter">
            <summary>Defines a set of rules to filter metadata.</summary>
            <remarks>
            	<para>Each rule defined in the list is represented by <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem"/> object. Metadata filter may have multiple exclusion and inclusion items (rules). If
            metadata filter has no inclusion items, the exculsion items will be applied to the whole database schema. If metadata filter has some inclusion items, they
            will constitute a subset of database schema, to which the exclusion items will be applied.</para>
            	<para>You may treat those rules as SQL conditions combined with OR operators in WHERE clause of the SELECT statement that retrieves the list of objects to be
            loaded to the Metadata Container. Conditions marked with the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem.Exclude">MetadataFilterItem.Exclude</see> flag are prefixed with NOT operator. The result SQL condition
            will look like the following: "([inculsion rule] OR [inclusion rule] OR ...) AND NOT ([exculsion rule] OR [exclusion rule] OR ...)"</para>
            	<para>Alternate way to define metadata filtration rules is to use the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.ExcludeFilter"/> and <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.IncludeFilter"/>. You may
            use both types of filters at a time: the conditions set using MetadataSimpleFilter will be converted to a set of MetadataFilterItems which will be added to the
            MetadataFilter.</para>
            </remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilter.Add">
            <summary>Adds new Metadata Filter item to collection</summary>
            <returns>Returns reference to the newly created item.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilter.Insert(System.Int32)">
            <summary>Adds new Metadata Filter item to the specified position in collection.</summary>
            <param name="index">specifies position for a new item</param>
            <returns>Returns reference to the newly created item.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilter.Filter(System.Collections.Generic.ICollection{ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataItem})">
            <summary>Holds the list of metadata filter items.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem">
            <summary>Defines single metadata filtration rule.</summary>
            <remarks>
            	<para>Metadata filter item is a set of masks and flags that determines single filtration rule. Each rule can instruct to include or exclude metadata items that
            match the masks. Use the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem.Exclude"/> property to specify if this rule defines objects for exclusion or inclusion.</para>
            	<para>Masks act similar to the "LIKE" SQL operator. Use the percent sign (%) to represent any sequence of characters; use the underscore sign (_) to represent any
            single character. If you want to define a set of masks for specific property (schema or object name), you have to add multiple filter items.</para>
            </remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem.ObjectTypes">
            <summary>Defines which types of database objects (tables, views, etc.) will be selected by this item.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem.FlagUser">
            <summary>Determines if this item will select matching system metadata objects or not.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem.FlagSystem">
            <summary>Determines if this item will select matching system metadata objects or not.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem.Server">
            <summary>Gets or sets server name mask.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem.Database">
            <summary>Gets or sets database name mask.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem.Schema">
            <summary>Gets or sets schema name mask.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem.Package">
            <summary>Gets or sets package name mask.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem.Object">
            <summary>Gets or sets object name mask.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem.Field">
            <summary>Gets or sets field name mask.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem.CaseSensitive">
            <summary>Instructs to treat masks as case sensitive or not.</summary>
            <value>True to treat masks as case sensitive; false - case insensitive.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilterItem.Exclude">
            <summary>Determines if this rule acts to exclude matching metadata items or include them.</summary>
            <remarks>If metadata filter has no inclusion items, the exculsion items will be applied to the whole database schema. If metadata filter has some inclusion
            items, they will constitute a subset of database schema, to which the exclusion items will be applied.</remarks>
            <value>True instructs to make this rule exclusive; false to make this rule inclusive.</value>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObject">
            <summary>Class to represent database objects in the Metadata Container.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObject.IsVirtual">
            <summary>Indicates that the metadata object is a virtual calculated object.</summary>
            <remarks>Virtual objects are replaced with expressions in result SQL query text. The <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObject.Expression">Expression property</see> of virtual metadata object must be set
            to valid SELECT statement to be used as derived table in result SQL query.</remarks>
            <returns>True if Expression is not empty; false otherwise.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObject.GetReferencingObjects">
            <summary>Returns a list of <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObject">MetadataObjects</see> which have foreign keys referencing this <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObject">MetadataObject</see>.</summary>
            <returns>Returns filled IList&lt;<see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObject">MetadataObject</see>&gt;, or empty list if there are no such objects.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObject.GetReferencedObjects">
            <summary>Returns a list of <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObject">MetadataObjects</see> which referenced by this object foreign keys.</summary>
            <returns>Returns filled IList&lt;<see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObject">MetadataObject</see>&gt;, or empty list if there are no such objects.</returns>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObject.ReferencedObjectName">
            <summary>Gets or sets the name of referenced object for synonym.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObject.ReferencedObject">
            <summary>Gets the reference to Metadata Object referred by the ReferencedObjectName property.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObject.Expression">
            <summary>Gets or sets the SQL expression string for a virtual metadata object.</summary>
            <value>Valid SELECT statement string to be used as replacement for this object in result SQL query text in a form of derived table.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataObject.ExpressionAST">
            <summary>Gets parsed SQL expression for a virtual metadata object.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataParameter">
            <summary>Class to represent parameters of stored procedures and functions in the Metadata Container.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataParameter.DataTypeName">
            <summary>Gets or sets native server data type name of a field.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataParameter.DataType">
            <summary>Gets or sets the data type of parameter.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataParameter.Size">
            <summary>Gets or sets the data type size of parameter.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataParameter.Precision">
            <summary>Gets or sets the data type precision of parameter.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataParameter.Scale">
            <summary>Gets or sets the data type scale of parameter.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataParameter.Direction">
            <summary>Gets or sets parameter direction.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataForeignKeyCardinality">
            <summary>Determines possible cardinality values for one side of relationship of the foreign key.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataForeignKeyCardinality.Unknown">
            <summary>Indicates that the cardinality of this side of relationship is unknown.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataForeignKeyCardinality.One">
            <summary>Indicates that the side of relationship may have one occurence only.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataForeignKeyCardinality.Many">
            <summary>Indicates that the side of relationship may have many occurences.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataForeignKey">
            <summary>Class to represent foreign key relationships in the Metadata Container.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataForeignKey.ReferencedObject">
            <summary>Gets or sets the referenced metadata object of relationship.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataForeignKey.ReferencedObjectName">
            <summary>Gets or sets the name of referenced metadata object of relationship.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataForeignKey.ReferencedFields">
            <summary>Gets or sets list of fields of the referenced side of relationship.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataForeignKey.ReferencedCardinality">
            <summary>Gets or sets cardinality of the referenced side of relationship.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataForeignKey.Fields">
            <summary>Gets or sets list of fields of the referential side of relationship.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataForeignKey.Cardinality">
            <summary>Gets or sets cardinality of the referential side of relationship.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataField">
            <summary>Class to represent fields of database objects in the Metadata Container.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataField.IsVirtual">
            <summary>Indicates that the metadata object is a virtual calculated field.</summary>
            <remarks>Virtual fields are replaced with expressions in result SQL query text. The <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataField.Expression">Expression property</see> of virtual metadata field must be set to
            valid SQL expression to be used as replacement for this field in result SQL query.</remarks>
            <returns>True if Expression is not empty; false otherwise.</returns>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataField.FieldTypeName">
            <summary>Gets or sets native server data type name of a field.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataField.FieldType">
            <summary>Gets or sets field type of a field.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataField.Size">
            <summary>Gets or sets the data type size of a field.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataField.Precision">
            <summary>Gets or sets the data type precision of a field.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataField.Scale">
            <summary>Gets or sets the data type scale of a field.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataField.PrimaryKey">
            <summary>Gets or sets the Primary Key attribute of a field.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataField.Nullable">
            <summary>Gets or sets the Nullable attribute of a field.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataField.ReadOnly">
            <summary>Gets or sets the Readonly attribute of a field.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataField.Expression">
            <summary>Gets or sets the SQL expression string for a virtual metadata field.</summary>
            <remarks>Firtual fields are usually defined to hide complex SQL expressions or correlated sub-queries from the end-user.</remarks>
            <value>Valid SQL expression string to be used as replacement for this field in result SQL query text.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataField.ExpressionAST">
            <summary>Gets parsed SQL expression for a virtual metadata field.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider">
            <summary>Base class for all Metadata Provider components.</summary>
            <remarks>
            	<para>Metadata Providers are used to provide access to the database connection to get the metadata information.</para>
            	<para>Metadata Provider is intended to be assigned to the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataProvider">QueryBuilder.MetadataProvider Property</see>.</para>
            	<para>Using Metadata Provider you will get the metadata information loaded to the component automatically. However, you may use the Query Builder without a
            Metadata Provider, for example, if you can't establish direct connection to the database working in multi-tier environment. Working without a Metadata Provider
            you should fill the list of database objects to the <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer">Metadata Container</see> by yourself; otherwise you will not be able to browse the Database
            Schema Tree. Also you'll have to set the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.OfflineMode">OfflineMode Property</see> to true to deny execution of metadata extraction queries and set
            the <see cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ItemMetadataLoading">MetadataContainer.ItemMetadataLoading Event</see> to fill the field lists of database objects being added to the
            query; otherwise you will see them empty at the Design Pane.</para>
            </remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.ExecSQL(System.String,System.Boolean)">
            <summary>Executes SQL query against Connection and returns the IDataReader interface in result.</summary>
            <param name="sql">SQL query to be executed against Connection.</param>
            <param name="schemaOnly">Flag indicating that no data fetching is needed after the SQL query execution.</param>
            <returns>Returns IDataReader interface to get access to the SQL query execution result.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.ExecSQLNoResult(System.String)">
            <summary>Executes SQL query against Connection. Returns no result.</summary>
            <param name="sql">SQL query to be executed against Connection.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.Connect">
            <summary>Opens connection to the database.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.Disconnect">
            <summary>Closes connection to the database.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.BeforeConnect">
            <summary>Fired before opening connection to the database.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.AfterConnect">
            <summary>Fired after opening connection to the database.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.BeforeDisconnect">
            <summary>Fired before closing connection to the database.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.AfterDisconnect">
            <summary>Fired after closing connection to the database.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.BeforeSqlExec">
            <summary>Fired before execution of SQL query.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.AfterSqlExec">
            <summary>Fired after successfull execution of the SQL query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.CanExecSQL">
            <summary>Indicates if a metadata provider is able to execute SQL queries against database connection.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.Connected">
            <summary>Gets or sets a value indicating whether the underlying <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.Connection"/> object is connected to the database.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.Description">
            <summary>Gets description string for the purpose of selecting the right metadata provider from the list of available providers.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.Connection">
            <summary>Gets or sets an object implementing IDbConnection interface to provide access to the database.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseMetadataProvider.CommandTimeout">
            <summary>Gets or sets the SQL command timeout.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesMSSQLCEForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesSQLiteForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesSQLiteForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList">
            <summary>List of SQL qualified names.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.#ctor(ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLContext)">
            <summary> Initializes a new instance of the SQL qualified names list. </summary>
            <param name="sqlContext"> Specifies SQL Context for the SQL qualified names in list. </param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.Assign(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList)">
            <summary>Assigns an SQLQualifuiedNameList to another SQLQualifiedNameList.</summary>
            <param name="source">The list to assign.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.Clear">
            <summary>Clears the list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.Contains(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName)">
            <summary>Determines whether the list contains a specific SQL qualified name.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.CopyTo(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName[],System.Int32)">
            <summary>Copies the elements of the list to an array, starting at a particular array index.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.Add(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName)">
            <summary>Adds SQL qualified name to the end of the list.</summary>
            <overloads>Adds SQL qualified name to the end of the list.</overloads>
            <param name="obj">SQL qualified name to be added to the end of the list.</param>
            <returns>Returns index of the newly added SQL qualified name in the list.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.Extract(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName)">
            <summary>Removes and returns the SQL qualified name from the list.</summary>
            <param name="item">The SQL qualified name to be removed from the list.</param>
            <returns>Returns the extracted SQL qualified name object; returns null in case the specified SQL qualified name is not found in the list.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.RemoveAt(System.Int32)">
            <summary>Removes and disposes the SQL qualified name from the list at specified index.</summary>
            <param name="index">Index of item to remove and dispose.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.Remove(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName)">
            <summary>Removes and disposes the SQL qualified name from the list.</summary>
            <param name="obj">The SQL qualified name to be removed from the list.</param>
            <returns>Returns the index of removed SQL qualified name; returns -1 in case the specified SQL qualified name is not found in the list.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.IndexOf(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName)">
            <summary>Determines the index of a specific SQL qualified name in the list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.Insert(System.Int32,ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName)">
            <summary>Inserts SQL qualified name to the list at the specified index.</summary>
            <param name="index">The zero-based index at which new SQL qualified name should be inserted.</param>
            <param name="obj">The SQL qualified name to be inserted to the list at the specified index.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.First">
            <summary>Gets the first SQL qualified name in the list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.Last">
            <summary>Gets the last SQL qualified name in the list.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.FindByName(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName)">
            <summary>Gets the index of the specified SQL quailfied name.</summary>
            <overloads>Gets the index of the specified SQL quailfied name.</overloads>
            <param name="obj">The SQL qualified name to find in the list.</param>
            <returns>The zero-based index of the specified SQL qualified name if found in the list; -1 otherwise.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.FindByName(System.String)">
            <summary>Gets the index of the specified SQL quailfied name represented as string.</summary>
            <param name="name">The SQL qualifed name string to find in the list.</param>
            <returns>The zero-based index of the specified SQL qualified name if found in the list; -1 otherwise.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.SortByNames">
            <summary>Sorts the SQL qualified names in the list by comparing the identifiers of SQL qualified names from left to right.</summary>
            <remarks>Comparison is performed over the leftmost prefixes of the SQL qualified names first, than over the next identifiers from left to right.</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.Add(System.String)">
            <summary>Parses the string as SQL qualified name and adds it to the end of the list.</summary>
            <param name="name">String to be parsed as SQL qualified name and added to the end of the list.</param>
            <returns>Returns index of the newly added SQL qualified name in the list.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.AddIdentifier(System.String,System.Boolean)">
            <summary>Creates single SQL qualified name from identifier and adds it to the end of the list with the specified case sensitivity flag.</summary>
            <param name="caseSensitive">Flag to override identifier case sensitivity option of the syntax provider (<see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSyntaxProvider.IdentCaseSens">IdentCaseSens</see>) specified in the
            SQL context.</param>
            <param name="name">Identifier string to be added as a single SQL qualified name to the list.</param>
            <returns>Returns index of the newly added SQL qualified name in the list.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.AddIdentifier(System.String)">
            <summary>Creates single SQL qualified name from identifier string and adds it to the end of the list.</summary>
            <overloads>Creates single SQL qualified name from identifier and adds it to the end of the list.</overloads>
            <param name="name">Identifier string to be added as a single SQL qualified name to the list.</param>
            <returns>Returns index of the newly added SQL qualified name in the list.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.Move(System.Int32,System.Int32)">
            <summary>Moves the SQL qualified name at the specified index to a new location in the list.</summary>
            <param name="oldIndex">The zero-based index specifying the location of the SQL qualified name to be moved.</param>
            <param name="newIndex">The zero-based index specifying the new location of the SQL qualified name.</param>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.Item(System.Int32)">
            <summary>Gets or sets the SQL qualified name in the list at the specified index.</summary>
            <param name="index">The zero-based index of the SQL qualified name to be get or set.</param>
            <value>The SQL qualified name at the specified index.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.SQLContext">
            <summary>Gets the SQL Context for the SQL qualified names in the list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.Count">
            <summary>Gets the number of elements contained in the list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedNameList.IsReadOnly">
            <summary>Gets a value indicating whether the list is read-only.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLIdentifiersCollection">
            <summary>Collection of SQL identifiers.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLIdentifiersCollection.#ctor(ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLContext)">
            <summary> Initializes a new instance of the identifiers collection. </summary>
            <param name="sqlContext"> Specifies SQL Context for the identifiers in collection. </param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLIdentifiersCollection.Add">
            <summary>Adds a new identifier to the end of the collection.</summary>
            <returns>Returns AST token object representing identifier.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLIdentifiersCollection.AddIdentifier(System.String)">
            <summary>Adds an identifier to the collection.</summary>
            <param name="identifier">The identifier string to be added to the end of the collection.</param>
            <returns>Returns AST token object representing identifier.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLIdentifiersCollection.Insert(System.Int32)">
            <summary>Inserts a new identifier to the collection at the specified index.</summary>
            <param name="index">The zero-based index at which new identifier should be inserted.</param>
            <returns>Returns AST token object representing identifier.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLIdentifiersCollection.ContainsSameId(ActiveDatabaseSoftware.ActiveQueryBuilder.AstTokenIdentifier)">
            <summary>Checks if such identifier contains in the collection.</summary>
            <param name="identifier">AST token object representing identifier to be checked for presence in the collection.</param>
            <returns>True if such identifier contains in the collection; false otherwise.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLIdentifiersCollection.ContainsSameIdStr(System.String)">
            <summary>Checks if such identifier contains in the collection.</summary>
            <param name="identifier">The identifier string to be checked for presence in the collection.</param>
            <returns>True if such identifier contains in the collection; false otherwise.</returns>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLIdentifiersCollection.Item(System.Int32)">
            <summary>Gets the identifier from the collection at the specified index.</summary>
            <param name="index">The zero-based index of the identifier to be get.</param>
            <value>The identifier at the specified index.</value>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName">
            <summary>Class for representation of the SQL qualified name (can be name of database object or field in a query, etc.).</summary>
            <remarks>SQL qualified name is a set of identifiers separated with dots. SQL qualified name class holds list of identifiers. It allows to modify this list from left or
            right side (consider working in LeftToRight text direction). These sides are called "Prefix" and "Name". I.e. if you want to add an element from the right
            side, you should call the <see cref="O:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.AddName">AddName method</see>; if you want to remove an element
            from the left side, you should call the <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.RemoveFirstPrefix"/> method.</remarks>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.DBLink">
            <summary>Gets or sets the DB Link qualified name (used for Oracle databases).</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.AddPrefix(System.String,System.Boolean)">
            <summary>Adds identifier to the left side from string with the specified case sensitivity flag.</summary>
            <overloads>Adds identifier to the left side of the qualified name.</overloads>
            <param name="caseSensitive">Flag to override identifier case sensitivity option of the syntax provider (<see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSyntaxProvider.IdentCaseSens">IdentCaseSens</see>) specified in the
            SQL context.</param>
            <param name="prefix">Identifier string to add to the left side of the qualified name.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.AddName(System.String,System.Boolean)">
            <summary>Adds identifier to the right side from string with the specified case sensitivity flag.</summary>
            <overloads>Adds identifier to the right side of the qualified name.</overloads>
            <param name="name">Identifier string to add to the right side of the qualified name.</param>
            <param name="caseSensitive">Flag to override identifier case sensitivity option of the syntax provider (<see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSyntaxProvider.IdentCaseSens">IdentCaseSens</see>) specified
            in the SQL context.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.AddPrefix(System.String)">
            <summary>Adds identifier to the left side from string.</summary>
            <param name="prefix">Identifier string to add to the left side of the qualified name.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.AddName(System.String)">
            <summary>Adds identifier to the right side from string.</summary>
            <param name="name">Identifier string to add to the right side of the qualified name.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.AddPrefix(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName)">
            <summary>Adds identifier(s) to the left side from SQL qualified name.</summary>
            <param name="prefix">SQL qualified name (i.e. list of identifiers) to add to the left side of the qualified name.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.AddName(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName)">
            <summary>Adds identifier(s) to the right side from SQL qualified name.</summary>
            <param name="name">SQL qualified name (i.e. list of identifiers) to add to the right side of the qualified name.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.AddPrefix(ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken)">
            <summary>Adds AST token identifier to the left side of name.</summary>
            <param name="prefix">AST token identifier to add to the left side of the qualified name.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.AddName(ActiveDatabaseSoftware.ActiveQueryBuilder.AstToken)">
            <summary>Adds AST token identifier to the right side of name.</summary>
            <param name="name">AST token identifier to add to the right side of the qualified name.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.ExtractPrefix">
            <summary>Extracts (removes and returns) an identifier from the left side of the qualified name.</summary>
            <returns>Returns AST token identifier from the left side of the qualified name.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.ExtractName">
            <summary>Extracts (removes and returns) an identifier from the right side of the qualified name.</summary>
            <returns>Returns AST token identifier from the right side of the qualified name.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.RemoveLastName">
            <summary>Removes and disposes an identifier from the right side of the qualified name.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.RemoveFirstPrefix">
            <summary>Removes and disposes an identifier from the left side of the qualified name.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.StartsWith(ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName)">
            <summary>Determines if the SQL qualified name starts with the specified set of identifiers.</summary>
            <param name="name">SQL qualified name (i.e. list of identifiers) to compare with identifiers at the left side of the qualified name.</param>
            <returns>Returns true if the SQL qualified name has the same list of identifiers from the left ("Prefix") side.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.ToString">
            <summary>Returns string representation of the object (same as the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.QualifiedName"/> property).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.QualifiedName">
            <summary>Gets qualified name string (may be quoted or not quoted according the SQL Context settings).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.QualifiedNameWithQuotes">
            <summary>Gets quoted qualified name string.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.QualifiedNameWithoutQuotes">
            <summary>Gets unquoted qualified name string.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.QualifiedNameForServer">
            <summary>Gets the qualified name string built by rules of the SQL Builder for direct execution against database server (used internally).</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLQualifiedName.NonQualifiedNameNames">
            <summary>Gets qualified name string not prefixed with database object alias (used in descendant classes).</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderConditionFormatNL">
            <summary>Defines line breaking rules in conditions of the query.</summary>
            <remarks>Applied to <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderConditionFormat.NewLineAfter"/> property.</remarks>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderConditionFormatNL.None">
            <summary>
            	<para>Instructs not to break condition part by lines.</para>
            	<para>Note that this line still might be broken if the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.RightMargin"/> property is not set to zero.</para>
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderConditionFormatNL.TopmostOr">
            <summary>Instructs to insert line break after topmost OR operators of condition.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderConditionFormatNL.TopmostLogical">
            <summary>Instructs to insert line break after topmost logical operators of condition.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderConditionFormatNL.AllLogical">
            <summary>Instructs to insert line break after all logical operators (AND, OR, NOT, etc.)</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SkipKeywordMode">
            <summary>Defines various options for the component behavior in case of possibility of inserting an optional keyword.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SkipKeywordMode.DontCare">
            <summary>Instructs the component to preserve the end-user notation or to act in default way.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SkipKeywordMode.SkipIfPossible">
            <summary>Instructs the component to skip an optional keyword if this allowed by specific SQL dialect.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SkipKeywordMode.PrintAlways">
            <summary>Instructs the component to add an optional keyword always.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.ObjectPrefixSkipping">
            <summary>Defines various options for skipping the unnecessary database object prefixes in the generated SQL query text.</summary>
            <remarks>Applied to <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.ObjectPrefixSkipping"/> and <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.ObjectPrefixSkipping"/> properties.</remarks>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.ObjectPrefixSkipping.SkipAll">
            <summary>Instructs the component to skip all <u>unnecessary</u> database object prefixes.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.ObjectPrefixSkipping.SkipDatabase">
            <summary>Instructs the component to skip database object prefix possible in the current SQL context.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.ObjectPrefixSkipping.SkipNothing">
            <summary>Instructs the component to preserve all database object prefixes.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.IdentQuotation">
            <summary> Defines various options for quotation of identifiers by the SQL Builder. </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.IdentQuotation.None">
            <summary>Instructs the SQL Builder not to quote identifiers.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.IdentQuotation.IfNeed">
            <summary>Instructs the SQL Builder to quote identifiers if needed.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.IdentQuotation.All">
            <summary>Instructs the SQL Builder to quote all identifiers.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.KeywordFormat">
            <summary>Defines various options for keyword formatting in the generated SQL query text.</summary>
            <remarks>Applied to <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.KeywordFormat"/> property.</remarks>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.KeywordFormat.FirstUpper">
            <summary>Instructs the component to generate keywords in First Upper Case.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.KeywordFormat.UpperCase">
            <summary>Instructs the component to generate keywords in UPPER CASE.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.KeywordFormat.LowerCase">
            <summary>Instructs the component to generate keywords in lower case.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat">
            <summary>Defines SQL text formatting options of a single SELECT statement.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.IndentGlobal">
            <summary>Defines indent of the whole single SELECT statement.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.IndentInPart"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.MainPartsFromNewLine">
            <summary>Instructs the component to start main parts of the query from new lines.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.NewLineAfterPartKeywords"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.IndentInPart"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.IndentInPart">
            <summary>Defines indent of all lines of the query except the main query part keyword lines.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.MainPartsFromNewLine"></seealso>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.NewLineAfterPartKeywords"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.NewLineAfterPartKeywords">
            <summary>Instructs to insert line break after each main query part keyword (SELECT, FROM, WHERE, etc.)</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.MainPartsFromNewLine"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.SelectListFormat">
            <summary>Determines SQL text formatting options of SELECT part (list of output expressions) of the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.FromClauseFormat">
            <summary>Determines SQL text formatting options of FROM part of the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.WhereFormat">
            <summary>Determines SQL text formatting options of WHERE part of the query.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderFromClauseFormat.JoinConditionFormat"/>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.GroupByFormat">
            <summary>Determines SQL text formatting options of GROUP BY part of the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.HavingFormat">
            <summary>Determines SQL text formatting options of HAVING part of the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderSelectFormat.OrderByFormat">
            <summary>Determines SQL text formatting options of ORDER BY part of the query.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderConditionFormat">
            <summary>Defines SQL text formatting options of WHERE and HAVING parts of the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderConditionFormat.NewLineAfter">
            <summary>Defines line breaking rules in condition.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderConditionFormat.IndentNestedConditions">
            <summary>Defines indent of nested conditions.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderFromClauseFormat">
            <summary>Defines SQL text formatting options of FROM part of the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderFromClauseFormat.NewLineAfterDatasource">
            <summary>Instructs to insert line break after each datasource.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderFromClauseFormat.NewLineAfterJoin">
            <summary>Instructs to insert line break after each JOIN keyword.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderFromClauseFormat.NewLineBeforeComma">
            <summary>Instructs to insert line break before each comma that separates items in the list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderFromClauseFormat.NewLineBeforeJoinExpression">
            <summary>Instructs to start join expressions from new lines.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderFromClauseFormat.JoinConditionFormat">
            <summary>Determines SQL text formatting options of joining conditions in the FROM part of query.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderItemListFormat">
            <summary>Defines SQL text formatting options of item lists in the query, i.e. SELECT, ORDER BY and GROUP BY parts of the query.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderItemListFormat.NewLineAfterItem">
            <summary>Instructs to insert line break after each item in the list.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLBuilderItemListFormat.NewLineBeforeComma">
            <summary>Instructs to insert line break before each comma that separates items in the list.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.AutoSyntaxProvider">
            <summary>This syntax provider will try to detect database server automatically and will act as specific syntax provider for the detected database server.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.AutoSyntaxProvider.DetectSyntaxProvider(ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLContext)">
            <summary>Runs the database server auto-detection routine.</summary>
            <param name="sqlContext">SQL context to specify database connection for SQL query execution.</param>
            <remarks>The detection routine sends a series of server-specific SQL queries that allows to uniquely define the underlying database server. This
            information is used to instantiate the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AutoSyntaxProvider.DetectedSyntaxProvider"/> property with the right syntax provider. In case of auto-detection failure, the ANSI SQL/92
            syntax (<see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL92SyntaxProvider"/>) will be used.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AutoSyntaxProvider.DetectedSyntaxProvider">
            <summary>Refers to an instance of the syntax provider object detected with the DetectSyntaxProvider method call.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesDB2Form.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesPostgreSQLForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesPostgreSQLForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesOracleForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesOracleForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesOracleForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MSSQLAzureSyntaxProvider">
            <summary>
            The Syntax Provider for the Microsoft SQL Server Compact Edition dialect.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MSSQLSyntaxProvider">
            <summary>Syntax Provider for Microsoft SQL Server.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MSSQLSyntaxProvider.ServerVersion">
            <summary> Gets or sets Microsoft SQL Server version. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MSSQLSyntaxProvider.IdentCaseSens">
            <summary> Defines the way database server treats quoted and unquoted identifiers. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MSSQLSyntaxProvider.DenyIntoClause">
            <summary> Instructs to deny the INTO clause parsing and generation. </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MSSQLCESyntaxProvider">
            <summary>Syntax provider for Microsoft SQL Server Compact Edition.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.InformixVersion">
            <summary> Informix Database Server versions enumeration. </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.InformixVersion.DS8">
            <summary> Informix Database Server 8 </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.InformixVersion.DS9">
            <summary> Informix Database Server 9 </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.InformixVersion.DS10">
            <summary> Informix Database Server 10 </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.InformixVersion.DS11">
            <summary> Informix Database Server 11 </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.InformixSyntaxProvider">
            <summary>Syntax provider for Informix database server.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.InformixSyntaxProvider.ServerVersion">
            <summary>Gets or sets Informix database server version.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.InformixSyntaxProvider.IdentCaseSens">
            <summary> Defines the way database server treats quoted and unquoted identifiers. </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.PostgreSQLSyntaxProvider">
            <summary>Syntax provider for PostgreSQL.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PostgreSQLSyntaxProvider.ComparisonOperators">
            <summary> Lists the user-defined binary (comparison) operators. See PostgreSQL help for details. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PostgreSQLSyntaxProvider.DenyIntoClause">
            <summary> Instructs to deny the INTO clause parsing and generation. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PostgreSQLSyntaxProvider.IdentCaseSens">
            <summary> Defines the way database server treats quoted and unquoted identifiers. </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesSybaseForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesFBForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.DB2NamingConventions">
            <summary>Determines possible database object naming conventions for DB2 databases.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.DB2NamingConventions.SQL">
            <summary>SQL naming convention: Dot (.) is used to separate parts of qualilfied identifiers.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.DB2NamingConventions.System">
            <summary>SQL naming convention: Slash (/) is used to separate parts of qualilfied identifiers.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.DB2SyntaxProvider">
            <summary>Syntax provider for IBM DB2 database.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DB2SyntaxProvider.NamingConvention">
            <summary>Gets or sets database objects naming convention.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.FirebirdVersion">
            <summary> Firebird server versions enumeration. </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.FirebirdVersion.Firebird1">
            <summary>Firebird versions 1.x (less than 1.5)</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.FirebirdVersion.Firebird1_5">
            <summary>Firebird versions 1.5.x</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.FirebirdVersion.Firebird2">
            <summary>Firebird versions 2.0.x</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.FirebirdVersion.Firebird2_5">
            <summary>Firebird versions 2.5.x</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.FirebirdSyntaxProvider">
            <summary>Syntax provider for Firebird databases.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.FirebirdSyntaxProvider.ServerVersion">
            <summary> Gets or sets Firebird database server version. </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.Localizer">
            <summary>Localizer is a static object that holds localization resources.</summary>
            <remarks>Use the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.Language">QueryBuilder.Language property</see> to change language of the component.</remarks>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.Localizer.Languages">
            <summary>Lists language codes of available localizations.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.Localizer.LocalizeForm(System.Windows.Forms.Form)">
            <exclude/>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.Localizer.LoadLanguageFromFile(System.String)">
            <summary>Loads language from file.</summary>
            <param name="languageFile">File to load language from</param>
            <returns>true if language is loaded successfully; false if not.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.Localizer.LoadLanguageFromStream(System.IO.Stream)">
            <summary>Loads language from stream</summary>
            <param name="languageStream">Stream to load language from</param>
            <returns>true if language is loaded successfully; false if not.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.Localizer.LoadLanguageFromString(System.String)">
            <summary>Loads language from string.</summary>
            <param name="xmlString">String to load language from</param>
            <returns>true if language is loaded successfully; false if not.</returns>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Localizer.Language">
            <summary>Specifies component's UI language by it's code.</summary>
            <remarks>
            	<para>The list of available languages can be taken from the <see cref="F:ActiveDatabaseSoftware.ActiveQueryBuilder.Localizer.Languages">Languages field</see>. The language list always contains "Auto" and "Default" strings.</para>
            	<para>If specified language code doesn't exist (eg. "es-MX"), the Localizer will try to fallback to the base language ("es"). If it doesn't exist too, the
            Localizer will use the "Default" language.</para>
            </remarks>
            <value>The "Auto" value means the language will be detected automatically according to CultureInfo specified for UI culture of the current thread
            (<see cref="P:System.Threading.Thread.CurrentUICulture">System.Threading.Thread.CurrentThread.CurrentUICulture</see>).<br/>
            The "Default" value means usage of default strings containing in embedded resources.</value>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.Localizer.LanguageChanged">
            <summary>Invoked when language is changed.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesMySQLForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MySQLSyntaxProvider">
            <summary>Syntax provider for MySQL.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MySQLSyntaxProvider.ServerVersionInt">
            <summary> Gets or sets MySQL server version as integer. </summary>
            <value> For example, for MySQL version 5.1.93, the value of this propery will be 50193. To get the major version you may divide it by 10000. </value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MySQLSyntaxProvider.ServerVersion">
            <summary> Gets or sets MySQL server version string. </summary>
            <value> The value of this property is string represenation of the ServerVersionInt property split with dots by two digits. 
            		I.e. for MySQL version 5.1.93, the value of this property will be "5.01.93". </value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MySQLSyntaxProvider.AnsiQuotes">
            <summary> Instructs the component to quote identifiers with double quotes instead of back quotes. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MySQLSyntaxProvider.TryToSelectLinksViaDriver">
            <summary> Instructs the component to try to retrieve foreign keys from the database via data 
            		  access component method calls in case of failing to retrieve them by querying system objects. </summary>
            <remarks>This property was made because some ODBC drivers were failing to retrieve this information and hanged up. 
            		 Note that ability to retrieve foreign keys by querying system objects was implemented only in MySQL 5.0.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MySQLSyntaxProvider.IdentCaseSens">
            <summary> Defines the way database server treats quoted and unquoted identifiers. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MySQLSyntaxProvider.DenyIntoClause">
            <summary> Instructs to deny the INTO clause parsing and generation. </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesVistaDBForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL2003SyntaxProvider">
            <summary>Syntax provider for ANSI SQL/2003 standard.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL2003SyntaxProvider.IdentCaseSens">
            <summary> Defines the way database server treats quoted and unquoted identifiers. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL2003SyntaxProvider.UseInformationSchema">
            <summary> Instructs the component to try to retrieve database schema information from the INFORMATION_SCHEMA system objects. </summary>
            <remarks>In case of failure, the component will try to retrieve this information using Metadata Provider methods to query the underlying data access components. </remarks>
            <value> true to use INFORMATION_SCHEMA, false to bypass querying INFORMATION_SCHEMA objects. </value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL2003SyntaxProvider.SupportDatabases">
            <summary>Gets or sets the sign of presence of database namespace support for the server.</summary>
            <remarks>Default value is true. This sign will be automatically switched off if no database will be found during the metadata loading process. Switching if off manually
            will cancel the query to load a list of databases to the Metadata Container.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL2003SyntaxProvider.SupportSchemas">
            <summary>Gets or sets the sign of presence of schema namespace support for the server.</summary>
            <remarks>Default value is true. This sign will be automatically switched off if no schema will be found during the metadata loading process. Switching if off
            manually will cancel the query to load a list of schemas to the Metadata Container.</remarks>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL89SyntaxProvider">
            <summary>Syntax provider for ANSI SQL/89 standard.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL89SyntaxProvider.IdentCaseSens">
            <summary> Defines the way database server treats quoted and unquoted identifiers. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL89SyntaxProvider.SupportDatabases">
            <summary>Gets or sets the sign of presence of database namespace support for the server.</summary>
            <remarks>Default value is true. This sign will be automatically switched off if no database will be found during the metadata loading process. Switching if off manually
            will cancel the query to load a list of databases to the Metadata Container.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL89SyntaxProvider.SupportSchemas">
            <summary>Gets or sets the sign of presence of schema namespace support for the server.</summary>
            <remarks>Default value is true. This sign will be automatically switched off if no schema will be found during the metadata loading process. Switching if off
            manually will cancel the query to load a list of schemas to the Metadata Container.</remarks>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLiteSyntaxProvider">
            <summary>Syntax provider for SQLite.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLiteSyntaxProvider.IdentCaseSens">
            <summary> Defines the way database server treats quoted and unquoted identifiers. </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SybaseServerVersion">
            <summary> Sybase Server types enumeration. </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SybaseServerVersion.SybaseASA">
            <summary> Sybase Adaptive Server Anywhere </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SybaseServerVersion.SybaseASE">
            <summary> Sybase Adaptive Server Enterprise </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SybaseSyntaxProvider">
            <summary>Syntax provider for Sybase ASA/ASE.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SybaseSyntaxProvider.IdentCaseSens">
            <summary> Defines the way database server treats quoted and unquoted identifiers. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SybaseSyntaxProvider.ServerVersion">
            <summary> Gets or sets the Sybase server type (ASA or ASE). </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxServerType">
            <summary> Enumerates possible database server types to be used by the Generic Syntax Provider. </summary>
            <remarks> Used to determine correct quotation of identifiers and their case sensitivity. </remarks>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxIdentifierQuotes">
            <summary> Enumerates possible identifier quotation marks to be used by the Generic Syntax Provider. </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxProvider">
            <summary>This provider can be used with any database server. 
            		 It implements most of the ANSI SQL/92 syntax standard definitions, 
            		 but lacks most of server-specific SQL syntax extensions.</summary>
            <remarks>
            	<para>The generic syntax provider is also able to detect database server automatically, but this information is used only to determine correct quotation of
            identifiers, their case sensitivity and some other critical requirements of specific database server. So, it basically suits most of the database servers
            that claim to support ANSI-compatible SQL syntax, but it lacks many SQL syntax features of specific database servers.</para>
            	<para>Usage of specific dabaase server syntax providers for supported database servers is recommended. If your database server is not known beforehand, you
            can use the <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.AutoSyntaxProvider"/> which will try to detect database server and will actually use specific SQL syntax provider for this server.</para>
            </remarks>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxProvider._customDescriptor">
            <summary> Defines the set of settings to use when the Custom server type selected. </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxProvider.GetQuoteBegin">
            <summary>Gets the opening identifier quotation symbol.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxProvider.GetQuoteEnd">
            <summary>Gets closing identified quotation symbol.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxProvider.DetectServer(ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLContext)">
            <summary>Detects the database server to which the component is currently connected.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxProvider.CustomServerDescriptor">
            <summary>Gets the database server descriptor to customize it's settings for unsupported servers.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxProvider.IdentCaseSens">
            <summary> Defines the way database server treats quoted and unquoted identifiers. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxProvider.BuiltinFunctionNames">
            <summary> Gets or sets a list of names of the builtin functions. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxProvider.PreferredServer">
            <summary> Determines the server type for the database server detection routine to start from; uniquely determines the server type to be used if auto-detection is turned off. </summary>
            <remarks>Setting this property to prospective server type will allow to reduce the number of unsuccessful attempts to detect database server.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxProvider.AutoDetectServer">
            <summary>Allows for database server autodetection.</summary>
            <remarks>
            	<para>The detection routine sends a series of server-specific SQL queries that allows to uniquely define 
                	  the underlying database server. 
            		  This information is used to determine correct quotation of identifiers and their case sensitivity. 
            		  It is also used to retrieve database schema from supported database servers more precisely.</para>
            	<para>Due to it's nature, the detection routine may generate a series of SQL query execution errors and 
                	  it works only if connection to a database server is established.</para>
            </remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxProvider.UsedServer">
            <summary> Returns the detected database server type; returns the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxProvider.PreferredServer"/> if auto-detection is turned off. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.GenericSyntaxProvider.DetectServerVersion">
            <summary>Allows for database server version autodetection.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor">
            <summary>Object that determines general features of a database server and it's SQL syntax.</summary>
            <remarks>It is used in Generic syntax provider to adapt SQL generation rules to specific database server requirements.</remarks>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.LoadServers">
            <summary>Delegate function to load list of servers.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.LoadDatabases">
            <summary>Delegate function to load list of databases.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.LoadSchemas">
            <summary>Delegate function to load list of schemas.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.LoadObjects">
            <summary>Delegate function to load list of database objects.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.LoadFields">
            <summary>Delegate function to load list of fields for an object.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.LoadForeignKeys">
            <summary>Delegate function to load list of foreign keys for an object.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.IdentCaseSensitivity">
            <summary>Determines identifiers case sensitivity.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.ForceBinaryAnsiJoins">
            <summary>Determines whether to use only binary joins in the FROM clause.</summary>
            <remarks>Some database servers deny joining more than two tables with the JOIN operator. Joining more tables is allowed by using multilevel
            nested binary joins, i.e. each prevoius join should be enclosed in parentheses to join the next table. (for example, MS Access)</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.SupportCrossJoin">
            <summary>Indicates if a server supports CROSS JOIN clause.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.UniversalExpressions">
            <summary>Determines whether it is allowed to use predicates as ordinary SQL expressions.</summary>
            <remarks>Most of the database servers let use predicates only in particluar places, such as WHERE, HAVING clauses and in functions. But some of them allow for
            using them in SELECT or GROUP BY clauses as usual SQL expressions of boolean type. (for example, PostgreSQL)</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.SupportDatabases">
            <summary>Indicates if a server supports database namespace.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.SupportSchemas">
            <summary>Indicates if a server supports schema namespace.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.IdQuotes">
            <summary>Determines identifier quotation symbols</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.QueryToLoadFieldsForObject">
            <summary>Gets or sets the template to load field list for objects.</summary>
            <remarks>It must be a query that selects all columns from an object with minimal or no data in return.</remarks>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.ServerDescriptor.LoadMetadataDelegate">
            <summary>Delegate to load metdata items.</summary>
            <param name="metadataList">The list to load metadata into it.</param>
            <param name="loadingOptions">Options to which the loaded data must comply with.</param>
            <returns>Must return true in case of success; false otherwise.</returns>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.TeradataSyntaxProvider">
            <summary>The Syntax Provider for the Teradata SQL dialect.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.TeradataSyntaxProvider.IdentCaseSens">
            <summary>Defines the way database server treats quoted and unquoted identifiers.</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.VistaDBSyntaxProvider">
            <summary>Syntax provider for VistaDB embedded database engine.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.VistaDBSyntaxProvider.IdentCaseSens">
            <summary> Defines the way database server treats quoted and unquoted identifiers. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.VistaDBSyntaxProvider.DenyIntoClause">
            <summary> Instructs to deny the INTO clause parsing and generation. </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesAccessForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MSAccessServerVersion">
            <summary> MS Jet versions enumeration </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MSAccessServerVersion.MSJET3">
            <summary>MS Jet 3 (for MS Access 97)</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MSAccessServerVersion.MSJET4">
            <summary>MS Jet 4 (for MS Access 2000 and newer)</summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MSAccessSyntaxProvider">
            <summary>Syntax provider for MS Jet-compatible databases: MS Access, MS Excel, MS Project as well as DBF, CSV and text files.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MSAccessSyntaxProvider.ServerVersion">
            <summary> Gets or sets MS Jet Engine version. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MSAccessSyntaxProvider.DenyIntoClause">
            <summary> Instructs to deny the INTO clause parsing and generation. </summary>
            <value>false to allow INTO clause; true to deny it.</value>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.AddObjectForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.AddObjectForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.OracleServerVersion">
            <summary> Oracle Database server versions enumeration. </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.OracleServerVersion.Oracle7">
            <summary> Oracle 7 </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.OracleServerVersion.Oracle8">
            <summary> Oracle 8, 8i Database </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.OracleServerVersion.Oracle9">
            <summary> Oracle 9i Database </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.OracleServerVersion.Oracle10">
            <summary> Oracle Database 10g </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.OracleServerVersion.Oracle11">
            <summary> Oracle Database 11g </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.OracleSyntaxProvider">
            <summary>Syntax provider for Oracle Database.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.OracleSyntaxProvider.ServerVersion">
            <summary> Gets or sets Oracle Database server version. </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.GeneralPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.GeneralPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SqlBuilderPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SqlBuilderPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataTreePage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataTreePage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MiscellaneousPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MiscellaneousPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.OfflineModePage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.OfflineModePage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesVisibilityPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.PanesVisibilityPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreePage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreePage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SqlSyntaxPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SqlSyntaxPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.DataSourcePropertiesForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.LinkPropertiesForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.LinkPropertiesForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MSSQLServerVersion">
            <summary> Microsoft SQL Server versions enumeration. </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MSSQLServerVersion.Auto">
            <summary> Instructs to detect MS SQL Server version automatically </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MSSQLServerVersion.MSSQL7">
            <summary> MS SQL Server 7 </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MSSQLServerVersion.MSSQL2000">
            <summary> MS SQL Server 2000 </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MSSQLServerVersion.MSSQL2005">
            <summary> MS SQL Server 2005 </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MSSQLServerVersion.MSSQL2008">
            <summary> MS SQL Server 2008 </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MSSQLServerVersion.MSSQL2012">
            <summary> MS SQL Server 2012 </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MSSQLServerVersion.MSSQL2014">
            <summary> MS SQL Server 2014 </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.ProcParamsForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainerLoadForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainerLoadForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilderPropertiesForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilderPropertiesForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryPropertiesMSSQLForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL92SyntaxProvider">
            <summary>Syntax provider for ANSI SQL/92 standard.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL92SyntaxProvider.IdentCaseSens">
            <summary> Defines the way database server treats quoted and unquoted identifiers. </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL92SyntaxProvider.UseInformationSchema">
            <summary> Instructs the component to try to retrieve database schema information from the INFORMATION_SCHEMA system objects. </summary>
            <remarks>In case of failure, the component will try to retrieve this information using Metadata Provider methods to query the underlying data access components. </remarks>
            <value> true to use INFORMATION_SCHEMA, false to bypass querying INFORMATION_SCHEMA objects. </value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL92SyntaxProvider.SupportDatabases">
            <summary>Gets or sets the sign of presence of database namespace support for the server.</summary>
            <remarks>Default value is true. This sign will be automatically switched off if no database will be found during the metadata loading process. Switching if off manually
            will cancel the query to load a list of databases to the Metadata Container.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQL92SyntaxProvider.SupportSchemas">
            <summary>Gets or sets the sign of presence of schema namespace support for the server.</summary>
            <remarks>Default value is true. This sign will be automatically switched off if no schema will be found during the metadata loading process. Switching if off
            manually will cancel the query to load a list of schemas to the Metadata Container.</remarks>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.PlainTextSQLBuilder">
            <summary>Intended for SQL query text generation in Plain Text format.</summary>
            <remarks>Requires to get connected to the <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder">QueryBuilder</see> object via the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.QueryBuilder">QueryBuilder
            Property</see>. Read the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder.SQL">SQL Property</see> to get formatted SQL query text.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PlainTextSQLBuilder.DynamicIndents">
            <summary>Allows to indent the next item in the list to the same position as the first item.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PlainTextSQLBuilder.DynamicRightMargin">
            <summary>Instructs the component not to take into account leading spaces when counting line lenght to wrap.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.AboutForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.AboutForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.AboutForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.Helpers">
            <summary>
            Class with common constants, objects and helping functions.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.Helpers.FindFieldIndexInDataReader(System.Data.IDataReader,System.String)">
            <summary>
            Find the field in IDataReader by name. Does not throws if not found, just returns -1.
            </summary>
            <returns>The field index if found, -1 otherwise.</returns>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.add">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.arrow_down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.arrow_left">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.arrow_right">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.arrow_up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.bg_white">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.blue_document_export">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.blue_document_import">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.bullet">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.button_down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.button_up">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.cancel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.cardinalitymany">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.cardinalityone">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.cart">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.center_panel">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.cross">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.database">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.database_go">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.delete">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.disk">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.disk_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.dots">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.down">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.empty">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.except">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.exceptall">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.exclamation">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.field">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.field_bullet">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.field_virtual">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.fields">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.filter">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.filter16x16">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.floppy">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.folder">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.folder_plus">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.fromdb">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.fromdbschema">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.gear">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.homepage">
            <summary>
              Looks up a localized string similar to www.activequerybuilder.com.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.intersect">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.intersectall">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.item">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.key_field">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.left_bracket">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.link">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.load">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.load_all">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.load_more">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.logo">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.logo1">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.logo2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.logo3">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.magnifier">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.mo_virtual">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.open">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.package">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.plus2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.primary_key">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.procedure">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.Q">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.red_cross">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.relation">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.relations">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.right_bracket">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.schema">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.script_code">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.script_code_red">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.server_database">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.shading">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.synonym">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.tab_cte">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.tab_derived">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.tab_main">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.tab_subquery">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.table">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.table_row_insert">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.table2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.trash_bin">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.trial_label_text1">
             <summary>
               Looks up a localized string similar to This is a trial version of Active Query Builder. To make this notification go away you should purchase a software license. After the purchase you will get a lot of benefits including premium technical support, free upgrades and right to distribute your application without any royalties.
            
            To place a secure order for purchasing our component, press the &quot;Buy Active Query Builder Now&quot; button in this dialog or visit our purchase web-page. After purchase you will receive a confirmation e-mail with the necessary [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.trial_label_text2">
            <summary>
              Looks up a localized string similar to Your trial verison is getting too old. If you wish to continue evaluation of Active Query Builder, we are strongly recommending you to upgrade to the latest version by placing a request for a new trial version at the download web-page..
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.ui_check_boxes_series">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.union">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.unionall">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.unknown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.updown">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.url_download">
            <summary>
              Looks up a localized string similar to http://www.activequerybuilder.com/download.html?from=reminder&amp;edition=net.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.url_featurematrix">
            <summary>
              Looks up a localized string similar to http:/www.activequerybuilder.com/featurematrix.html.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.url_home">
            <summary>
              Looks up a localized string similar to http://www.activequerybuilder.com/index.html?from=about&amp;edition=net.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.url_home2">
            <summary>
              Looks up a localized string similar to http://www.activequerybuilder.com/index.html?from=reminder&amp;edition=net.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.url_home3">
            <summary>
              Looks up a localized string similar to http://www.activequerybuilder.com/index.html?from=user&amp;edition=net&amp;app=.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.url_purchase">
            <summary>
              Looks up a localized string similar to http://www.activequerybuilder.com/purchase.html?from=about&amp;edition=net.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.url_purchase2">
            <summary>
              Looks up a localized string similar to http://www.activequerybuilder.com/purchase.html?from=reminder&amp;edition=net.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.url_support">
            <summary>
              Looks up a localized string similar to http://www.activequerybuilder.com/support.html?from=about&amp;edition=net.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.view">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Properties.Resources.wand">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder">
            <summary>QueryBuilder is the component to build SQL queries visually, to parse, analyze and modify SQL queries programmatically.</summary>
            <remarks>
            	<para>QueryBuilder requires a Syntax Provider to be assigned to the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SyntaxProvider">QueryBuilder.SyntaxProvider property</see>. Metadata Provider assigned
            to the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataProvider">QueryBuilder.MetadataProvider property</see> is necessary to load database schema information from database. Alternate way to
            load database schema is to use pre-generated XML files. See the <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ImportFromXML">MetadataContainer.ImportFromXML method</see> for details. After
            that the <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.InitializeDatabaseSchemaTree">InitializeDatabaseSchemaTree method</see> should be called.</para>
            	<para>To get the result SQL query string, use the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SQL">QueryBuilder.SQL property</see>. Use the <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.PlainTextSQLBuilder">PlainTextSQLBuilder component</see>
            to get the formatted SQL query text.</para>
            </remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.#ctor">
            <summary>Initializes a new instance of the QueryBuilder component in visual mode.</summary>
            <overloads>Initializes a new instance of the QueryBuilder component.</overloads>
            <remarks>The default QueryBuilder initialization mode is Visual for WinForms configuration and Non-visual for ASP.NET configuration.<br/>
            In the WinForms configuration the QueryBuilder component can be used for any purposes in Visual mode (including visual building of queries) and it must be
            placed on a form.<br/>
            In the ASP.NET configuration the QueryBuilder component is responsible for SQL parsing and generation only, thus it can not be initialized in visual mode.</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.#ctor(System.Boolean)">
            <summary>Initializes a new instance of the QueryBuilder component in visual or non-visual mode. (for WinForms configuration only)</summary>
            <param name="nonVisualMode">true to initialize in non-visual mode, false to initialize in visual mode.</param>
            <remarks>In the non-visual mode the QueryBuilder component does not create any WinForms controls and it can not be used for visual query building purposes. Use this
            mode to parse, analyze, modify SQL queries programmatically or to create them from scratch.</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.InitializeDatabaseSchemaTree">
            <summary>Initializes the database schema tree.</summary>
            <remarks>
            	<para>This method should be called after the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SyntaxProvider"/> and <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataProvider"/> properties are set to the right instances of appropriate objects.</para>
            	<para>It initializes the current Metadata Structure, i.e. unbinds it's items if they were bound and binds the root structure node. After that is expands the
            Database Schema Tree according to the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.DatabaseSchemaTreeOptions.DefaultExpandLevel">DatabaseSchemaTreeOptions.DefaultExpandLevel
            property</see>.</para>
            	<para>To reload metadata and refresh the database schema tree call this method after calling the
            <see cref="O:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataList.Clear">MetadataContainer.Items.Clear method</see>.</para>
            </remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ShowAboutDialog">
            <summary>Shows the About dialog window.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.Clear">
            <summary>Clears the query.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ShowAddObjectForm">
            <summary>Shows the Add Object Form.</summary>
            <remarks>Add Object Form is intended to add database objects to the query. The user can open this form by right-clicking on the Design Pane and selecting
            the appropriate item from context menu.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.AddObjectFormOptions"></seealso>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ShowAddObjectForm(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure)">
            <summary>Shows the Add Object Form.</summary>
            <remarks>Add Object Form is intended to add database objects to the query. The user can open this form by right-clicking on the Design Pane and selecting
            the appropriate item from context menu.</remarks>
            <param name="metadataStructure">Custom metadata structure to display in the dialog. If null, the default structure from QueryBuilder is shown.</param>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.AddObjectFormOptions"></seealso>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.BeginUpdate">
            <summary>Prevents the component from SQL generation until the EndUpdate method is called.</summary>
            <seealso cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.EndUpdate"></seealso>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.EndUpdate">
            <summary>Resumes SQL generation after it was suspended by the BeginUpdate method.</summary>
            <seealso cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.BeginUpdate"></seealso>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.EditMetadataContainer(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions)">
            <overloads>Shows the Metadata Editor form to edit content of the Metadata Container.</overloads>
            <summary>Shows the Metadata Editor form with default editor options.</summary>
            <param name="metadataContainer">Metadata Container to be edited.</param>
            <param name="loadingOptions">Metadata filtration rules initially assigned at approriate step of the Metadata Loading Wizard.</param>
            <param name="metadataStructure">Metadata Structure to be edited.</param>
            <returns>true if OK button is pressed, otherwise false.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.EditMetadataContainer(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataEditorOptions)">
            <summary>Shows the Metadata Editor form with the specified editor options.</summary>
            <param name="metadataContainer">Metadata Container to be edited.</param>
            <param name="loadingOptions">Metadata filtration rules initially assigned at approriate step of the Metadata Loading Wizard.</param>
            <param name="metadataStructure">Metadata Structure to be edited.</param>
            <param name="uiOptions">User interface options of the editor form.</param>
            <returns>true if OK button is pressed, otherwise false.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.EditMetadataContainerStandalone(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure)">
            <overloads>Shows the Metadata Editor form with the content of given MetadataContainer object in the Standalone mode, i.e. as a standalone application.</overloads>
            <summary>Shows the Metadata Editor form with default editor options.</summary>
            <param name="metadataContainer">Metadata Container to be edited.</param>
            <param name="metadataStructure">Metadata Structure to be edited.</param>
            <remarks>In the Standalone mode the Metadata Editor window has an icon and minimize button and it is visible at the taskbar.</remarks>
            <seealso cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.EditMetadataContainer"></seealso>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.EditMetadataContainerStandalone(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructure,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataEditorOptions)">
            <summary>Shows the Metadata Editor form with the specified editor options.</summary>
            <param name="metadataContainer">Metadata Container to be edited.</param>
            <param name="metadataStructure">Metadata Structure to be edited.</param>
            <param name="uiOptions">User interface options.</param>
            <remarks>In the Standalone mode the Metadata Editor window has an icon and minimize button and it is visible at the taskbar.</remarks>
            <seealso cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.EditMetadataContainer"></seealso>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ShowMetadataContainerLoadWizard(ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer,ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions)">
            <summary>Displays the Metadata Container load wizard.</summary>
            <remarks>
            	<para>Metadata Container load wizard allows the end-user to establish connection to a database and to fetch metadata from it.</para>
            	<para>This wizard was intended to be called from the Metadata Container Editor that is called by the <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.EditMetadataContainer">EditMetadataContainer method</see>.</para>
            </remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ShowQueryBuilderPropertiesForm(System.String,ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilderProperties,ActiveDatabaseSoftware.ActiveQueryBuilder.BaseSQLBuilder)">
            <summary>Displays the dialog that allows to set various properties of the Query Builder and the SQL Builder components visually.</summary>
            <param name="title">Dialog title.</param>
            <param name="flags">Flags to display dialog tabs: Non-visual, visual properties of the QueryBuilder and properties of the SQL builder object specified by the builder parameter.</param>
            <param name="builder">SQL Builder object to change it's properties.</param>
            <remarks>The dialog groups properties into three tabs. Each tab can be hidden by switching the appropriate flag off.</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.RefreshDatasourcesMetadata">
            <summary>Refreshes the list of fields for datasources of the current query.</summary>
            <remarks>Useful when metadata is loaded in another thread to update the loaded query after the metadata loading process is finished.</remarks>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.IsSearching">
            <summary>Indicates the search for database objects is in progress.</summary>
            <returns>True if the search is in progress; false otherwise.</returns>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.StopSearch">
            <summary>Stops searching for database objects.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ClearSearchResults">
            <summary>Clears search results in the Database Schema Tree and restores the original metadata structure.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.GetSubQueryList">
            <summary>Returns list of all sub-queries in the query.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.GetUnionSubQueryList">
            <summary>Returns list of all union sub-queries in the query.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.PaintDesignPaneToBitmap">
            <summary>Gets bitmap of the Design Pane.</summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ClearSearchBox">
            <summary>Clears the text in Database Schema Tree search box.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.Destroying">
            <summary>Occurs before the component is destroyed.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SqlError">
            <summary>Invoked on SQL text parsing error.</summary>
            <remarks>
            	<para>The sql parameter is the SQL query text that failed to parse. The error parameter is the error message string. The errorToken parameter is the erroneous
            token string. The errorTokenPos parameter addresses the erroneous token in the SQL query text.</para>
            	<para><code lang="CS">
            public struct Pos
            {
                public int pos;  // token position in the source text (starting at 0)
                public int col;  // token column (starting at 0)
                public int line; // token line (starting at 1)
            }</code></para>
            	<para>You can control the behavior of the component on parsing unknown types of SQL statements or on parsing queries with unknown objects using the
            <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.BehaviorOptions"/> properties: <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.AllowSleepMode">AllowSleepMode</see>,
            <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.ParsingErrorOnUnknownObjects">ParsingErrorOnUnknownObjects</see>.<br/></para>
            </remarks>
            <example>
            	<code title="Example" description="" lang="CS">
            private void queryBuilder1_SqlError(object sender, string sql,
                string error, string errorToken, Pos errorTokenPos)
            {
                MessageBox.Show(string.Format(
                    "Unexpected token \"{0}\" at line {1}, column {2}",
                    errorToken, errorTokenPos.line, errorTokenPos.col));
            }</code>
            </example>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DataSourceAdding">
            <summary>Invoked when DataSource is about to be added by the user.</summary>
            <remarks>
            	<para>The pos parameter indicates position within the Design Area for the new DataSource.</para>
            	<para>The fromObject parameter defines object being added to the query. It can be one of the following types:<br/>
            - SQLFromFunction in case of adding stored procedure or function. It has Name and Params properties to indentify itself.<br/>
            - SQLFromObject in case of adding table, view, synonym or CTE to the query. It has the Name.QualifiedName property to retrieve the name of database object.
            It's CTEObject property refers to the CTE sub-query object in case of adding common table expression to the query.<br/>
            - SQLFromQuery in case of adding a derived table to the query.</para>
            	<para>Set the abort parameter to true to deny adding the DataSource to the query.</para>
            </remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DataSourceAdded"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DataSourceAdded">
            <summary>Invoked when DataSource is added by the user.</summary>
            <remarks>
            	<para>The addedObject parameter refers to the newly added DataSource object.</para>
            	<para>You can use this event to add fields to the query, to link this DataSource with the others, etc.</para>
            </remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DataSourceAdding"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DataSourceDeleting">
            <summary>Invoked when DataSource is about to be deleted by the user.</summary>
            <remarks>
            	<para>The datasource parameter refers to the DataSource object being deleted from the query.</para>
            	<para>Set the abort parameter to true to deny deleting the DataSource.</para>
            </remarks>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ValidateContextMenu">
            <summary>Is called before any of the component's context menus is shown.</summary>
            <remarks>
            	<para>Allows to customize component's context menus.</para>
            	<para>The menu parameter refers to the ICustomContextMenu object to be shown. Clear it's items to disable a menu.</para>
            	<para>The controlOwner parameter refers to the query object for which the context menu is called. The control parameter refers to the control representing this
            query object. The following combinations are possible:<br/>
            - controlOwner is Link; control is LinkControl.<br/>
            - controlOwner is DataSourceObject or DataSourceQuery; control is DataSourceControl.<br/>
            - controlOwner is QueryColumnListItem; control is QueryColumnListControl.<br/>
            - controlOwner is UnionSubQuery; control is DesignPane: design pane context menu.<br/>
            - controlOwner is UnionSubQuery; control is UnionButton: context menu of the union button ("Q" button on the navigation bar).<br/>
            - controlOwner is UnionSubQuery; control is UnionOperator: context menu of the union operator (union type symbol on the navigation bar).<br/>
            - controlOwner is UnionGroup; control is LeftBracket: context menu of the left bracket ("(" symbol on the navigation bar).<br/>
            - controlOwner is UnionGroup; control is RightBracket: context menu of the right bracket (")" symbol on the navigation bar).</para>
            </remarks>
            <example>
            	<code title="Example" description="" lang="CS">
            private void queryBuilder1_ValidateContextMenu(Control control, ControlOwner controlOwner, ICustomContextMenu menu)
            {
                // Insert custom menu item to the top of any context menu
                menu.InsertItem(0, "Custom Item 1", CustomItem1EventHandler);
                menu.InsertSeparator(1); // separator
             
                if (controlOwner is Link) // Link context menu
                {
                    // Add another item in the Link's menu
                    menu.AddSeparator(); // separator
                    menu.AddItem("Custom Item 2", CustomItem2EventHandler);
             
                    // control is LinkControl
                }
                else if (controlOwner is DataSourceObject) // Datasource context menu
                {
                    // control is DataSourceControl
                }
                else if (controlOwner is UnionSubQuery)
                {
                    if (control is DesignPane) // design pane context menu
                    {
             
                    }
                    else if (control is UnionButton) // context menu of the union button ("Q" button on the navigation bar)
                    {
             
                    }
                    else if (control is UnionOperator) // context menu of the union operator (union type symbol on the navigation bar)
                    {
                        // Delete all items from this menu.
                        // The menu will not be shown.
                        menu.ClearItems();
                    }
                }
                else if (controlOwner is UnionGroup)
                {
                    if (control is LeftBracket) // context menu of the left bracket ("(" symbol on the navigation bar)
                    {
             
                    }
                    else if (control is RightBracket) // context menu of the right bracket (")" symbol on the navigation bar)
                    {
             
                    }
                }
                else if (controlOwner is QueryColumnListItem) // context menu of the row of the query column list (grid)
                {
                    // control is QueryColumnListControl
                }
            }</code>
            </example>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ActiveSubQueryChanged">
            <summary>Invoked when currently visible sub-query is changed.</summary>
            <example>
            Read the QueryBuilder.ActiveSubQuery property to get reference to the currently active sub-query.
            </example>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ActiveUnionSubQueryChanged">
            <summary>Invoked when currently visible union sub-query is changed.</summary>
            <example>
            Read the QueryBuilder.ActiveSubQuery.ActiveUnionSubQuery property to get reference to the currently active union sub-query.
            </example>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SleepModeChanged">
            <summary>Invoked when the component is turns the "Sleep" mode on and off.</summary>
            <remarks>
            	<para>The "Sleep mode" allows to suppress parsing errors on unsupported SQL statements (CREATE TABLE, INSERT, UPDATE, DELETE, etc.).</para>
            	<para>Examine the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SleepMode">SleepMode Property</see> to learn if the component is currently in the sleep mode or not.</para>
            	<para>Use this event to show/hide the visual query builder when the user starts to write an unsupported statement by hand in the text editor.</para>
            </remarks>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.QueryAwake">
            <summary>Occurs when the component is currently in the "Sleep" mode and the user starts to build a query visually.</summary>
            <remarks>
            	<para>This situation may happen when visual query building is combined with direct SQL text editing. Suppose that the user wrote an unsupported SQL statement in
            the text editor by hand, so the visual query builder fall into the "Sleep mode", and the user started to build a query visually after that. Obviously the
            visual query builder have to "awake" in response to user actions and start to generate SQL text, so the hand-written query will be lost. This event allows to
            prevent occasional awakening of the component and lets the user to save the hand-written query prior to building a new one.</para>
            	<para>Set the abort parameter to true to deny awakening of the component.</para>
            </remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.AllowSleepMode"></seealso>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SleepModeChanged"></seealso>
            <example>
            	<code title="Example" description="" lang="CS">
            private void queryBuilder_QueryAwake(object sender, ref bool abort)
            {
                if (MessageBox.Show("You are about to build a new SELECT statement. " +
                    "Current query in the text editor will be replaced. Are you sure?",
                    "Active Query Builder .NET Demo", MessageBoxButtons.YesNo) == DialogResult.No)
                {
                    abort = true;
                }
            }</code>
            </example>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.CustomExpressionBuilder">
            <summary>Is called to edit SQL expression of the Expression or Criteria column cell of the Query Columns Grid when the user clicks the ellipsis
            button.</summary>
            <remarks>
            	<para>A dialog is expected to be shown in this event handler to edit the expression string passed in the expression parameter. The queryColumnListItem parameter
            refers to the item of QueryColumnsList object being edited.</para>
            	<para>The conditionIndex parameter equals to -1 if called to edit the Expression column value (criteriaItem.ExpressionString) and is greater than -1 to refer to
            the Criteria column being edited (queryColumnListItem.ConditionStrings[conditionIndex])</para>
            	<para>The ellipsis button is shown only when the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryColumnListOptions.UseCustomExpressionBuilder">UseCustomExpressionBuilder property</see> is set to
            true.</para>
            </remarks>
            <example>
            	<code title="Example" description="" lang="CS">
            private void queryBuilder1_CustomExpressionBuilder(QueryBuilder queryBuilder, QueryColumnListItem queryColumnListItem, int conditionIndex, string expression)
            {
                using (CustomExpressionEditor f = new CustomExpressionEditor())
                {
                    f.tbSearchText.Text = expression;
             
                    if (f.ShowDialog() == DialogResult.OK)
                    {
                        // Update the query column list with new expression text.
             
                        if (conditionIndex &gt; -1) // it's one of condition columns
                        {
                            queryColumnListItem.ConditionStrings[conditionIndex] = f.tbSearchText.Text;
                        }
                        else // it's the Expression column
                        {
                            queryColumnListItem.ExpressionString = f.tbSearchText.Text;
                        }
                    }
                }
            }</code>
            </example>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.CustomizeDatasourceFieldList">
            <summary>Is called to customize the field list of a DataSource at the Design Area.</summary>
            <remarks>
            	<para>The field list to be customized is passed through the fieldList parameter.</para>
            	<para>The datasource parameter refers to the DataSource object being added to the Design Area.</para>
            </remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.CustomizeDatasourceCaption"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.FieldListDrawItem">
            <summary>Called to draw an item of the DataSource Field List.</summary>
            <remarks>
            	<para>You can use this event to perform the tasks needed to draw items in the DataSource Field List.</para>
            	<para>It contains all the information that is needed for the user to paint the specified item, including the MetadataField, the Rectangle, and the Graphics on
            which the drawing should be done. The state parameter specifies the state of an item that is being drawn.</para>
            	<para>Set the handled parameter to true to indicate that the event was handled.</para>
            </remarks>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.FocusedDesignPaneControlChanged">
            <summary>Occurs when a focused object at the Design Pane is changed.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LinkDeleting">
            <summary>Invoked when the link between datasources is about to be deleted by the user.</summary>
            <remarks>
            	<para>The link parameter refers to the Link being deleted from the query.</para>
            	<para>Set the abort parameter to true to deny deleting the Link.</para>
            </remarks>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LinkCreated">
            <summary>Invoked when the link between datasources is created by the user.</summary>
            <remarks>The link parameter refers to the newly created Link object.</remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LinkCreating"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LinkDragOver">
            <summary>Invoked when the user drags a DataSource Field over the other DataSource Field to create a link between these fields.</summary>
            <remarks>
            	<para>The fromField and fromDatasource parameters refer to the datasource field being dragged. The toField and toDatasource parameters refer to the target
            datasource field. The correspondingMetadataForeignKey parameter is defined when corresponding MetadataForeignKey between these fields exists in the Metadata Container.</para>
            	<para>Dropping may not be allowed by setting the abort parameter to true.</para>
            </remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.BeforeDatasourceFieldDrag"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LinkChanging">
            <summary>Invoked when the Link properties are about to be changed by the user.</summary>
            <remarks>
            	<para>Set the abort parameter to true to deny changing properties of the Link.</para>
            </remarks>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LinkChanged">
            <summary>Invoked when the Link properties are changed by the user.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LinkCreating">
            <summary>Invoked when the link between two datasources is about to be created by the user.</summary>
            <remarks>
            	<para>The fromField and the fromDatasource parameters refer to the the first DataSource and it's Field. The toField and the toDatasource parameters refer to the
            second DataSource and it's Field. The correspondingMetadataForeignKey parameter is defined when corresponding MetadataForeignKey between these fields exists in the
            Metadata Container.</para>
            	<para>Creation of the link may be aborted by setting the abort parameter to true.</para>
            </remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LinkCreated"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.BeforeDatasourceFieldDrag">
            <summary>Invoked when the user starts to drag a DataSource Field at the Design Area.</summary>
            <remarks>
            	<para>The field and the datasource parameters refer to the DataSource Field being dragged.</para>
            	<para>Dragging may be aborted by setting the the abort parameter to true.</para>
            </remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LinkDragOver"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.GridCellValueChanging">
            <summary>Invoked when one of the Query Columns Grid Control cells is about to be changed by the user.</summary>
            <remarks>
            	<para>Occurs when the user has finished editing, but result is not applied yet to the cell.</para>
            	<para>The queryColumnList and queryColumnListItem parameters refer to the Query Column List object and it's Item. The column and row parameters address a cell in
            the Query Columns Grid. The oldValue and newValue parameters allows you to review the cell value before and after editing.</para>
            	<para>Set the abort parameter to true to deny editing of the cell.</para>
            </remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.GridCellValueChanged"></seealso>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DatasourceFieldAdding"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.GridCellValueChanged">
            <summary>Invoked when one of the Query Columns Grid Control cells is changed by the user.</summary>
            <remarks>
            	<para>Occurs when the user has finished editing and result is applied to the cell.</para>
            	<para>The queryColumnList and queryColumnListItem parameters refer to the Query Column List object and it's Item. The column and row parameters address a cell in
            the Query Columns Grid. The oldValue and newValue parameters allows you to review the cell value before and after editing.</para>
            </remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.GridCellValueChanging"></seealso>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DatasourceFieldAdded"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.CustomizeDatasourceCaption">
            <summary>Is called to customize the caption of a DataSource at the Design Area.</summary>
            <remarks>The datasource parameter refers to the DataSource object being added to the Design Area.</remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.CustomizeDatasourceFieldList"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.BeforePropertiesDialog">
            <summary>Invoked before any of the properties dialogs (Sub-query, DataSource, Link properties) is shown.</summary>
            <remarks>
            	<para>The controlOwner parameter can be one of the following:<br/>
            - UnionSubQuery in case of showing the Query Properties dialog;<br/>
            - Link in case of showing the Link Properties gialog;<br/>
            - DataSourceObject in case of showing the DataSource Properties dialog.</para>
            	<para>Displaying of the dialog may be aborted by setting the the abort parameter to true.</para>
            </remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.AfterPropertiesDialog"></seealso>
            <example>
            	<code title="Example" description="" lang="CS">
            private void queryBuilder1_BeforePropertiesDialog(QueryBuilder sender, ControlOwner controlOwner, ref bool abort)
            {
                String msg = "";
             
                if (controlOwner is UnionSubQuery) // Query Properties dialog (invoked from the design pane context menu)
                {
                    msg = "Do you want to show Query Properties dialog?";
                }
                else if (controlOwner is Link) // Link Properties dialog (invoked from the link context menu)
                {
                    msg = "Do you want to show Link Properties dialog?";
                }
                else if (controlOwner is DataSourceObject) // Datasource Properties dialog (invoked from the datasource context menu)
                {
                    msg = "Do you want to show Datasource Properties dialog?";
                }
             
                if (!String.IsNullOrEmpty(msg))
                {
                    if (MessageBox.Show(msg, "BeforePropertiesDialog event handler", MessageBoxButtons.YesNo) == DialogResult.No)
                    {
                        abort = true;
                    }
                }
            }</code>
            </example>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.AfterPropertiesDialog">
            <summary>Invoked after any of the properties dialogs (Sub-query, DataSource, Link properties) are closed.</summary>
            <remarks>The controlOwner parameter can be one of the following:<br/>
            - UnionSubQuery in case of showing the Query Properties dialog;<br/>
            - Link in case of showing the Link Properties gialog;<br/>
            - DataSourceObject in case of showing the DataSource Properties dialog.</remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.BeforePropertiesDialog"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DatasourceFieldAdding">
            <summary>Invoked when Field is about to be added to the query by checking it at the DataSource field list.</summary>
            <remarks>
            	<para>The field and datasource parameters refer to the DataSource field being added.</para>
            	<para>Set the abort parameter to true to deny addition of the Field.</para>
            </remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DataSourceAdded"></seealso>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.GridCellValueChanging"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DatasourceFieldAdded">
            <summary>Invoked when Field is added to the query by checking it at the DataSource field list.</summary>
            <remarks>
            	<para>The field and datasource parameters refer to the newly added DataSource field.</para>
            	<para>You can use this event to specify alias or some other query column properties.</para>
            </remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DatasourceFieldAdding"></seealso>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.GridCellValueChanged"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DatasourceFieldRemoving">
            <summary>Invoked when Field is about to be deleted from the query by unchecking it at the DataSource field list.</summary>
            <remarks>
            	<para>The field and datasource parameters refer to the DataSource field being deleted.</para>
            	<para>Set the abort parameter to true to deny removal of the Field.</para>
            </remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DatasourceFieldRemoved"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DatasourceFieldRemoved">
            <summary>Invoked when Field is removed from the query by unchecking it at the DataSource field list.</summary>
            <remarks>The field and datasource parameters refer to the removed DataSource field.</remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DatasourceFieldRemoving"></seealso>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SQLUpdated">
            <summary>Occurs each time the component updates the output SQL query text.</summary>
            <remarks>
            	<para>Read the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SQL">QueryBuilder.SQL Property</see> or the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.PlainTextSQLBuilder.SQL">PlainTextSQLBuilder.SQL Property</see> to get updated SQL query text.</para>
            	<para>Read the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.QueryStatistics"/> to get updated information about the query.</para>
            </remarks>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LanguageChanged">
            <summary>Fired on changing the Language property.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ControlCreated">
            <summary>Invoked when a control is created inside the component.</summary>
            <remarks>
            	<para>Use this event to customize internal controls and to add additional controls to the component.</para>
            	<para>The following combination of control and owner parameters are possible:</para>
            	<para>- owner is Query; control is TabPage (main query tab).<br/>
            - owner is SubQuery; control is TabPage (sub-query tabs).<br/>
            - owner is QueryColumnList; control is QueryColumnListControl.<br/>
            - owner is DataSourceObject; control is DataSourceControl (database objects at Design Pane).<br/>
            - owner is DataSourceQuery; control is DataSourceControl (sub-queries at Design Pane).<br/>
            - owner is Link; control is LinkControl.<br/>
            - owner is UnionSubQuery; control is UnionSubQueryPanel (you can get the link to DesignPane object here using the
            UnionSubQuery.DesignPane.GetControl method).<br/>
            - owner is UnionSubQuery; control is UnionButton.<br/>
            - owner is UnionSubQuery; control is UnionOperator.<br/>
            - owner is UnionGroup; control is LeftBracket.<br/>
            - owner is UnionGroup; control is RightBracket.<br/>
            - owner is UnionGroup; control is UnionOperator.</para>
            </remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ControlDestroying"></seealso>
            <example>
            	<code title="ControlCreated event sample" description="Adds button at the top of each sub-query DataSource control." lang="CS">
            private void queryBuilder1_ControlCreated(ControlOwner owner, Control control)
            {
                if (owner is DataSourceQuery &amp;&amp; control is DataSourceControl)
                {
                    DataSourceControl dataSourceControl = (DataSourceControl) control;
             
                    // insert a small button above fields list
                    Button customButton = new Button();
                    customButton.Height = dataSourceControl.FieldList.ItemHeight;
                    customButton.Dock = DockStyle.Top;
                    customButton.Click += customButton_Click;
                    dataSourceControl.Controls.Add(customButton);
                }
            }</code>
            </example>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ControlDestroying">
            <summary>Invoked before the control is destroyed inside the component.</summary>
            <remarks>Use this event to free resources and unbound events created in the <see cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ControlCreated">ControlCreated Event</see></remarks>
            <example>
            	<code title="ControlDestroying event sample" description="Removes button at the top of each sub-query DataSource control created in the ControlCreated event handler." lang="CS">
            private void queryBuilder1_ControlDestroying(ControlOwner owner, Control control)
            {
                if (owner is DataSourceQuery &amp;&amp; control is DataSourceControl)
                {
                    DataSourceControl dataSourceControl = (DataSourceControl) control;
             
                    foreach (Control c in dataSourceControl.Controls)
                    {
                        if (c is Button)
                        {
                            // remove event handler to avoid memory leak
                            c.Click -= customButton_Click;
                            break;
                        }
                    }
                }
            }</code>
            </example>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.UserMessage">
            <summary>Fired when the component is about to show the warning message to the user.</summary>
            <remarks>
            	<para>You can avoid displaying of the warning message by handling this event.</para>
            	<para>Currently it is fired when multiple columns with same name appear in sub-queries in result of user actions as this may lead to inconsistence in the
            calling sub-query.</para>
            	<para>See the <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.UserMessageEventArgs"/> class for details.</para>
            </remarks>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.GetDiagramObjectWidth">
            <summary>Called to calculate width of the newly added datasource.</summary>
            <example>
            	<code title="GetDataSourceWidth event sample" description="Sets the DataSource control width according to width of it's fields." lang="CS">
            private void queryBuilder1_GetDataSourceWidth(QueryBuilder queryBuilder, DataSource datasource, ref int width)
            {
                DataSourceControl dsControl = (DataSourceControl) datasource.DSControl.GetControl();
                DataSourceFieldList flControl = dsControl.FieldList;
                Font font = queryBuilder.DiagramObjectFont;
                int maxWidth = 0;
             
                using (Graphics g = CreateGraphics())
                {
                    foreach (TextAndObject item in flControl.Items)
                    {
                        maxWidth = (int) Math.Max(g.MeasureString(item.ToString(), Font).Width, maxWidth);
                    }
                }
             
                int extra = 45; // width of checkbox, key mark column and borders
                width = maxWidth + extra;
            }</code>
            </example>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.GetProcedureParameters">
            <summary>Fired when the component requests parameter values for stored procedure or function.</summary>
            <remarks>You can avoid displaying of the dialog requesting the user for parameter values by handling this event.</remarks>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.GetDataSourceFieldToolTipText">
            <summary>Fired to request the tooltip text for fields in the Datasource field list.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.GetDatabaseSchemaTreeToolTipText">
            <summary>Fired to request the tooltip text for objects in the Database Schema Tree.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DesignPaneLayoutChanged">
            <summary>Fired when layout of objects on the design pane is changed.</summary>
        </member>
        <member name="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataStructureChanged">
            <summary>Fired when MetadataStructure property changed.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.Language">
             <summary>   Gets or sets the language. </summary>
            
             <value> The language. </value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.OfflineMode">
            <summary>Allows to switch the component between normal and "Offline" modes.</summary>
            <remarks>
            	<para>The Offline mode is intended to suppress background query execution by the component. In normal mode the component retrieves field lists for objects used in
            the query and the lists of database objects by demand. Working in the Offline mode you have to provide the way to load the necessary information
            programmatically.</para>
            	<para>You can use the <see cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ItemMetadataLoading">MetadataContainer.ItemMetadataLoading Event</see> for this purpose. To decrease metadata loading time and
            to limit the objects visible to the end-user you can define <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataLoadingOptions">metadata filters</see> to limit the number of objects loaded at a time, or you
            can <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ExportFromXML">save</see> the content of Metadata Container to the XML file and <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataContainer.ImportFromXML">load</see> metadata from the XML
            file or stream.</para>
            </remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SyntaxProvider">
            <summary>Gets or sets a reference to the Syntax Provider object used to define SQL syntax rules of specific database servers.</summary>
            <remarks>Syntax Provider is also used to define SQL statements intended for metadata retrieval process.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataProvider"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataProvider">
            <summary>Gets or sets a reference to the Metadata Provider object used to retrieve metadata from a database or from another source.</summary>
            <remarks>
            	<para>Active Query Builder has metadata providers for most popular ADO.NET drivers and a Universal metadata provider to get access to a database trough generic
            <see cref="T:System.Data.Common.DBConnection">DBConnection</see> object.</para>
            	<para>Metadata Provider is not the only necessary object to retrieve metadata. You should also set a reference to a Syntax Provider via the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SyntaxProvider">SyntaxProvider
            Property</see>.</para>
            </remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SQLContext">
            <summary>Determines context of the query building, parsing and SQL generation processes.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.Query">
            <summary>Provides access to the main Query object.</summary>
            <remarks>Using this property you can get access to the full set of internal query representation objects: sub-queries and sub-query parts.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ActiveSubQuery"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ResultQueryAST">
            <summary>Gets the abstract sytnax tree of result SQL query.</summary>
            <remarks>The abstract syntax tree is a lowest query representation level that treats SQL query as a set of tokens. Higher level of the query representation objects is
            avaialble via the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.Query"/> property.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ActiveSubQuery">
            <summary>Provides access to the currently visible to end-user sub-query.</summary>
            <remarks>
            	<para>Read the QueryBuilder.ActiveSubQuery.ActiveUnionSubQuery reference to get access to the currently active union sub-query. SubQuery object is a
            container for the UnionSubQuery objects joined with one of the following operators UNION, EXCEPT, INTERSECT, MINUS. A SubQuery contains single UnionSubQuery
            object if it doesn't have unions.</para>
            </remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.Query"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SubQueries">
            <summary>Lists all sub-queries in the query.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.Query"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SQL">
            <summary>Use this property to get or set SQL query text in response to user actions.</summary>
            <remarks>
            	<para>Write this property to parse a query and to represent it visually. Read this property to retrieve SQL text to execute against a database server.</para>
            </remarks>
            <seealso cref="E:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SQLUpdated"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataContainer">
            <summary>Returns a reference to the Metadata Container, an object to hold information about database schema, database objects and their attributes.</summary>
            <remarks>Use the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataLoadingOptions"/> property to limit the set of database objects loaded to the Metadata Container. You can also add and remove the items of
            the Metadata Container programmatically via this property.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataStructure">
            <summary>Gets or sets the reference to the Metadata Structure object that represents the content of Metadata Container in a tree-like form.</summary>
            <remarks>
            	<para>You can modify the metadata structure to group the database objects not by the physical database schema structure (database-schema-type, etc.), but
            define your own logical structure, i.e. group objects by their subject area or to move the most frequently used objects to the "Favorites" folder, etc.</para>
            	<para>You can perform fine tuning of the metadata structure representation via the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataStructureOptions"/> property.</para>
            	<para>You can assign custom Metadata Structure objects to this property to switch between different metadata structure representations.</para>
            </remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.Parameters">
            <summary>Allows to retrieve information about parameters that were used in the query.</summary>
            <remarks>
            	<see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.Parameter.Symbol">List of acceptable parameter notations</see>
            </remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.QueryStatistics">
            <summary>Allows to retrieve various information about the query: list of used database objects and their fields, list of output query columns.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.QueryStructureTree">
            <summary>Returns an interface to the Query Structure Tree View control.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DatabaseSchemaTree"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DatabaseSchemaTree">
            <summary>Returns an interface to the Database Schema Tree View control.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.IsUpdating">
            <summary>Indicates that the component is in update mode now.</summary>
            <remarks>The update mode is initialzed via the <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.BeginUpdate">BeginUodate Method</see> and finalized via the <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.EndUpdate">EndUpdate Metod</see>.</remarks>
            <seealso cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.EndUpdate"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.Tabs">
            <summary>Returns an interface to the Sub-Query Tab control.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataLoadingOptions">
            <summary>Determines rules of loading database schema information to the Metadata Container.</summary>
            <remarks>Definition of these rules might be needed to limit the list of database objects displayed, as well as to reduce metadata loading time for some database servers
            (eg. Oracle).<br/>
            Formerly named as <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataFilter">MetadataFilter</see>, the new option set introduces a simpler way to define metadata
            loading rules using <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.ExcludeFilter">ExcludeFilter</see> and <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataLoadingOptions.IncludeFilter">IncludeFilter</see> mask sets and other
            properties, among with old way that provides higher flexibility in defining metadata filtration rules.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SQLGenerationOptions">
            <summary>Determines SQL query text generation rules for the QueryBuilder.SQL property.</summary>
            <remarks>SQL Generation Options control the display of object names and expressions during the visual query building process (see the
            <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.ObjectPrefixSkipping">ObjectPrefixSkipping</see>, 
            <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.SQLGenerationOptions.QuoteAllIdentifiers">QuoteAllIdentifiers</see> and
            <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.UseAltNames">UseAltNames</see> properties).</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.BehaviorOptions">
            <summary>Allows you to tune the way Active Query Builder parses and builds SQL queries.</summary>
            <remarks>The <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.ParsingErrorOnUnknownObjects">ParsingErrorOnUnknownObjects</see> and <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.AllowSleepMode">AllowSleepMode</see> properties
            determine the way Active Query Builder process SQL query parsing errors.<br/>
            The <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.CreateLinksFromForeignKeys">CreateLinksFromForeignKeys</see> and <see cref="T:ActiveDatabaseSoftware.ActiveQueryBuilder.LinkManipulations">LinkManipulations</see> properties define rules of
            working with links (joins) between query objects.<br/>
            The <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.AddLinkedObjects">AddLinkedObjects</see> and <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.DeleteUnusedObjects">DeleteUnusedObjects</see> properties allow you to automate addition
            of necessary query objects and removing of needless ones.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SQLGenerationOptions"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DataSourceOptions">
            <summary>Contains various properties of the Design Pane.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DesignPaneOptions"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.VisualOptions">
            <summary>Contains visual options that are not related to any pane.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.PanesConfigurationOptions">
            <summary>Allows you to configure layout of the main parts of the component: Design Pane, Query Columns List, Database Schema Tree and Query
            Structure Tree.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.VisualOptions"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DesignPaneOptions">
            <summary>Determines appearance of the objects within the Design Pane.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DataSourceOptions"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.AddObjectFormOptions">
            <summary>Determines appearance of the Add Object Form.</summary>
            <remarks>The Add Object Form allows you to add objects (database objects and CTE) to the query. You can call it using the <see cref="M:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ShowAddObjectForm">ShowAddObjectForm
            method</see>. The user can open this form using Design Pane context menu. You can disable this form completely using the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.AddObjectFormOptions.FormEnabled">FormEnabled
            property</see>.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.QueryStructureTreeOptions">
            <summary>Contains various properties of the Query Structure Tree.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DatabaseSchemaTreeOptions">
            <summary>Contains various properties of the Database Schema Tree control.</summary>
            <remarks>Use the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataStructureOptions"/> to organize objects within the Database Schema Tree the way you need.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.QueryStructureTreeOptions"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.QueryColumnListOptions">
            <summary>Contains various properties of the Query Column List control.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.MetadataStructureOptions">
            <summary>Contains various properties that affect on displaying of the Metadata Structure.</summary>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.LayoutSQL">
            <summary>Gets or sets the SQL query text among with layout, i.e. sizes and positions of objects within the Design Pane in XML format.</summary>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SQL"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SleepMode">
            <summary>Indicates that the component is in the "Sleep" Mode.</summary>
            <remarks>In the Sleep mode the component suppresses parsing errors on unsupported SQL statements to allow writing them by hand in the text editor.</remarks>
            <seealso cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.BehaviorOptions.AllowSleepMode"></seealso>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.DefaultImageList">
            <summary>Gets the list of default icons.</summary>
            <remarks>You can override icons in this list or you can set your own image lists via the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryStructureTreeOptions.ImageList"/>, the
            <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataStructureOptions.ImageList"/> and the <see cref="P:ActiveDatabaseSoftware.ActiveQueryBuilder.VisualOptions.TabsImageList"/>.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.UseDevExpressControls">
            <summary>Allows to switch component's visual controls from standard .NET controls to <see cref="!:http://devexpress.com/Products/NET/Controls/WinForms">DevExpress WinForms controls</see>.</summary>
            <remarks>Requires ActiveDatabaseSoftware.DevExpressControlFactory assembly to activate DevExperss user interface. It is available as a part of
            Professional .NET Subscription only.</remarks>
            <requirements>DevExpress WinForms Controls</requirements>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.OverrideDevExpressThemeColors">
            <summary> Gets or sets a value indicating whether to override DevExpress controls theme colors. </summary>
            <remarks>Requires ActiveDatabaseSoftware.DevExpressControlFactory assembly to activate DevExperss user interface. It is available as a part of
            Professional .NET Subscription only.</remarks>
            <requirements>DevExpress WinForms Controls</requirements>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.ExpressionEditor">
            <summary>Gets or sets a reference to the Expression Editor interface that allows to edit SQL expressions and criteria in a multi-line text editor with
            code auto-completion and syntax highlight.</summary>
            <remarks>The Expression Editor editor is shipped as a part of the Professional .NET Subscription only.</remarks>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.RightToLeftLayout">
            <summary>Gets or sets a value indicating whether right-to-left mirror placement is turned on.</summary>
            <value>true if right-to-left mirror placement is turned on; otherwise, false for standard child control placement. The default is false.</value>
        </member>
        <member name="P:ActiveDatabaseSoftware.ActiveQueryBuilder.QueryBuilder.SQLChanging">
            <summary>Indicates that the process of updating the query is running now.</summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.LoadingWizardPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.LoadingWizardPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.LoadingWizardPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.FilterWizardPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.FilterWizardPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.FilterWizardPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.LoadOptsWizardPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.LoadOptsWizardPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.LoadOptsWizardPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataOptsWizardPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataOptsWizardPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataOptsWizardPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataWizardPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataWizardPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.MetadataWizardPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.SyntaxWizardPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SyntaxWizardPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.SyntaxWizardPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:ActiveDatabaseSoftware.ActiveQueryBuilder.WelcomeWizardPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.WelcomeWizardPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:ActiveDatabaseSoftware.ActiveQueryBuilder.WelcomeWizardPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>

<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PFCollectionsObjects</name>
    </assembly>
    <members>
        <member name="T:PFCollectionsObjects.PFKeyValueListSorted`2">
            <summary>
            Class to manage list of sorted key/value pairs. List can be saved or written from and to XML.
            </summary>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.SetToBOF">
            <summary>
            Used to setup a while(myList.NextItem) loop. NextItem will return first element in the collection after this method is run.
            </summary>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.ConvertThisToPFKeyValueList">
            <summary>
            Converts PFKeyValueListSorted object to PFKeyValueList object.
            </summary>
            <returns>PFKeyValueList object.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.ConvertPFKeyValueListToSortedList(PFCollectionsObjects.PFKeyValueList{`0,`1})">
            <summary>
            Converts PFKeyValueList object to PFKeyValueListSorted object.
            </summary>
            <param name="kvlist"></param>
            <returns>PFKeyValueListSorted object.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.SaveToXmlFile(System.String)">
            <summary>
            Saves the public property values contained in the current instance to the specified file. Serialization is used for the save.
            </summary>
            <param name="filePath">Full path for output file.</param>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.SaveToXmlFile(System.String,System.String,System.String)">
            <summary>
            Saves the public property values contained in the current instance to an encrypted file. Key and IV parameters are used
            to specify an AES encryption. Serialization is used to get the object values into an XML string that will be encrypted and
            written to the output file.
            </summary>
            <param name="filePath">Full path for output file.</param>
            <param name="key">AES encryption key.</param>
            <param name="iv">AES IV value.</param>
            <remarks>Only AES encryption is supported by this routine.</remarks>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.LoadFromXmlFile(System.String)">
            <summary>
            Creates and initializes an instance of the class by loading a serialized version of the instance from a file.
            </summary>
            <param name="filePath">Full path for the input file.</param>
            <returns>An instance of PFKeyValueList.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.LoadFromXmlFile(System.String,System.String,System.String)">
            <summary>
            Creates and initializes an instance of the class by loading a serialized version of the instance stored in an encrypted file.
            The file is first decrypted into an XML string and the XML string is then used to create an instance of the class.
            </summary>
            <param name="filePath">Full path for the input file.</param>
            <param name="key">AES encryption key.</param>
            <param name="iv">AES IV value.</param>
            <returns>An instance of PFKeyValueList.</returns>
            <remarks>Only AES encryption is supported by this routine.</remarks>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.ToString">
            <summary>
            Routine overrides default ToString method and outputs name, type, scope and value for all class properties and fields.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.PropertiesToString">
            <summary>
            Routine outputs name and value for all properties.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.FieldsToString">
            <summary>
            Routine outputs name and value for all fields.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.ToXmlString">
            <summary>
            Returns a string containing the contents of the object in XML format.
            </summary>
            <returns>String value in xml format.</returns>
            ///<remarks>XML Serialization is used for the transformation.</remarks>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.LoadFromXmlString(System.String)">
            <summary>
            Creates and initializes an instance of the class by loading a serialized version of the instance stored as a xml formatted string.
            </summary>
            <param name="xmlString">String containing the xml formatted representation of an instance of this class.</param>
            <returns>An instance of PFKeyValueList.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.ToXmlDocument">
            <summary>
            Converts instance of this class into an XML document.
            </summary>
            <returns>XmlDocument</returns>
            ///<remarks>XML Serialization and XmlDocument class are used for the transformation.</remarks>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.ConcatenateLists(PFCollectionsObjects.PFKeyValueListSorted{`0,`1}[])">
            <summary>
            Routine that concatenates two or more lists into one list.
            </summary>
            <param name="lists">Array of list objects to be concatenated.</param>
            <returns>Concatenated list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.ConcatenateLists(PFCollectionsObjects.PFList{PFCollectionsObjects.PFKeyValueListSorted{`0,`1}})">
            <summary>
            Routine that concatenates two or more lists into one list.
            </summary>
            <param name="lists">List of list objects to be concatenated.</param>
            <returns>Concatenated list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.Merge(PFCollectionsObjects.PFKeyValueListSorted{`0,`1})">
            <summary>
            Merges current list with the list specified in the parameter.
            </summary>
            <param name="list">List to merge with.</param>
            <returns>Merged list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.Merge(PFCollectionsObjects.PFKeyValueListSorted{`0,`1}[])">
            <summary>
            Merges current list with the array of lists specified in the parameter.
            </summary>
            <param name="lists">Lists to merge with.</param>
            <returns>Merged list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.Merge(PFCollectionsObjects.PFList{PFCollectionsObjects.PFKeyValueListSorted{`0,`1}})">
            <summary>
            Merges current list with the list of lists specified in the parameter.
            </summary>
            <param name="lists">Lists to merge with.</param>
            <returns>Merged list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.Copy">
            <summary>
            Copies current list to a new list.
            </summary>
            <returns>Copy of list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListSorted`2.Randomize">
            <summary>
            Produces a copy of this list in which the item order has been randomized.
            </summary>
            <returns>List containing items in random order.</returns>
        </member>
        <member name="P:PFCollectionsObjects.PFKeyValueListSorted`2.EOF">
            <summary>
            EOF Property. Is true if current position is not pointing to any item in the collection.
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFKeyValueListSorted`2.CurrentItem">
            <summary>
            Current item selected from collection by latest navigation method (FirstItem, LastItem, NextItem, PrevItem).
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFKeyValueListSorted`2.FirstItem">
            <summary>
            Selects first item in the collection. Returns null if no items in the collection. Returns null if there are no items in the collection.
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFKeyValueListSorted`2.LastItem">
            <summary>
            Selects the last item in the collection. Returns null if there are no items in the collection.
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFKeyValueListSorted`2.NextItem">
            <summary>
            Moves to and selects next item in the collection that follows the currently selected item. Returns null if navigation moves past the last item in the collection.
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFKeyValueListSorted`2.PrevItem">
            <summary>
            Navigates to and selects the previous item in the collection. Return null if navigation moves past the first item in the collection.
            </summary>
        </member>
        <member name="T:PFListObjects.PFListComparers">
            <summary>
            Set of methods for allowing the sorting of key lists.
            </summary>
        </member>
        <member name="M:PFListObjects.PFListComparers.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:PFListObjects.PFListComparers.CompareListString(System.String,System.String)">
            <summary>
            Compares two strings.
            </summary>
            <param name="x">First string to compare.</param>
            <param name="y">Second string to compare.</param>
            <returns>Less than zero: x precedes y in the sort order.  Zero: x occurs in the same position in the sort order as y. Greater than zero: x follows y in the sort order. </returns>
        </member>
        <member name="M:PFListObjects.PFListComparers.CompareListInt(System.Int32,System.Int32)">
            <summary>
            Compares two int values.
            </summary>
            <param name="x">First int to compare.</param>
            <param name="y">Second int to compare.</param>
            <returns>Less than zero: x precedes y in the sort order.  Zero: x occurs in the same position in the sort order as y. Greater than zero: x follows y in the sort order. </returns>
        </member>
        <member name="M:PFListObjects.PFListComparers.CompareListLong(System.Int64,System.Int64)">
            <summary>
            Compares two long values.
            </summary>
            <param name="x">First long to compare.</param>
            <param name="y">Second long to compare.</param>
            <returns>Less than zero: x precedes y in the sort order.  Zero: x occurs in the same position in the sort order as y. Greater than zero: x follows y in the sort order. </returns>
        </member>
        <member name="M:PFListObjects.PFListComparers.CompareListDouble(System.Double,System.Double)">
            <summary>
            Compares two double values.
            </summary>
            <param name="x">First double to compare.</param>
            <param name="y">Second double to compare.</param>
            <returns>Less than zero: x precedes y in the sort order.  Zero: x occurs in the same position in the sort order as y. Greater than zero: x follows y in the sort order. </returns>
        </member>
        <member name="M:PFListObjects.PFListComparers.CompareListDecimal(System.Decimal,System.Decimal)">
            <summary>
            Compares two decimal values.
            </summary>
            <param name="x">First decimal to compare.</param>
            <param name="y">Second decimal to compare.</param>
            <returns>Less than zero: x precedes y in the sort order.  Zero: x occurs in the same position in the sort order as y. Greater than zero: x follows y in the sort order. </returns>
        </member>
        <member name="M:PFListObjects.PFListComparers.CompareListDateTime(System.DateTime,System.DateTime)">
            <summary>
            Compares two DateTime values.
            </summary>
            <param name="x">First DateTime to compare.</param>
            <param name="y">Second DateTime to compare.</param>
            <returns>Less than zero: x precedes y in the sort order.  Zero: x occurs in the same position in the sort order as y. Greater than zero: x follows y in the sort order. </returns>
        </member>
        <member name="T:PFCollectionsObjects.PFList`1">
            <summary>
            Class inherits from generic List class and implements extra navigation methods. List can be save to either XML or to a database.
            </summary>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.SetToBOF">
            <summary>
            Used to setup a while(myList.NextItem) loop. NextItem will return first element in the collection after this method is run.
            </summary>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.SaveToXmlFile(System.String)">
            <summary>
            Saves the public property values contained in the current instance to the specified file. Serialization is used for the save.
            </summary>
            <param name="filePath">Full path for output file.</param>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.SaveToXmlFile(System.String,System.String,System.String)">
            <summary>
            Saves the public property values contained in the current instance to an encrypted file. Key and IV parameters are used
            to specify an AES encryption. Serialization is used to get the object values into an XML string that will be encrypted and
            written to the output file.
            </summary>
            <param name="filePath">Full path for output file.</param>
            <param name="key">AES encryption key.</param>
            <param name="iv">AES IV value.</param>
            <remarks>Only AES encryption is supported by this routine.</remarks>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.LoadFromXmlFile(System.String)">
            <summary>
            Creates and initializes an instance of the class by loading a serialized version of the instance from a file.
            </summary>
            <param name="filePath">Full path for the input file.</param>
            <returns>An instance of PFListEx.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.LoadFromXmlFile(System.String,System.String,System.String)">
            <summary>
            Creates and initializes an instance of the class by loading a serialized version of the instance stored in an encrypted file.
            The file is first decrypted into an XML string and the XML string is then used to create an instance of the class.
            </summary>
            <param name="filePath">Full path for the input file.</param>
            <param name="key">AES encryption key.</param>
            <param name="iv">AES IV value.</param>
            <returns>An instance of PFListEx.</returns>
            <remarks>Only AES encryption is supported by this routine.</remarks>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.ToString">
            <summary>
            Routine overrides default ToString method and outputs name, type, scope and value for all class properties and fields.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.PropertiesToString">
            <summary>
            Routine outputs name and value for all properties.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.FieldsToString">
            <summary>
            Routine outputs name and value for all fields.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.ToXmlString">
            <summary>
            Returns a string containing the contents of the object in XML format.
            </summary>
            <returns>String value in xml format.</returns>
            ///<remarks>XML Serialization is used for the transformation.</remarks>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.LoadFromXmlString(System.String)">
            <summary>
            Creates and initializes an instance of the class by loading a serialized version of the instance stored as a xml formatted string.
            </summary>
            <param name="xmlString">String containing the xml formatted representation of an instance of this class.</param>
            <returns>An instance of PFListEx generic object.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.ToXmlDocument">
            <summary>
            Converts instance of this class into an XML document.
            </summary>
            <returns>XmlDocument</returns>
            ///<remarks>XML Serialization and XmlDocument class are used for the transformation.</remarks>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.ConcatenateLists(PFCollectionsObjects.PFList{`0}[])">
            <summary>
            Routine that concatenates two or more lists into one list.
            </summary>
            <param name="lists">Array of list objects to be concatenated.</param>
            <returns>Concatenated list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.ConcatenateLists(PFCollectionsObjects.PFList{PFCollectionsObjects.PFList{`0}})">
            <summary>
            Routine that concatenates two or more lists into one list.
            </summary>
            <param name="lists">List of list objects to be concatenated.</param>
            <returns>Concatenated list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.Merge(PFCollectionsObjects.PFList{`0})">
            <summary>
            Merges current list with the list specified in the parameter.
            </summary>
            <param name="list">List to merge with.</param>
            <returns>Merged list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.Merge(PFCollectionsObjects.PFList{`0}[])">
            <summary>
            Merges current list with the array of lists specified in the parameter.
            </summary>
            <param name="lists">Lists to merge with.</param>
            <returns>Merged list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.Merge(PFCollectionsObjects.PFList{PFCollectionsObjects.PFList{`0}})">
            <summary>
            Merges current list with the list of lists specified in the parameter.
            </summary>
            <param name="lists">Lists to merge with.</param>
            <returns>Merged list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.Copy">
            <summary>
            Copies current list to a new list.
            </summary>
            <returns>Copy of list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFList`1.Randomize">
            <summary>
            Produces a copy of this list in which the item order has been randomized.
            </summary>
            <returns>List containing items in random order.</returns>
        </member>
        <member name="P:PFCollectionsObjects.PFList`1.EOF">
            <summary>
            EOF Property. Is true if current position is not pointing to any item in the collection.
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFList`1.CurrentItem">
            <summary>
            Current item selected from collection by latest navigation method (FirstItem, LastItem, NextItem, PrevItem).
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFList`1.FirstItem">
            <summary>
            Selects first item in the collection. Returns null if no items in the collection. Returns null if there are no items in the collection.
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFList`1.LastItem">
            <summary>
            Selects the last item in the collection. Returns null if there are no items in the collection.
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFList`1.NextItem">
            <summary>
            Moves to and selects next item in the collection that follows the currently selected item. Returns null if navigation moves past the last item in the collection.
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFList`1.PrevItem">
            <summary>
            Navigates to and selects the previous item in the collection. Return null if navigation moves past the first item in the collection.
            </summary>
        </member>
        <member name="T:PFCollectionsObjects.PFKeyValueList`2">
            <summary>
            Class to manage list of key/value pairs. List can be save to either XML or to a database.
            </summary>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.SetToBOF">
            <summary>
            Used to setup a while(myList.NextItem) loop. NextItem will return first element in the collection after this method is run.
            </summary>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.CopyThisToPFKeyValueList">
            <summary>
            Converts currentg instance to another PFKeyValueList object.
            </summary>
            <returns>PFKeyValueList object.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.ConvertThisToPFList">
            <summary>
            Converts current instance of a PFKeyValueList object to PFList object.
            </summary>
            <returns>PFList object.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.Find(System.String)">
            <summary>
            Searches for and returns key/value pair that has matching key.
            </summary>
            <param name="keyToFind">Key to search for.</param>
            <returns>Object containing key and value. Returns empty key/val object if not found.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.Exists(System.String)">
            <summary>
            Determines if specified key exists in the list.
            </summary>
            <param name="keyToFind">Key to search for.</param>
            <returns>Returns true if found.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.Remove(System.String)">
            <summary>
            Removes the item identified by the specified key from the list.
            </summary>
            <param name="keyToRemove">Key to search for and remove.</param>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.SaveToXmlFile(System.String)">
            <summary>
            Saves the public property values contained in the current instance to the specified file. Serialization is used for the save.
            </summary>
            <param name="filePath">Full path for output file.</param>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.SaveToXmlFile(System.String,System.String,System.String)">
            <summary>
            Saves the public property values contained in the current instance to an encrypted file. Key and IV parameters are used
            to specify an AES encryption. Serialization is used to get the object values into an XML string that will be encrypted and
            written to the output file.
            </summary>
            <param name="filePath">Full path for output file.</param>
            <param name="key">AES encryption key.</param>
            <param name="iv">AES IV value.</param>
            <remarks>Only AES encryption is supported by this routine.</remarks>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.LoadFromXmlFile(System.String)">
            <summary>
            Creates and initializes an instance of the class by loading a serialized version of the instance from a file.
            </summary>
            <param name="filePath">Full path for the input file.</param>
            <returns>An instance of PFKeyValueList.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.LoadFromXmlFile(System.String,System.String,System.String)">
            <summary>
            Creates and initializes an instance of the class by loading a serialized version of the instance stored in an encrypted file.
            The file is first decrypted into an XML string and the XML string is then used to create an instance of the class.
            </summary>
            <param name="filePath">Full path for the input file.</param>
            <param name="key">AES encryption key.</param>
            <param name="iv">AES IV value.</param>
            <returns>An instance of PFKeyValueList.</returns>
            <remarks>Only AES encryption is supported by this routine.</remarks>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.ToString">
            <summary>
            Routine overrides default ToString method and outputs name, type, scope and value for all class properties and fields.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.PropertiesToString">
            <summary>
            Routine outputs name and value for all properties.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.FieldsToString">
            <summary>
            Routine outputs name and value for all fields.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.ToXmlString">
            <summary>
            Returns a string containing the contents of the object in XML format.
            </summary>
            <returns>String value in xml format.</returns>
            ///<remarks>XML Serialization is used for the transformation.</remarks>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.LoadFromXmlString(System.String)">
            <summary>
            Creates and initializes an instance of the class by loading a serialized version of the instance stored as a xml formatted string.
            </summary>
            <param name="xmlString">String containing the xml formatted representation of an instance of this class.</param>
            <returns>An instance of PFKeyValueList.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.ToXmlDocument">
            <summary>
            Converts instance of this class into an XML document.
            </summary>
            <returns>XmlDocument</returns>
            ///<remarks>XML Serialization and XmlDocument class are used for the transformation.</remarks>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.ConcatenateLists(PFCollectionsObjects.PFKeyValueList{`0,`1}[])">
            <summary>
            Routine that concatenates two or more lists into one list.
            </summary>
            <param name="lists">Array of list objects to be concatenated.</param>
            <returns>Concatenated list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.ConcatenateLists(PFCollectionsObjects.PFList{PFCollectionsObjects.PFKeyValueList{`0,`1}})">
            <summary>
            Routine that concatenates two or more lists into one list.
            </summary>
            <param name="lists">List of list objects to be concatenated.</param>
            <returns>Concatenated list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.Merge(PFCollectionsObjects.PFKeyValueList{`0,`1})">
            <summary>
            Merges current list with the list specified in the parameter.
            </summary>
            <param name="list">List to merge with.</param>
            <returns>Merged list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.Merge(PFCollectionsObjects.PFKeyValueList{`0,`1}[])">
            <summary>
            Merges current list with the array of lists specified in the parameter.
            </summary>
            <param name="lists">Lists to merge with.</param>
            <returns>Merged list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.Merge(PFCollectionsObjects.PFList{PFCollectionsObjects.PFKeyValueList{`0,`1}})">
            <summary>
            Merges current list with the list of lists specified in the parameter.
            </summary>
            <param name="lists">Lists to merge with.</param>
            <returns>Merged list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.Copy">
            <summary>
            Copies current list to a new list.
            </summary>
            <returns>Copy of list.</returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueList`2.Randomize">
            <summary>
            Produces a copy of this list in which the item order has been randomized.
            </summary>
            <returns>List containing items in random order.</returns>
        </member>
        <member name="P:PFCollectionsObjects.PFKeyValueList`2.EOF">
            <summary>
            EOF Property. Is true if current position is not pointing to any item in the collection.
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFKeyValueList`2.CurrentItem">
            <summary>
            Current item selected from collection by latest navigation method (FirstItem, LastItem, NextItem, PrevItem).
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFKeyValueList`2.FirstItem">
            <summary>
            Selects first item in the collection. Returns null if no items in the collection. Returns null if there are no items in the collection.
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFKeyValueList`2.LastItem">
            <summary>
            Selects the last item in the collection. Returns null if there are no items in the collection.
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFKeyValueList`2.NextItem">
            <summary>
            Moves to and selects next item in the collection that follows the currently selected item. Returns null if navigation moves past the last item in the collection.
            </summary>
        </member>
        <member name="P:PFCollectionsObjects.PFKeyValueList`2.PrevItem">
            <summary>
            Navigates to and selects the previous item in the collection. Return null if navigation moves past the first item in the collection.
            </summary>
        </member>
        <member name="T:PFCollectionsObjects.PFKeyValueListComparers">
            <summary>
            Set of methods for allowing the sorting of key/value lists.
            </summary>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListComparers.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListComparers.CompareKeyValueListIntString(PFCollectionsObjects.stKeyValuePair{System.Int32,System.String},PFCollectionsObjects.stKeyValuePair{System.Int32,System.String})">
            <summary>
            Compares two keys that are int values.
            </summary>
            <param name="x">First key/value pair to compare.</param>
            <param name="y">Second key/value pair to compare.</param>
            <returns>Less than zero: x precedes y in the sort order.  Zero: x occurs in the same position in the sort order as y. Greater than zero: x follows y in the sort order. </returns>
        </member>
        <member name="M:PFCollectionsObjects.PFKeyValueListComparers.CompareKeyValueListStringString(PFCollectionsObjects.stKeyValuePair{System.String,System.String},PFCollectionsObjects.stKeyValuePair{System.String,System.String})">
            <summary>
            Compares two keys that are string values.
            </summary>
            <param name="x">First key/value pair to compare.</param>
            <param name="y">Second key/value pair to compare.</param>
            <returns>Less than zero: x precedes y in the sort order.  Zero: x occurs in the same position in the sort order as y. Greater than zero: x follows y in the sort order. </returns>
        </member>
    </members>
</doc>
